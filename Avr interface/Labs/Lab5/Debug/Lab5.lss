
Lab5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000025ce  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000040  00800060  000025ce  00002642  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         0000183c  00000000  00000000  00002684  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000b70  00000000  00000000  00003ec0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000160  00000000  00000000  00004a30  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 0000018f  00000000  00000000  00004b90  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002045  00000000  00000000  00004d1f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001101  00000000  00000000  00006d64  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f82  00000000  00000000  00007e65  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000180  00000000  00000000  00008de8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002c2  00000000  00000000  00008f68  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000088e  00000000  00000000  0000922a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00009ab8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee ec       	ldi	r30, 0xCE	; 206
      68:	f5 e2       	ldi	r31, 0x25	; 37
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a0 3a       	cpi	r26, 0xA0	; 160
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 d5 10 	call	0x21aa	; 0x21aa <main>
      7a:	0c 94 e5 12 	jmp	0x25ca	; 0x25ca <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 ed 03 	call	0x7da	; 0x7da <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 4d 04 	call	0x89a	; 0x89a <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 4d 04 	call	0x89a	; 0x89a <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 ae 12 	jmp	0x255c	; 0x255c <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 ca 12 	jmp	0x2594	; 0x2594 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 ba 12 	jmp	0x2574	; 0x2574 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 d6 12 	jmp	0x25ac	; 0x25ac <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 ba 12 	jmp	0x2574	; 0x2574 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 d6 12 	jmp	0x25ac	; 0x25ac <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 ae 12 	jmp	0x255c	; 0x255c <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 ca 12 	jmp	0x2594	; 0x2594 <__epilogue_restores__>

00000622 <__divsf3>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 b6 12 	jmp	0x256c	; 0x256c <__prologue_saves__+0x10>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	b9 e0       	ldi	r27, 0x09	; 9
     640:	eb 2e       	mov	r14, r27
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     662:	29 85       	ldd	r18, Y+9	; 0x09
     664:	22 30       	cpi	r18, 0x02	; 2
     666:	08 f4       	brcc	.+2      	; 0x66a <__divsf3+0x48>
     668:	7e c0       	rjmp	.+252    	; 0x766 <__divsf3+0x144>
     66a:	39 89       	ldd	r19, Y+17	; 0x11
     66c:	32 30       	cpi	r19, 0x02	; 2
     66e:	10 f4       	brcc	.+4      	; 0x674 <__divsf3+0x52>
     670:	b8 01       	movw	r22, r16
     672:	7c c0       	rjmp	.+248    	; 0x76c <__divsf3+0x14a>
     674:	8a 85       	ldd	r24, Y+10	; 0x0a
     676:	9a 89       	ldd	r25, Y+18	; 0x12
     678:	89 27       	eor	r24, r25
     67a:	8a 87       	std	Y+10, r24	; 0x0a
     67c:	24 30       	cpi	r18, 0x04	; 4
     67e:	11 f0       	breq	.+4      	; 0x684 <__divsf3+0x62>
     680:	22 30       	cpi	r18, 0x02	; 2
     682:	31 f4       	brne	.+12     	; 0x690 <__divsf3+0x6e>
     684:	23 17       	cp	r18, r19
     686:	09 f0       	breq	.+2      	; 0x68a <__divsf3+0x68>
     688:	6e c0       	rjmp	.+220    	; 0x766 <__divsf3+0x144>
     68a:	60 e6       	ldi	r22, 0x60	; 96
     68c:	70 e0       	ldi	r23, 0x00	; 0
     68e:	6e c0       	rjmp	.+220    	; 0x76c <__divsf3+0x14a>
     690:	34 30       	cpi	r19, 0x04	; 4
     692:	39 f4       	brne	.+14     	; 0x6a2 <__divsf3+0x80>
     694:	1d 86       	std	Y+13, r1	; 0x0d
     696:	1e 86       	std	Y+14, r1	; 0x0e
     698:	1f 86       	std	Y+15, r1	; 0x0f
     69a:	18 8a       	std	Y+16, r1	; 0x10
     69c:	1c 86       	std	Y+12, r1	; 0x0c
     69e:	1b 86       	std	Y+11, r1	; 0x0b
     6a0:	04 c0       	rjmp	.+8      	; 0x6aa <__divsf3+0x88>
     6a2:	32 30       	cpi	r19, 0x02	; 2
     6a4:	21 f4       	brne	.+8      	; 0x6ae <__divsf3+0x8c>
     6a6:	84 e0       	ldi	r24, 0x04	; 4
     6a8:	89 87       	std	Y+9, r24	; 0x09
     6aa:	b7 01       	movw	r22, r14
     6ac:	5f c0       	rjmp	.+190    	; 0x76c <__divsf3+0x14a>
     6ae:	2b 85       	ldd	r18, Y+11	; 0x0b
     6b0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6b2:	8b 89       	ldd	r24, Y+19	; 0x13
     6b4:	9c 89       	ldd	r25, Y+20	; 0x14
     6b6:	28 1b       	sub	r18, r24
     6b8:	39 0b       	sbc	r19, r25
     6ba:	3c 87       	std	Y+12, r19	; 0x0c
     6bc:	2b 87       	std	Y+11, r18	; 0x0b
     6be:	ed 84       	ldd	r14, Y+13	; 0x0d
     6c0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6c2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6c4:	18 89       	ldd	r17, Y+16	; 0x10
     6c6:	ad 88       	ldd	r10, Y+21	; 0x15
     6c8:	be 88       	ldd	r11, Y+22	; 0x16
     6ca:	cf 88       	ldd	r12, Y+23	; 0x17
     6cc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6ce:	ea 14       	cp	r14, r10
     6d0:	fb 04       	cpc	r15, r11
     6d2:	0c 05       	cpc	r16, r12
     6d4:	1d 05       	cpc	r17, r13
     6d6:	40 f4       	brcc	.+16     	; 0x6e8 <__divsf3+0xc6>
     6d8:	ee 0c       	add	r14, r14
     6da:	ff 1c       	adc	r15, r15
     6dc:	00 1f       	adc	r16, r16
     6de:	11 1f       	adc	r17, r17
     6e0:	21 50       	subi	r18, 0x01	; 1
     6e2:	30 40       	sbci	r19, 0x00	; 0
     6e4:	3c 87       	std	Y+12, r19	; 0x0c
     6e6:	2b 87       	std	Y+11, r18	; 0x0b
     6e8:	20 e0       	ldi	r18, 0x00	; 0
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	40 e0       	ldi	r20, 0x00	; 0
     6ee:	50 e0       	ldi	r21, 0x00	; 0
     6f0:	80 e0       	ldi	r24, 0x00	; 0
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	a0 e0       	ldi	r26, 0x00	; 0
     6f6:	b0 e4       	ldi	r27, 0x40	; 64
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	ea 14       	cp	r14, r10
     6fe:	fb 04       	cpc	r15, r11
     700:	0c 05       	cpc	r16, r12
     702:	1d 05       	cpc	r17, r13
     704:	40 f0       	brcs	.+16     	; 0x716 <__divsf3+0xf4>
     706:	28 2b       	or	r18, r24
     708:	39 2b       	or	r19, r25
     70a:	4a 2b       	or	r20, r26
     70c:	5b 2b       	or	r21, r27
     70e:	ea 18       	sub	r14, r10
     710:	fb 08       	sbc	r15, r11
     712:	0c 09       	sbc	r16, r12
     714:	1d 09       	sbc	r17, r13
     716:	b6 95       	lsr	r27
     718:	a7 95       	ror	r26
     71a:	97 95       	ror	r25
     71c:	87 95       	ror	r24
     71e:	ee 0c       	add	r14, r14
     720:	ff 1c       	adc	r15, r15
     722:	00 1f       	adc	r16, r16
     724:	11 1f       	adc	r17, r17
     726:	6f 5f       	subi	r22, 0xFF	; 255
     728:	7f 4f       	sbci	r23, 0xFF	; 255
     72a:	6f 31       	cpi	r22, 0x1F	; 31
     72c:	71 05       	cpc	r23, r1
     72e:	31 f7       	brne	.-52     	; 0x6fc <__divsf3+0xda>
     730:	da 01       	movw	r26, r20
     732:	c9 01       	movw	r24, r18
     734:	8f 77       	andi	r24, 0x7F	; 127
     736:	90 70       	andi	r25, 0x00	; 0
     738:	a0 70       	andi	r26, 0x00	; 0
     73a:	b0 70       	andi	r27, 0x00	; 0
     73c:	80 34       	cpi	r24, 0x40	; 64
     73e:	91 05       	cpc	r25, r1
     740:	a1 05       	cpc	r26, r1
     742:	b1 05       	cpc	r27, r1
     744:	61 f4       	brne	.+24     	; 0x75e <__divsf3+0x13c>
     746:	27 fd       	sbrc	r18, 7
     748:	0a c0       	rjmp	.+20     	; 0x75e <__divsf3+0x13c>
     74a:	e1 14       	cp	r14, r1
     74c:	f1 04       	cpc	r15, r1
     74e:	01 05       	cpc	r16, r1
     750:	11 05       	cpc	r17, r1
     752:	29 f0       	breq	.+10     	; 0x75e <__divsf3+0x13c>
     754:	20 5c       	subi	r18, 0xC0	; 192
     756:	3f 4f       	sbci	r19, 0xFF	; 255
     758:	4f 4f       	sbci	r20, 0xFF	; 255
     75a:	5f 4f       	sbci	r21, 0xFF	; 255
     75c:	20 78       	andi	r18, 0x80	; 128
     75e:	2d 87       	std	Y+13, r18	; 0x0d
     760:	3e 87       	std	Y+14, r19	; 0x0e
     762:	4f 87       	std	Y+15, r20	; 0x0f
     764:	58 8b       	std	Y+16, r21	; 0x10
     766:	be 01       	movw	r22, r28
     768:	67 5f       	subi	r22, 0xF7	; 247
     76a:	7f 4f       	sbci	r23, 0xFF	; 255
     76c:	cb 01       	movw	r24, r22
     76e:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     772:	68 96       	adiw	r28, 0x18	; 24
     774:	ea e0       	ldi	r30, 0x0A	; 10
     776:	0c 94 d2 12 	jmp	0x25a4	; 0x25a4 <__epilogue_restores__+0x10>

0000077a <__gtsf2>:
     77a:	a8 e1       	ldi	r26, 0x18	; 24
     77c:	b0 e0       	ldi	r27, 0x00	; 0
     77e:	e3 ec       	ldi	r30, 0xC3	; 195
     780:	f3 e0       	ldi	r31, 0x03	; 3
     782:	0c 94 ba 12 	jmp	0x2574	; 0x2574 <__prologue_saves__+0x18>
     786:	69 83       	std	Y+1, r22	; 0x01
     788:	7a 83       	std	Y+2, r23	; 0x02
     78a:	8b 83       	std	Y+3, r24	; 0x03
     78c:	9c 83       	std	Y+4, r25	; 0x04
     78e:	2d 83       	std	Y+5, r18	; 0x05
     790:	3e 83       	std	Y+6, r19	; 0x06
     792:	4f 83       	std	Y+7, r20	; 0x07
     794:	58 87       	std	Y+8, r21	; 0x08
     796:	89 e0       	ldi	r24, 0x09	; 9
     798:	e8 2e       	mov	r14, r24
     79a:	f1 2c       	mov	r15, r1
     79c:	ec 0e       	add	r14, r28
     79e:	fd 1e       	adc	r15, r29
     7a0:	ce 01       	movw	r24, r28
     7a2:	01 96       	adiw	r24, 0x01	; 1
     7a4:	b7 01       	movw	r22, r14
     7a6:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     7aa:	8e 01       	movw	r16, r28
     7ac:	0f 5e       	subi	r16, 0xEF	; 239
     7ae:	1f 4f       	sbci	r17, 0xFF	; 255
     7b0:	ce 01       	movw	r24, r28
     7b2:	05 96       	adiw	r24, 0x05	; 5
     7b4:	b8 01       	movw	r22, r16
     7b6:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     7ba:	89 85       	ldd	r24, Y+9	; 0x09
     7bc:	82 30       	cpi	r24, 0x02	; 2
     7be:	40 f0       	brcs	.+16     	; 0x7d0 <__gtsf2+0x56>
     7c0:	89 89       	ldd	r24, Y+17	; 0x11
     7c2:	82 30       	cpi	r24, 0x02	; 2
     7c4:	28 f0       	brcs	.+10     	; 0x7d0 <__gtsf2+0x56>
     7c6:	c7 01       	movw	r24, r14
     7c8:	b8 01       	movw	r22, r16
     7ca:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fpcmp_parts_f>
     7ce:	01 c0       	rjmp	.+2      	; 0x7d2 <__gtsf2+0x58>
     7d0:	8f ef       	ldi	r24, 0xFF	; 255
     7d2:	68 96       	adiw	r28, 0x18	; 24
     7d4:	e6 e0       	ldi	r30, 0x06	; 6
     7d6:	0c 94 d6 12 	jmp	0x25ac	; 0x25ac <__epilogue_restores__+0x18>

000007da <__gesf2>:
     7da:	a8 e1       	ldi	r26, 0x18	; 24
     7dc:	b0 e0       	ldi	r27, 0x00	; 0
     7de:	e3 ef       	ldi	r30, 0xF3	; 243
     7e0:	f3 e0       	ldi	r31, 0x03	; 3
     7e2:	0c 94 ba 12 	jmp	0x2574	; 0x2574 <__prologue_saves__+0x18>
     7e6:	69 83       	std	Y+1, r22	; 0x01
     7e8:	7a 83       	std	Y+2, r23	; 0x02
     7ea:	8b 83       	std	Y+3, r24	; 0x03
     7ec:	9c 83       	std	Y+4, r25	; 0x04
     7ee:	2d 83       	std	Y+5, r18	; 0x05
     7f0:	3e 83       	std	Y+6, r19	; 0x06
     7f2:	4f 83       	std	Y+7, r20	; 0x07
     7f4:	58 87       	std	Y+8, r21	; 0x08
     7f6:	89 e0       	ldi	r24, 0x09	; 9
     7f8:	e8 2e       	mov	r14, r24
     7fa:	f1 2c       	mov	r15, r1
     7fc:	ec 0e       	add	r14, r28
     7fe:	fd 1e       	adc	r15, r29
     800:	ce 01       	movw	r24, r28
     802:	01 96       	adiw	r24, 0x01	; 1
     804:	b7 01       	movw	r22, r14
     806:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     80a:	8e 01       	movw	r16, r28
     80c:	0f 5e       	subi	r16, 0xEF	; 239
     80e:	1f 4f       	sbci	r17, 0xFF	; 255
     810:	ce 01       	movw	r24, r28
     812:	05 96       	adiw	r24, 0x05	; 5
     814:	b8 01       	movw	r22, r16
     816:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     81a:	89 85       	ldd	r24, Y+9	; 0x09
     81c:	82 30       	cpi	r24, 0x02	; 2
     81e:	40 f0       	brcs	.+16     	; 0x830 <__gesf2+0x56>
     820:	89 89       	ldd	r24, Y+17	; 0x11
     822:	82 30       	cpi	r24, 0x02	; 2
     824:	28 f0       	brcs	.+10     	; 0x830 <__gesf2+0x56>
     826:	c7 01       	movw	r24, r14
     828:	b8 01       	movw	r22, r16
     82a:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fpcmp_parts_f>
     82e:	01 c0       	rjmp	.+2      	; 0x832 <__gesf2+0x58>
     830:	8f ef       	ldi	r24, 0xFF	; 255
     832:	68 96       	adiw	r28, 0x18	; 24
     834:	e6 e0       	ldi	r30, 0x06	; 6
     836:	0c 94 d6 12 	jmp	0x25ac	; 0x25ac <__epilogue_restores__+0x18>

0000083a <__ltsf2>:
     83a:	a8 e1       	ldi	r26, 0x18	; 24
     83c:	b0 e0       	ldi	r27, 0x00	; 0
     83e:	e3 e2       	ldi	r30, 0x23	; 35
     840:	f4 e0       	ldi	r31, 0x04	; 4
     842:	0c 94 ba 12 	jmp	0x2574	; 0x2574 <__prologue_saves__+0x18>
     846:	69 83       	std	Y+1, r22	; 0x01
     848:	7a 83       	std	Y+2, r23	; 0x02
     84a:	8b 83       	std	Y+3, r24	; 0x03
     84c:	9c 83       	std	Y+4, r25	; 0x04
     84e:	2d 83       	std	Y+5, r18	; 0x05
     850:	3e 83       	std	Y+6, r19	; 0x06
     852:	4f 83       	std	Y+7, r20	; 0x07
     854:	58 87       	std	Y+8, r21	; 0x08
     856:	89 e0       	ldi	r24, 0x09	; 9
     858:	e8 2e       	mov	r14, r24
     85a:	f1 2c       	mov	r15, r1
     85c:	ec 0e       	add	r14, r28
     85e:	fd 1e       	adc	r15, r29
     860:	ce 01       	movw	r24, r28
     862:	01 96       	adiw	r24, 0x01	; 1
     864:	b7 01       	movw	r22, r14
     866:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     86a:	8e 01       	movw	r16, r28
     86c:	0f 5e       	subi	r16, 0xEF	; 239
     86e:	1f 4f       	sbci	r17, 0xFF	; 255
     870:	ce 01       	movw	r24, r28
     872:	05 96       	adiw	r24, 0x05	; 5
     874:	b8 01       	movw	r22, r16
     876:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     87a:	89 85       	ldd	r24, Y+9	; 0x09
     87c:	82 30       	cpi	r24, 0x02	; 2
     87e:	40 f0       	brcs	.+16     	; 0x890 <__stack+0x31>
     880:	89 89       	ldd	r24, Y+17	; 0x11
     882:	82 30       	cpi	r24, 0x02	; 2
     884:	28 f0       	brcs	.+10     	; 0x890 <__stack+0x31>
     886:	c7 01       	movw	r24, r14
     888:	b8 01       	movw	r22, r16
     88a:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fpcmp_parts_f>
     88e:	01 c0       	rjmp	.+2      	; 0x892 <__stack+0x33>
     890:	81 e0       	ldi	r24, 0x01	; 1
     892:	68 96       	adiw	r28, 0x18	; 24
     894:	e6 e0       	ldi	r30, 0x06	; 6
     896:	0c 94 d6 12 	jmp	0x25ac	; 0x25ac <__epilogue_restores__+0x18>

0000089a <__fixsfsi>:
     89a:	ac e0       	ldi	r26, 0x0C	; 12
     89c:	b0 e0       	ldi	r27, 0x00	; 0
     89e:	e3 e5       	ldi	r30, 0x53	; 83
     8a0:	f4 e0       	ldi	r31, 0x04	; 4
     8a2:	0c 94 be 12 	jmp	0x257c	; 0x257c <__prologue_saves__+0x20>
     8a6:	69 83       	std	Y+1, r22	; 0x01
     8a8:	7a 83       	std	Y+2, r23	; 0x02
     8aa:	8b 83       	std	Y+3, r24	; 0x03
     8ac:	9c 83       	std	Y+4, r25	; 0x04
     8ae:	ce 01       	movw	r24, r28
     8b0:	01 96       	adiw	r24, 0x01	; 1
     8b2:	be 01       	movw	r22, r28
     8b4:	6b 5f       	subi	r22, 0xFB	; 251
     8b6:	7f 4f       	sbci	r23, 0xFF	; 255
     8b8:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     8bc:	8d 81       	ldd	r24, Y+5	; 0x05
     8be:	82 30       	cpi	r24, 0x02	; 2
     8c0:	61 f1       	breq	.+88     	; 0x91a <__fixsfsi+0x80>
     8c2:	82 30       	cpi	r24, 0x02	; 2
     8c4:	50 f1       	brcs	.+84     	; 0x91a <__fixsfsi+0x80>
     8c6:	84 30       	cpi	r24, 0x04	; 4
     8c8:	21 f4       	brne	.+8      	; 0x8d2 <__fixsfsi+0x38>
     8ca:	8e 81       	ldd	r24, Y+6	; 0x06
     8cc:	88 23       	and	r24, r24
     8ce:	51 f1       	breq	.+84     	; 0x924 <__fixsfsi+0x8a>
     8d0:	2e c0       	rjmp	.+92     	; 0x92e <__fixsfsi+0x94>
     8d2:	2f 81       	ldd	r18, Y+7	; 0x07
     8d4:	38 85       	ldd	r19, Y+8	; 0x08
     8d6:	37 fd       	sbrc	r19, 7
     8d8:	20 c0       	rjmp	.+64     	; 0x91a <__fixsfsi+0x80>
     8da:	6e 81       	ldd	r22, Y+6	; 0x06
     8dc:	2f 31       	cpi	r18, 0x1F	; 31
     8de:	31 05       	cpc	r19, r1
     8e0:	1c f0       	brlt	.+6      	; 0x8e8 <__fixsfsi+0x4e>
     8e2:	66 23       	and	r22, r22
     8e4:	f9 f0       	breq	.+62     	; 0x924 <__fixsfsi+0x8a>
     8e6:	23 c0       	rjmp	.+70     	; 0x92e <__fixsfsi+0x94>
     8e8:	8e e1       	ldi	r24, 0x1E	; 30
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	82 1b       	sub	r24, r18
     8ee:	93 0b       	sbc	r25, r19
     8f0:	29 85       	ldd	r18, Y+9	; 0x09
     8f2:	3a 85       	ldd	r19, Y+10	; 0x0a
     8f4:	4b 85       	ldd	r20, Y+11	; 0x0b
     8f6:	5c 85       	ldd	r21, Y+12	; 0x0c
     8f8:	04 c0       	rjmp	.+8      	; 0x902 <__fixsfsi+0x68>
     8fa:	56 95       	lsr	r21
     8fc:	47 95       	ror	r20
     8fe:	37 95       	ror	r19
     900:	27 95       	ror	r18
     902:	8a 95       	dec	r24
     904:	d2 f7       	brpl	.-12     	; 0x8fa <__fixsfsi+0x60>
     906:	66 23       	and	r22, r22
     908:	b1 f0       	breq	.+44     	; 0x936 <__fixsfsi+0x9c>
     90a:	50 95       	com	r21
     90c:	40 95       	com	r20
     90e:	30 95       	com	r19
     910:	21 95       	neg	r18
     912:	3f 4f       	sbci	r19, 0xFF	; 255
     914:	4f 4f       	sbci	r20, 0xFF	; 255
     916:	5f 4f       	sbci	r21, 0xFF	; 255
     918:	0e c0       	rjmp	.+28     	; 0x936 <__fixsfsi+0x9c>
     91a:	20 e0       	ldi	r18, 0x00	; 0
     91c:	30 e0       	ldi	r19, 0x00	; 0
     91e:	40 e0       	ldi	r20, 0x00	; 0
     920:	50 e0       	ldi	r21, 0x00	; 0
     922:	09 c0       	rjmp	.+18     	; 0x936 <__fixsfsi+0x9c>
     924:	2f ef       	ldi	r18, 0xFF	; 255
     926:	3f ef       	ldi	r19, 0xFF	; 255
     928:	4f ef       	ldi	r20, 0xFF	; 255
     92a:	5f e7       	ldi	r21, 0x7F	; 127
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__fixsfsi+0x9c>
     92e:	20 e0       	ldi	r18, 0x00	; 0
     930:	30 e0       	ldi	r19, 0x00	; 0
     932:	40 e0       	ldi	r20, 0x00	; 0
     934:	50 e8       	ldi	r21, 0x80	; 128
     936:	b9 01       	movw	r22, r18
     938:	ca 01       	movw	r24, r20
     93a:	2c 96       	adiw	r28, 0x0c	; 12
     93c:	e2 e0       	ldi	r30, 0x02	; 2
     93e:	0c 94 da 12 	jmp	0x25b4	; 0x25b4 <__epilogue_restores__+0x20>

00000942 <__pack_f>:
     942:	df 92       	push	r13
     944:	ef 92       	push	r14
     946:	ff 92       	push	r15
     948:	0f 93       	push	r16
     94a:	1f 93       	push	r17
     94c:	fc 01       	movw	r30, r24
     94e:	e4 80       	ldd	r14, Z+4	; 0x04
     950:	f5 80       	ldd	r15, Z+5	; 0x05
     952:	06 81       	ldd	r16, Z+6	; 0x06
     954:	17 81       	ldd	r17, Z+7	; 0x07
     956:	d1 80       	ldd	r13, Z+1	; 0x01
     958:	80 81       	ld	r24, Z
     95a:	82 30       	cpi	r24, 0x02	; 2
     95c:	48 f4       	brcc	.+18     	; 0x970 <__pack_f+0x2e>
     95e:	80 e0       	ldi	r24, 0x00	; 0
     960:	90 e0       	ldi	r25, 0x00	; 0
     962:	a0 e1       	ldi	r26, 0x10	; 16
     964:	b0 e0       	ldi	r27, 0x00	; 0
     966:	e8 2a       	or	r14, r24
     968:	f9 2a       	or	r15, r25
     96a:	0a 2b       	or	r16, r26
     96c:	1b 2b       	or	r17, r27
     96e:	a5 c0       	rjmp	.+330    	; 0xaba <__pack_f+0x178>
     970:	84 30       	cpi	r24, 0x04	; 4
     972:	09 f4       	brne	.+2      	; 0x976 <__pack_f+0x34>
     974:	9f c0       	rjmp	.+318    	; 0xab4 <__pack_f+0x172>
     976:	82 30       	cpi	r24, 0x02	; 2
     978:	21 f4       	brne	.+8      	; 0x982 <__pack_f+0x40>
     97a:	ee 24       	eor	r14, r14
     97c:	ff 24       	eor	r15, r15
     97e:	87 01       	movw	r16, r14
     980:	05 c0       	rjmp	.+10     	; 0x98c <__pack_f+0x4a>
     982:	e1 14       	cp	r14, r1
     984:	f1 04       	cpc	r15, r1
     986:	01 05       	cpc	r16, r1
     988:	11 05       	cpc	r17, r1
     98a:	19 f4       	brne	.+6      	; 0x992 <__pack_f+0x50>
     98c:	e0 e0       	ldi	r30, 0x00	; 0
     98e:	f0 e0       	ldi	r31, 0x00	; 0
     990:	96 c0       	rjmp	.+300    	; 0xabe <__pack_f+0x17c>
     992:	62 81       	ldd	r22, Z+2	; 0x02
     994:	73 81       	ldd	r23, Z+3	; 0x03
     996:	9f ef       	ldi	r25, 0xFF	; 255
     998:	62 38       	cpi	r22, 0x82	; 130
     99a:	79 07       	cpc	r23, r25
     99c:	0c f0       	brlt	.+2      	; 0x9a0 <__pack_f+0x5e>
     99e:	5b c0       	rjmp	.+182    	; 0xa56 <__pack_f+0x114>
     9a0:	22 e8       	ldi	r18, 0x82	; 130
     9a2:	3f ef       	ldi	r19, 0xFF	; 255
     9a4:	26 1b       	sub	r18, r22
     9a6:	37 0b       	sbc	r19, r23
     9a8:	2a 31       	cpi	r18, 0x1A	; 26
     9aa:	31 05       	cpc	r19, r1
     9ac:	2c f0       	brlt	.+10     	; 0x9b8 <__pack_f+0x76>
     9ae:	20 e0       	ldi	r18, 0x00	; 0
     9b0:	30 e0       	ldi	r19, 0x00	; 0
     9b2:	40 e0       	ldi	r20, 0x00	; 0
     9b4:	50 e0       	ldi	r21, 0x00	; 0
     9b6:	2a c0       	rjmp	.+84     	; 0xa0c <__pack_f+0xca>
     9b8:	b8 01       	movw	r22, r16
     9ba:	a7 01       	movw	r20, r14
     9bc:	02 2e       	mov	r0, r18
     9be:	04 c0       	rjmp	.+8      	; 0x9c8 <__pack_f+0x86>
     9c0:	76 95       	lsr	r23
     9c2:	67 95       	ror	r22
     9c4:	57 95       	ror	r21
     9c6:	47 95       	ror	r20
     9c8:	0a 94       	dec	r0
     9ca:	d2 f7       	brpl	.-12     	; 0x9c0 <__pack_f+0x7e>
     9cc:	81 e0       	ldi	r24, 0x01	; 1
     9ce:	90 e0       	ldi	r25, 0x00	; 0
     9d0:	a0 e0       	ldi	r26, 0x00	; 0
     9d2:	b0 e0       	ldi	r27, 0x00	; 0
     9d4:	04 c0       	rjmp	.+8      	; 0x9de <__pack_f+0x9c>
     9d6:	88 0f       	add	r24, r24
     9d8:	99 1f       	adc	r25, r25
     9da:	aa 1f       	adc	r26, r26
     9dc:	bb 1f       	adc	r27, r27
     9de:	2a 95       	dec	r18
     9e0:	d2 f7       	brpl	.-12     	; 0x9d6 <__pack_f+0x94>
     9e2:	01 97       	sbiw	r24, 0x01	; 1
     9e4:	a1 09       	sbc	r26, r1
     9e6:	b1 09       	sbc	r27, r1
     9e8:	8e 21       	and	r24, r14
     9ea:	9f 21       	and	r25, r15
     9ec:	a0 23       	and	r26, r16
     9ee:	b1 23       	and	r27, r17
     9f0:	00 97       	sbiw	r24, 0x00	; 0
     9f2:	a1 05       	cpc	r26, r1
     9f4:	b1 05       	cpc	r27, r1
     9f6:	21 f0       	breq	.+8      	; 0xa00 <__pack_f+0xbe>
     9f8:	81 e0       	ldi	r24, 0x01	; 1
     9fa:	90 e0       	ldi	r25, 0x00	; 0
     9fc:	a0 e0       	ldi	r26, 0x00	; 0
     9fe:	b0 e0       	ldi	r27, 0x00	; 0
     a00:	9a 01       	movw	r18, r20
     a02:	ab 01       	movw	r20, r22
     a04:	28 2b       	or	r18, r24
     a06:	39 2b       	or	r19, r25
     a08:	4a 2b       	or	r20, r26
     a0a:	5b 2b       	or	r21, r27
     a0c:	da 01       	movw	r26, r20
     a0e:	c9 01       	movw	r24, r18
     a10:	8f 77       	andi	r24, 0x7F	; 127
     a12:	90 70       	andi	r25, 0x00	; 0
     a14:	a0 70       	andi	r26, 0x00	; 0
     a16:	b0 70       	andi	r27, 0x00	; 0
     a18:	80 34       	cpi	r24, 0x40	; 64
     a1a:	91 05       	cpc	r25, r1
     a1c:	a1 05       	cpc	r26, r1
     a1e:	b1 05       	cpc	r27, r1
     a20:	39 f4       	brne	.+14     	; 0xa30 <__pack_f+0xee>
     a22:	27 ff       	sbrs	r18, 7
     a24:	09 c0       	rjmp	.+18     	; 0xa38 <__pack_f+0xf6>
     a26:	20 5c       	subi	r18, 0xC0	; 192
     a28:	3f 4f       	sbci	r19, 0xFF	; 255
     a2a:	4f 4f       	sbci	r20, 0xFF	; 255
     a2c:	5f 4f       	sbci	r21, 0xFF	; 255
     a2e:	04 c0       	rjmp	.+8      	; 0xa38 <__pack_f+0xf6>
     a30:	21 5c       	subi	r18, 0xC1	; 193
     a32:	3f 4f       	sbci	r19, 0xFF	; 255
     a34:	4f 4f       	sbci	r20, 0xFF	; 255
     a36:	5f 4f       	sbci	r21, 0xFF	; 255
     a38:	e0 e0       	ldi	r30, 0x00	; 0
     a3a:	f0 e0       	ldi	r31, 0x00	; 0
     a3c:	20 30       	cpi	r18, 0x00	; 0
     a3e:	a0 e0       	ldi	r26, 0x00	; 0
     a40:	3a 07       	cpc	r19, r26
     a42:	a0 e0       	ldi	r26, 0x00	; 0
     a44:	4a 07       	cpc	r20, r26
     a46:	a0 e4       	ldi	r26, 0x40	; 64
     a48:	5a 07       	cpc	r21, r26
     a4a:	10 f0       	brcs	.+4      	; 0xa50 <__pack_f+0x10e>
     a4c:	e1 e0       	ldi	r30, 0x01	; 1
     a4e:	f0 e0       	ldi	r31, 0x00	; 0
     a50:	79 01       	movw	r14, r18
     a52:	8a 01       	movw	r16, r20
     a54:	27 c0       	rjmp	.+78     	; 0xaa4 <__pack_f+0x162>
     a56:	60 38       	cpi	r22, 0x80	; 128
     a58:	71 05       	cpc	r23, r1
     a5a:	64 f5       	brge	.+88     	; 0xab4 <__pack_f+0x172>
     a5c:	fb 01       	movw	r30, r22
     a5e:	e1 58       	subi	r30, 0x81	; 129
     a60:	ff 4f       	sbci	r31, 0xFF	; 255
     a62:	d8 01       	movw	r26, r16
     a64:	c7 01       	movw	r24, r14
     a66:	8f 77       	andi	r24, 0x7F	; 127
     a68:	90 70       	andi	r25, 0x00	; 0
     a6a:	a0 70       	andi	r26, 0x00	; 0
     a6c:	b0 70       	andi	r27, 0x00	; 0
     a6e:	80 34       	cpi	r24, 0x40	; 64
     a70:	91 05       	cpc	r25, r1
     a72:	a1 05       	cpc	r26, r1
     a74:	b1 05       	cpc	r27, r1
     a76:	39 f4       	brne	.+14     	; 0xa86 <__pack_f+0x144>
     a78:	e7 fe       	sbrs	r14, 7
     a7a:	0d c0       	rjmp	.+26     	; 0xa96 <__pack_f+0x154>
     a7c:	80 e4       	ldi	r24, 0x40	; 64
     a7e:	90 e0       	ldi	r25, 0x00	; 0
     a80:	a0 e0       	ldi	r26, 0x00	; 0
     a82:	b0 e0       	ldi	r27, 0x00	; 0
     a84:	04 c0       	rjmp	.+8      	; 0xa8e <__pack_f+0x14c>
     a86:	8f e3       	ldi	r24, 0x3F	; 63
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	a0 e0       	ldi	r26, 0x00	; 0
     a8c:	b0 e0       	ldi	r27, 0x00	; 0
     a8e:	e8 0e       	add	r14, r24
     a90:	f9 1e       	adc	r15, r25
     a92:	0a 1f       	adc	r16, r26
     a94:	1b 1f       	adc	r17, r27
     a96:	17 ff       	sbrs	r17, 7
     a98:	05 c0       	rjmp	.+10     	; 0xaa4 <__pack_f+0x162>
     a9a:	16 95       	lsr	r17
     a9c:	07 95       	ror	r16
     a9e:	f7 94       	ror	r15
     aa0:	e7 94       	ror	r14
     aa2:	31 96       	adiw	r30, 0x01	; 1
     aa4:	87 e0       	ldi	r24, 0x07	; 7
     aa6:	16 95       	lsr	r17
     aa8:	07 95       	ror	r16
     aaa:	f7 94       	ror	r15
     aac:	e7 94       	ror	r14
     aae:	8a 95       	dec	r24
     ab0:	d1 f7       	brne	.-12     	; 0xaa6 <__pack_f+0x164>
     ab2:	05 c0       	rjmp	.+10     	; 0xabe <__pack_f+0x17c>
     ab4:	ee 24       	eor	r14, r14
     ab6:	ff 24       	eor	r15, r15
     ab8:	87 01       	movw	r16, r14
     aba:	ef ef       	ldi	r30, 0xFF	; 255
     abc:	f0 e0       	ldi	r31, 0x00	; 0
     abe:	6e 2f       	mov	r22, r30
     ac0:	67 95       	ror	r22
     ac2:	66 27       	eor	r22, r22
     ac4:	67 95       	ror	r22
     ac6:	90 2f       	mov	r25, r16
     ac8:	9f 77       	andi	r25, 0x7F	; 127
     aca:	d7 94       	ror	r13
     acc:	dd 24       	eor	r13, r13
     ace:	d7 94       	ror	r13
     ad0:	8e 2f       	mov	r24, r30
     ad2:	86 95       	lsr	r24
     ad4:	49 2f       	mov	r20, r25
     ad6:	46 2b       	or	r20, r22
     ad8:	58 2f       	mov	r21, r24
     ada:	5d 29       	or	r21, r13
     adc:	b7 01       	movw	r22, r14
     ade:	ca 01       	movw	r24, r20
     ae0:	1f 91       	pop	r17
     ae2:	0f 91       	pop	r16
     ae4:	ff 90       	pop	r15
     ae6:	ef 90       	pop	r14
     ae8:	df 90       	pop	r13
     aea:	08 95       	ret

00000aec <__unpack_f>:
     aec:	fc 01       	movw	r30, r24
     aee:	db 01       	movw	r26, r22
     af0:	40 81       	ld	r20, Z
     af2:	51 81       	ldd	r21, Z+1	; 0x01
     af4:	22 81       	ldd	r18, Z+2	; 0x02
     af6:	62 2f       	mov	r22, r18
     af8:	6f 77       	andi	r22, 0x7F	; 127
     afa:	70 e0       	ldi	r23, 0x00	; 0
     afc:	22 1f       	adc	r18, r18
     afe:	22 27       	eor	r18, r18
     b00:	22 1f       	adc	r18, r18
     b02:	93 81       	ldd	r25, Z+3	; 0x03
     b04:	89 2f       	mov	r24, r25
     b06:	88 0f       	add	r24, r24
     b08:	82 2b       	or	r24, r18
     b0a:	28 2f       	mov	r18, r24
     b0c:	30 e0       	ldi	r19, 0x00	; 0
     b0e:	99 1f       	adc	r25, r25
     b10:	99 27       	eor	r25, r25
     b12:	99 1f       	adc	r25, r25
     b14:	11 96       	adiw	r26, 0x01	; 1
     b16:	9c 93       	st	X, r25
     b18:	11 97       	sbiw	r26, 0x01	; 1
     b1a:	21 15       	cp	r18, r1
     b1c:	31 05       	cpc	r19, r1
     b1e:	a9 f5       	brne	.+106    	; 0xb8a <__unpack_f+0x9e>
     b20:	41 15       	cp	r20, r1
     b22:	51 05       	cpc	r21, r1
     b24:	61 05       	cpc	r22, r1
     b26:	71 05       	cpc	r23, r1
     b28:	11 f4       	brne	.+4      	; 0xb2e <__unpack_f+0x42>
     b2a:	82 e0       	ldi	r24, 0x02	; 2
     b2c:	37 c0       	rjmp	.+110    	; 0xb9c <__unpack_f+0xb0>
     b2e:	82 e8       	ldi	r24, 0x82	; 130
     b30:	9f ef       	ldi	r25, 0xFF	; 255
     b32:	13 96       	adiw	r26, 0x03	; 3
     b34:	9c 93       	st	X, r25
     b36:	8e 93       	st	-X, r24
     b38:	12 97       	sbiw	r26, 0x02	; 2
     b3a:	9a 01       	movw	r18, r20
     b3c:	ab 01       	movw	r20, r22
     b3e:	67 e0       	ldi	r22, 0x07	; 7
     b40:	22 0f       	add	r18, r18
     b42:	33 1f       	adc	r19, r19
     b44:	44 1f       	adc	r20, r20
     b46:	55 1f       	adc	r21, r21
     b48:	6a 95       	dec	r22
     b4a:	d1 f7       	brne	.-12     	; 0xb40 <__unpack_f+0x54>
     b4c:	83 e0       	ldi	r24, 0x03	; 3
     b4e:	8c 93       	st	X, r24
     b50:	0d c0       	rjmp	.+26     	; 0xb6c <__unpack_f+0x80>
     b52:	22 0f       	add	r18, r18
     b54:	33 1f       	adc	r19, r19
     b56:	44 1f       	adc	r20, r20
     b58:	55 1f       	adc	r21, r21
     b5a:	12 96       	adiw	r26, 0x02	; 2
     b5c:	8d 91       	ld	r24, X+
     b5e:	9c 91       	ld	r25, X
     b60:	13 97       	sbiw	r26, 0x03	; 3
     b62:	01 97       	sbiw	r24, 0x01	; 1
     b64:	13 96       	adiw	r26, 0x03	; 3
     b66:	9c 93       	st	X, r25
     b68:	8e 93       	st	-X, r24
     b6a:	12 97       	sbiw	r26, 0x02	; 2
     b6c:	20 30       	cpi	r18, 0x00	; 0
     b6e:	80 e0       	ldi	r24, 0x00	; 0
     b70:	38 07       	cpc	r19, r24
     b72:	80 e0       	ldi	r24, 0x00	; 0
     b74:	48 07       	cpc	r20, r24
     b76:	80 e4       	ldi	r24, 0x40	; 64
     b78:	58 07       	cpc	r21, r24
     b7a:	58 f3       	brcs	.-42     	; 0xb52 <__unpack_f+0x66>
     b7c:	14 96       	adiw	r26, 0x04	; 4
     b7e:	2d 93       	st	X+, r18
     b80:	3d 93       	st	X+, r19
     b82:	4d 93       	st	X+, r20
     b84:	5c 93       	st	X, r21
     b86:	17 97       	sbiw	r26, 0x07	; 7
     b88:	08 95       	ret
     b8a:	2f 3f       	cpi	r18, 0xFF	; 255
     b8c:	31 05       	cpc	r19, r1
     b8e:	79 f4       	brne	.+30     	; 0xbae <__unpack_f+0xc2>
     b90:	41 15       	cp	r20, r1
     b92:	51 05       	cpc	r21, r1
     b94:	61 05       	cpc	r22, r1
     b96:	71 05       	cpc	r23, r1
     b98:	19 f4       	brne	.+6      	; 0xba0 <__unpack_f+0xb4>
     b9a:	84 e0       	ldi	r24, 0x04	; 4
     b9c:	8c 93       	st	X, r24
     b9e:	08 95       	ret
     ba0:	64 ff       	sbrs	r22, 4
     ba2:	03 c0       	rjmp	.+6      	; 0xbaa <__unpack_f+0xbe>
     ba4:	81 e0       	ldi	r24, 0x01	; 1
     ba6:	8c 93       	st	X, r24
     ba8:	12 c0       	rjmp	.+36     	; 0xbce <__unpack_f+0xe2>
     baa:	1c 92       	st	X, r1
     bac:	10 c0       	rjmp	.+32     	; 0xbce <__unpack_f+0xe2>
     bae:	2f 57       	subi	r18, 0x7F	; 127
     bb0:	30 40       	sbci	r19, 0x00	; 0
     bb2:	13 96       	adiw	r26, 0x03	; 3
     bb4:	3c 93       	st	X, r19
     bb6:	2e 93       	st	-X, r18
     bb8:	12 97       	sbiw	r26, 0x02	; 2
     bba:	83 e0       	ldi	r24, 0x03	; 3
     bbc:	8c 93       	st	X, r24
     bbe:	87 e0       	ldi	r24, 0x07	; 7
     bc0:	44 0f       	add	r20, r20
     bc2:	55 1f       	adc	r21, r21
     bc4:	66 1f       	adc	r22, r22
     bc6:	77 1f       	adc	r23, r23
     bc8:	8a 95       	dec	r24
     bca:	d1 f7       	brne	.-12     	; 0xbc0 <__unpack_f+0xd4>
     bcc:	70 64       	ori	r23, 0x40	; 64
     bce:	14 96       	adiw	r26, 0x04	; 4
     bd0:	4d 93       	st	X+, r20
     bd2:	5d 93       	st	X+, r21
     bd4:	6d 93       	st	X+, r22
     bd6:	7c 93       	st	X, r23
     bd8:	17 97       	sbiw	r26, 0x07	; 7
     bda:	08 95       	ret

00000bdc <__fpcmp_parts_f>:
     bdc:	1f 93       	push	r17
     bde:	dc 01       	movw	r26, r24
     be0:	fb 01       	movw	r30, r22
     be2:	9c 91       	ld	r25, X
     be4:	92 30       	cpi	r25, 0x02	; 2
     be6:	08 f4       	brcc	.+2      	; 0xbea <__fpcmp_parts_f+0xe>
     be8:	47 c0       	rjmp	.+142    	; 0xc78 <__fpcmp_parts_f+0x9c>
     bea:	80 81       	ld	r24, Z
     bec:	82 30       	cpi	r24, 0x02	; 2
     bee:	08 f4       	brcc	.+2      	; 0xbf2 <__fpcmp_parts_f+0x16>
     bf0:	43 c0       	rjmp	.+134    	; 0xc78 <__fpcmp_parts_f+0x9c>
     bf2:	94 30       	cpi	r25, 0x04	; 4
     bf4:	51 f4       	brne	.+20     	; 0xc0a <__fpcmp_parts_f+0x2e>
     bf6:	11 96       	adiw	r26, 0x01	; 1
     bf8:	1c 91       	ld	r17, X
     bfa:	84 30       	cpi	r24, 0x04	; 4
     bfc:	99 f5       	brne	.+102    	; 0xc64 <__fpcmp_parts_f+0x88>
     bfe:	81 81       	ldd	r24, Z+1	; 0x01
     c00:	68 2f       	mov	r22, r24
     c02:	70 e0       	ldi	r23, 0x00	; 0
     c04:	61 1b       	sub	r22, r17
     c06:	71 09       	sbc	r23, r1
     c08:	3f c0       	rjmp	.+126    	; 0xc88 <__fpcmp_parts_f+0xac>
     c0a:	84 30       	cpi	r24, 0x04	; 4
     c0c:	21 f0       	breq	.+8      	; 0xc16 <__fpcmp_parts_f+0x3a>
     c0e:	92 30       	cpi	r25, 0x02	; 2
     c10:	31 f4       	brne	.+12     	; 0xc1e <__fpcmp_parts_f+0x42>
     c12:	82 30       	cpi	r24, 0x02	; 2
     c14:	b9 f1       	breq	.+110    	; 0xc84 <__fpcmp_parts_f+0xa8>
     c16:	81 81       	ldd	r24, Z+1	; 0x01
     c18:	88 23       	and	r24, r24
     c1a:	89 f1       	breq	.+98     	; 0xc7e <__fpcmp_parts_f+0xa2>
     c1c:	2d c0       	rjmp	.+90     	; 0xc78 <__fpcmp_parts_f+0x9c>
     c1e:	11 96       	adiw	r26, 0x01	; 1
     c20:	1c 91       	ld	r17, X
     c22:	11 97       	sbiw	r26, 0x01	; 1
     c24:	82 30       	cpi	r24, 0x02	; 2
     c26:	f1 f0       	breq	.+60     	; 0xc64 <__fpcmp_parts_f+0x88>
     c28:	81 81       	ldd	r24, Z+1	; 0x01
     c2a:	18 17       	cp	r17, r24
     c2c:	d9 f4       	brne	.+54     	; 0xc64 <__fpcmp_parts_f+0x88>
     c2e:	12 96       	adiw	r26, 0x02	; 2
     c30:	2d 91       	ld	r18, X+
     c32:	3c 91       	ld	r19, X
     c34:	13 97       	sbiw	r26, 0x03	; 3
     c36:	82 81       	ldd	r24, Z+2	; 0x02
     c38:	93 81       	ldd	r25, Z+3	; 0x03
     c3a:	82 17       	cp	r24, r18
     c3c:	93 07       	cpc	r25, r19
     c3e:	94 f0       	brlt	.+36     	; 0xc64 <__fpcmp_parts_f+0x88>
     c40:	28 17       	cp	r18, r24
     c42:	39 07       	cpc	r19, r25
     c44:	bc f0       	brlt	.+46     	; 0xc74 <__fpcmp_parts_f+0x98>
     c46:	14 96       	adiw	r26, 0x04	; 4
     c48:	8d 91       	ld	r24, X+
     c4a:	9d 91       	ld	r25, X+
     c4c:	0d 90       	ld	r0, X+
     c4e:	bc 91       	ld	r27, X
     c50:	a0 2d       	mov	r26, r0
     c52:	24 81       	ldd	r18, Z+4	; 0x04
     c54:	35 81       	ldd	r19, Z+5	; 0x05
     c56:	46 81       	ldd	r20, Z+6	; 0x06
     c58:	57 81       	ldd	r21, Z+7	; 0x07
     c5a:	28 17       	cp	r18, r24
     c5c:	39 07       	cpc	r19, r25
     c5e:	4a 07       	cpc	r20, r26
     c60:	5b 07       	cpc	r21, r27
     c62:	18 f4       	brcc	.+6      	; 0xc6a <__fpcmp_parts_f+0x8e>
     c64:	11 23       	and	r17, r17
     c66:	41 f0       	breq	.+16     	; 0xc78 <__fpcmp_parts_f+0x9c>
     c68:	0a c0       	rjmp	.+20     	; 0xc7e <__fpcmp_parts_f+0xa2>
     c6a:	82 17       	cp	r24, r18
     c6c:	93 07       	cpc	r25, r19
     c6e:	a4 07       	cpc	r26, r20
     c70:	b5 07       	cpc	r27, r21
     c72:	40 f4       	brcc	.+16     	; 0xc84 <__fpcmp_parts_f+0xa8>
     c74:	11 23       	and	r17, r17
     c76:	19 f0       	breq	.+6      	; 0xc7e <__fpcmp_parts_f+0xa2>
     c78:	61 e0       	ldi	r22, 0x01	; 1
     c7a:	70 e0       	ldi	r23, 0x00	; 0
     c7c:	05 c0       	rjmp	.+10     	; 0xc88 <__fpcmp_parts_f+0xac>
     c7e:	6f ef       	ldi	r22, 0xFF	; 255
     c80:	7f ef       	ldi	r23, 0xFF	; 255
     c82:	02 c0       	rjmp	.+4      	; 0xc88 <__fpcmp_parts_f+0xac>
     c84:	60 e0       	ldi	r22, 0x00	; 0
     c86:	70 e0       	ldi	r23, 0x00	; 0
     c88:	cb 01       	movw	r24, r22
     c8a:	1f 91       	pop	r17
     c8c:	08 95       	ret

00000c8e <HLCD_voidInit>:
#include "HLCD_private.h"
#include "HLCD_interface.h"
#include<util/delay.h>

void HLCD_voidInit(void)
{
     c8e:	df 93       	push	r29
     c90:	cf 93       	push	r28
     c92:	cd b7       	in	r28, 0x3d	; 61
     c94:	de b7       	in	r29, 0x3e	; 62
     c96:	ee 97       	sbiw	r28, 0x3e	; 62
     c98:	0f b6       	in	r0, 0x3f	; 63
     c9a:	f8 94       	cli
     c9c:	de bf       	out	0x3e, r29	; 62
     c9e:	0f be       	out	0x3f, r0	; 63
     ca0:	cd bf       	out	0x3d, r28	; 61
	MDIO_stderrorSetPinDirection(LCD_CONTROL_PORT,LCD_RS_PIN,MDIO_OUTPUT);
     ca2:	82 e0       	ldi	r24, 0x02	; 2
     ca4:	61 e0       	ldi	r22, 0x01	; 1
     ca6:	41 e0       	ldi	r20, 0x01	; 1
     ca8:	0e 94 fc 0c 	call	0x19f8	; 0x19f8 <MDIO_stderrorSetPinDirection>
	MDIO_stderrorSetPinDirection(LCD_CONTROL_PORT,LCD_RW_PIN,MDIO_OUTPUT);
     cac:	82 e0       	ldi	r24, 0x02	; 2
     cae:	62 e0       	ldi	r22, 0x02	; 2
     cb0:	41 e0       	ldi	r20, 0x01	; 1
     cb2:	0e 94 fc 0c 	call	0x19f8	; 0x19f8 <MDIO_stderrorSetPinDirection>
	MDIO_stderrorSetPinDirection(LCD_CONTROL_PORT,LCD_E_PIN,MDIO_OUTPUT);
     cb6:	82 e0       	ldi	r24, 0x02	; 2
     cb8:	63 e0       	ldi	r22, 0x03	; 3
     cba:	41 e0       	ldi	r20, 0x01	; 1
     cbc:	0e 94 fc 0c 	call	0x19f8	; 0x19f8 <MDIO_stderrorSetPinDirection>
	MDIO_stderrorSetPortDirection(LCD_DATA_PORT,0xFF);
     cc0:	81 e0       	ldi	r24, 0x01	; 1
     cc2:	6f ef       	ldi	r22, 0xFF	; 255
     cc4:	0e 94 02 0c 	call	0x1804	; 0x1804 <MDIO_stderrorSetPortDirection>
	MDIO_stderrorSetPortValue(LCD_DATA_PORT,MDIO_LOW);
     cc8:	81 e0       	ldi	r24, 0x01	; 1
     cca:	61 e0       	ldi	r22, 0x01	; 1
     ccc:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <MDIO_stderrorSetPortValue>
	HLCD_voidSendCmd(0x33);   /* Send command 0x33*/
     cd0:	83 e3       	ldi	r24, 0x33	; 51
     cd2:	0e 94 65 0a 	call	0x14ca	; 0x14ca <HLCD_voidSendCmd>
	HLCD_voidSendCmd(0x32);   /* Send command 0x32*/
     cd6:	82 e3       	ldi	r24, 0x32	; 50
     cd8:	0e 94 65 0a 	call	0x14ca	; 0x14ca <HLCD_voidSendCmd>
	HLCD_voidSendCmd(0x38);
     cdc:	88 e3       	ldi	r24, 0x38	; 56
     cde:	0e 94 65 0a 	call	0x14ca	; 0x14ca <HLCD_voidSendCmd>
     ce2:	80 e0       	ldi	r24, 0x00	; 0
     ce4:	90 e0       	ldi	r25, 0x00	; 0
     ce6:	a8 e4       	ldi	r26, 0x48	; 72
     ce8:	b2 e4       	ldi	r27, 0x42	; 66
     cea:	8b af       	std	Y+59, r24	; 0x3b
     cec:	9c af       	std	Y+60, r25	; 0x3c
     cee:	ad af       	std	Y+61, r26	; 0x3d
     cf0:	be af       	std	Y+62, r27	; 0x3e
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     cf2:	6b ad       	ldd	r22, Y+59	; 0x3b
     cf4:	7c ad       	ldd	r23, Y+60	; 0x3c
     cf6:	8d ad       	ldd	r24, Y+61	; 0x3d
     cf8:	9e ad       	ldd	r25, Y+62	; 0x3e
     cfa:	2b ea       	ldi	r18, 0xAB	; 171
     cfc:	3a ea       	ldi	r19, 0xAA	; 170
     cfe:	4a e2       	ldi	r20, 0x2A	; 42
     d00:	50 e4       	ldi	r21, 0x40	; 64
     d02:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     d06:	dc 01       	movw	r26, r24
     d08:	cb 01       	movw	r24, r22
     d0a:	8f ab       	std	Y+55, r24	; 0x37
     d0c:	98 af       	std	Y+56, r25	; 0x38
     d0e:	a9 af       	std	Y+57, r26	; 0x39
     d10:	ba af       	std	Y+58, r27	; 0x3a
	if (__tmp < 1.0)
     d12:	6f a9       	ldd	r22, Y+55	; 0x37
     d14:	78 ad       	ldd	r23, Y+56	; 0x38
     d16:	89 ad       	ldd	r24, Y+57	; 0x39
     d18:	9a ad       	ldd	r25, Y+58	; 0x3a
     d1a:	20 e0       	ldi	r18, 0x00	; 0
     d1c:	30 e0       	ldi	r19, 0x00	; 0
     d1e:	40 e8       	ldi	r20, 0x80	; 128
     d20:	5f e3       	ldi	r21, 0x3F	; 63
     d22:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
     d26:	88 23       	and	r24, r24
     d28:	1c f4       	brge	.+6      	; 0xd30 <HLCD_voidInit+0xa2>
		__ticks = 1;
     d2a:	81 e0       	ldi	r24, 0x01	; 1
     d2c:	8e ab       	std	Y+54, r24	; 0x36
     d2e:	91 c0       	rjmp	.+290    	; 0xe52 <HLCD_voidInit+0x1c4>
	else if (__tmp > 255)
     d30:	6f a9       	ldd	r22, Y+55	; 0x37
     d32:	78 ad       	ldd	r23, Y+56	; 0x38
     d34:	89 ad       	ldd	r24, Y+57	; 0x39
     d36:	9a ad       	ldd	r25, Y+58	; 0x3a
     d38:	20 e0       	ldi	r18, 0x00	; 0
     d3a:	30 e0       	ldi	r19, 0x00	; 0
     d3c:	4f e7       	ldi	r20, 0x7F	; 127
     d3e:	53 e4       	ldi	r21, 0x43	; 67
     d40:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
     d44:	18 16       	cp	r1, r24
     d46:	0c f0       	brlt	.+2      	; 0xd4a <HLCD_voidInit+0xbc>
     d48:	7b c0       	rjmp	.+246    	; 0xe40 <HLCD_voidInit+0x1b2>
	{
		_delay_ms(__us / 1000.0);
     d4a:	6b ad       	ldd	r22, Y+59	; 0x3b
     d4c:	7c ad       	ldd	r23, Y+60	; 0x3c
     d4e:	8d ad       	ldd	r24, Y+61	; 0x3d
     d50:	9e ad       	ldd	r25, Y+62	; 0x3e
     d52:	20 e0       	ldi	r18, 0x00	; 0
     d54:	30 e0       	ldi	r19, 0x00	; 0
     d56:	4a e7       	ldi	r20, 0x7A	; 122
     d58:	54 e4       	ldi	r21, 0x44	; 68
     d5a:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
     d5e:	dc 01       	movw	r26, r24
     d60:	cb 01       	movw	r24, r22
     d62:	8a ab       	std	Y+50, r24	; 0x32
     d64:	9b ab       	std	Y+51, r25	; 0x33
     d66:	ac ab       	std	Y+52, r26	; 0x34
     d68:	bd ab       	std	Y+53, r27	; 0x35
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     d6a:	6a a9       	ldd	r22, Y+50	; 0x32
     d6c:	7b a9       	ldd	r23, Y+51	; 0x33
     d6e:	8c a9       	ldd	r24, Y+52	; 0x34
     d70:	9d a9       	ldd	r25, Y+53	; 0x35
     d72:	20 e0       	ldi	r18, 0x00	; 0
     d74:	30 e0       	ldi	r19, 0x00	; 0
     d76:	4a ef       	ldi	r20, 0xFA	; 250
     d78:	54 e4       	ldi	r21, 0x44	; 68
     d7a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     d7e:	dc 01       	movw	r26, r24
     d80:	cb 01       	movw	r24, r22
     d82:	8e a7       	std	Y+46, r24	; 0x2e
     d84:	9f a7       	std	Y+47, r25	; 0x2f
     d86:	a8 ab       	std	Y+48, r26	; 0x30
     d88:	b9 ab       	std	Y+49, r27	; 0x31
	if (__tmp < 1.0)
     d8a:	6e a5       	ldd	r22, Y+46	; 0x2e
     d8c:	7f a5       	ldd	r23, Y+47	; 0x2f
     d8e:	88 a9       	ldd	r24, Y+48	; 0x30
     d90:	99 a9       	ldd	r25, Y+49	; 0x31
     d92:	20 e0       	ldi	r18, 0x00	; 0
     d94:	30 e0       	ldi	r19, 0x00	; 0
     d96:	40 e8       	ldi	r20, 0x80	; 128
     d98:	5f e3       	ldi	r21, 0x3F	; 63
     d9a:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
     d9e:	88 23       	and	r24, r24
     da0:	2c f4       	brge	.+10     	; 0xdac <HLCD_voidInit+0x11e>
		__ticks = 1;
     da2:	81 e0       	ldi	r24, 0x01	; 1
     da4:	90 e0       	ldi	r25, 0x00	; 0
     da6:	9d a7       	std	Y+45, r25	; 0x2d
     da8:	8c a7       	std	Y+44, r24	; 0x2c
     daa:	3f c0       	rjmp	.+126    	; 0xe2a <HLCD_voidInit+0x19c>
	else if (__tmp > 65535)
     dac:	6e a5       	ldd	r22, Y+46	; 0x2e
     dae:	7f a5       	ldd	r23, Y+47	; 0x2f
     db0:	88 a9       	ldd	r24, Y+48	; 0x30
     db2:	99 a9       	ldd	r25, Y+49	; 0x31
     db4:	20 e0       	ldi	r18, 0x00	; 0
     db6:	3f ef       	ldi	r19, 0xFF	; 255
     db8:	4f e7       	ldi	r20, 0x7F	; 127
     dba:	57 e4       	ldi	r21, 0x47	; 71
     dbc:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
     dc0:	18 16       	cp	r1, r24
     dc2:	4c f5       	brge	.+82     	; 0xe16 <HLCD_voidInit+0x188>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     dc4:	6a a9       	ldd	r22, Y+50	; 0x32
     dc6:	7b a9       	ldd	r23, Y+51	; 0x33
     dc8:	8c a9       	ldd	r24, Y+52	; 0x34
     dca:	9d a9       	ldd	r25, Y+53	; 0x35
     dcc:	20 e0       	ldi	r18, 0x00	; 0
     dce:	30 e0       	ldi	r19, 0x00	; 0
     dd0:	40 e2       	ldi	r20, 0x20	; 32
     dd2:	51 e4       	ldi	r21, 0x41	; 65
     dd4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     dd8:	dc 01       	movw	r26, r24
     dda:	cb 01       	movw	r24, r22
     ddc:	bc 01       	movw	r22, r24
     dde:	cd 01       	movw	r24, r26
     de0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     de4:	dc 01       	movw	r26, r24
     de6:	cb 01       	movw	r24, r22
     de8:	9d a7       	std	Y+45, r25	; 0x2d
     dea:	8c a7       	std	Y+44, r24	; 0x2c
     dec:	0f c0       	rjmp	.+30     	; 0xe0c <HLCD_voidInit+0x17e>
     dee:	88 ec       	ldi	r24, 0xC8	; 200
     df0:	90 e0       	ldi	r25, 0x00	; 0
     df2:	9b a7       	std	Y+43, r25	; 0x2b
     df4:	8a a7       	std	Y+42, r24	; 0x2a
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     df6:	8a a5       	ldd	r24, Y+42	; 0x2a
     df8:	9b a5       	ldd	r25, Y+43	; 0x2b
     dfa:	01 97       	sbiw	r24, 0x01	; 1
     dfc:	f1 f7       	brne	.-4      	; 0xdfa <HLCD_voidInit+0x16c>
     dfe:	9b a7       	std	Y+43, r25	; 0x2b
     e00:	8a a7       	std	Y+42, r24	; 0x2a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e02:	8c a5       	ldd	r24, Y+44	; 0x2c
     e04:	9d a5       	ldd	r25, Y+45	; 0x2d
     e06:	01 97       	sbiw	r24, 0x01	; 1
     e08:	9d a7       	std	Y+45, r25	; 0x2d
     e0a:	8c a7       	std	Y+44, r24	; 0x2c
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     e0c:	8c a5       	ldd	r24, Y+44	; 0x2c
     e0e:	9d a5       	ldd	r25, Y+45	; 0x2d
     e10:	00 97       	sbiw	r24, 0x00	; 0
     e12:	69 f7       	brne	.-38     	; 0xdee <HLCD_voidInit+0x160>
     e14:	24 c0       	rjmp	.+72     	; 0xe5e <HLCD_voidInit+0x1d0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     e16:	6e a5       	ldd	r22, Y+46	; 0x2e
     e18:	7f a5       	ldd	r23, Y+47	; 0x2f
     e1a:	88 a9       	ldd	r24, Y+48	; 0x30
     e1c:	99 a9       	ldd	r25, Y+49	; 0x31
     e1e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     e22:	dc 01       	movw	r26, r24
     e24:	cb 01       	movw	r24, r22
     e26:	9d a7       	std	Y+45, r25	; 0x2d
     e28:	8c a7       	std	Y+44, r24	; 0x2c
     e2a:	8c a5       	ldd	r24, Y+44	; 0x2c
     e2c:	9d a5       	ldd	r25, Y+45	; 0x2d
     e2e:	99 a7       	std	Y+41, r25	; 0x29
     e30:	88 a7       	std	Y+40, r24	; 0x28
     e32:	88 a5       	ldd	r24, Y+40	; 0x28
     e34:	99 a5       	ldd	r25, Y+41	; 0x29
     e36:	01 97       	sbiw	r24, 0x01	; 1
     e38:	f1 f7       	brne	.-4      	; 0xe36 <HLCD_voidInit+0x1a8>
     e3a:	99 a7       	std	Y+41, r25	; 0x29
     e3c:	88 a7       	std	Y+40, r24	; 0x28
     e3e:	0f c0       	rjmp	.+30     	; 0xe5e <HLCD_voidInit+0x1d0>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     e40:	6f a9       	ldd	r22, Y+55	; 0x37
     e42:	78 ad       	ldd	r23, Y+56	; 0x38
     e44:	89 ad       	ldd	r24, Y+57	; 0x39
     e46:	9a ad       	ldd	r25, Y+58	; 0x3a
     e48:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     e4c:	dc 01       	movw	r26, r24
     e4e:	cb 01       	movw	r24, r22
     e50:	8e ab       	std	Y+54, r24	; 0x36
     e52:	8e a9       	ldd	r24, Y+54	; 0x36
     e54:	8f a3       	std	Y+39, r24	; 0x27
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     e56:	8f a1       	ldd	r24, Y+39	; 0x27
     e58:	8a 95       	dec	r24
     e5a:	f1 f7       	brne	.-4      	; 0xe58 <HLCD_voidInit+0x1ca>
     e5c:	8f a3       	std	Y+39, r24	; 0x27
	_delay_us(50);
	HLCD_voidSendCmd(0x0C);
     e5e:	8c e0       	ldi	r24, 0x0C	; 12
     e60:	0e 94 65 0a 	call	0x14ca	; 0x14ca <HLCD_voidSendCmd>
     e64:	80 e0       	ldi	r24, 0x00	; 0
     e66:	90 e0       	ldi	r25, 0x00	; 0
     e68:	a8 e4       	ldi	r26, 0x48	; 72
     e6a:	b2 e4       	ldi	r27, 0x42	; 66
     e6c:	8b a3       	std	Y+35, r24	; 0x23
     e6e:	9c a3       	std	Y+36, r25	; 0x24
     e70:	ad a3       	std	Y+37, r26	; 0x25
     e72:	be a3       	std	Y+38, r27	; 0x26
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     e74:	6b a1       	ldd	r22, Y+35	; 0x23
     e76:	7c a1       	ldd	r23, Y+36	; 0x24
     e78:	8d a1       	ldd	r24, Y+37	; 0x25
     e7a:	9e a1       	ldd	r25, Y+38	; 0x26
     e7c:	2b ea       	ldi	r18, 0xAB	; 171
     e7e:	3a ea       	ldi	r19, 0xAA	; 170
     e80:	4a e2       	ldi	r20, 0x2A	; 42
     e82:	50 e4       	ldi	r21, 0x40	; 64
     e84:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     e88:	dc 01       	movw	r26, r24
     e8a:	cb 01       	movw	r24, r22
     e8c:	8f 8f       	std	Y+31, r24	; 0x1f
     e8e:	98 a3       	std	Y+32, r25	; 0x20
     e90:	a9 a3       	std	Y+33, r26	; 0x21
     e92:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
     e94:	6f 8d       	ldd	r22, Y+31	; 0x1f
     e96:	78 a1       	ldd	r23, Y+32	; 0x20
     e98:	89 a1       	ldd	r24, Y+33	; 0x21
     e9a:	9a a1       	ldd	r25, Y+34	; 0x22
     e9c:	20 e0       	ldi	r18, 0x00	; 0
     e9e:	30 e0       	ldi	r19, 0x00	; 0
     ea0:	40 e8       	ldi	r20, 0x80	; 128
     ea2:	5f e3       	ldi	r21, 0x3F	; 63
     ea4:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
     ea8:	88 23       	and	r24, r24
     eaa:	1c f4       	brge	.+6      	; 0xeb2 <HLCD_voidInit+0x224>
		__ticks = 1;
     eac:	81 e0       	ldi	r24, 0x01	; 1
     eae:	8e 8f       	std	Y+30, r24	; 0x1e
     eb0:	91 c0       	rjmp	.+290    	; 0xfd4 <HLCD_voidInit+0x346>
	else if (__tmp > 255)
     eb2:	6f 8d       	ldd	r22, Y+31	; 0x1f
     eb4:	78 a1       	ldd	r23, Y+32	; 0x20
     eb6:	89 a1       	ldd	r24, Y+33	; 0x21
     eb8:	9a a1       	ldd	r25, Y+34	; 0x22
     eba:	20 e0       	ldi	r18, 0x00	; 0
     ebc:	30 e0       	ldi	r19, 0x00	; 0
     ebe:	4f e7       	ldi	r20, 0x7F	; 127
     ec0:	53 e4       	ldi	r21, 0x43	; 67
     ec2:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
     ec6:	18 16       	cp	r1, r24
     ec8:	0c f0       	brlt	.+2      	; 0xecc <HLCD_voidInit+0x23e>
     eca:	7b c0       	rjmp	.+246    	; 0xfc2 <HLCD_voidInit+0x334>
	{
		_delay_ms(__us / 1000.0);
     ecc:	6b a1       	ldd	r22, Y+35	; 0x23
     ece:	7c a1       	ldd	r23, Y+36	; 0x24
     ed0:	8d a1       	ldd	r24, Y+37	; 0x25
     ed2:	9e a1       	ldd	r25, Y+38	; 0x26
     ed4:	20 e0       	ldi	r18, 0x00	; 0
     ed6:	30 e0       	ldi	r19, 0x00	; 0
     ed8:	4a e7       	ldi	r20, 0x7A	; 122
     eda:	54 e4       	ldi	r21, 0x44	; 68
     edc:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
     ee0:	dc 01       	movw	r26, r24
     ee2:	cb 01       	movw	r24, r22
     ee4:	8a 8f       	std	Y+26, r24	; 0x1a
     ee6:	9b 8f       	std	Y+27, r25	; 0x1b
     ee8:	ac 8f       	std	Y+28, r26	; 0x1c
     eea:	bd 8f       	std	Y+29, r27	; 0x1d
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     eec:	6a 8d       	ldd	r22, Y+26	; 0x1a
     eee:	7b 8d       	ldd	r23, Y+27	; 0x1b
     ef0:	8c 8d       	ldd	r24, Y+28	; 0x1c
     ef2:	9d 8d       	ldd	r25, Y+29	; 0x1d
     ef4:	20 e0       	ldi	r18, 0x00	; 0
     ef6:	30 e0       	ldi	r19, 0x00	; 0
     ef8:	4a ef       	ldi	r20, 0xFA	; 250
     efa:	54 e4       	ldi	r21, 0x44	; 68
     efc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     f00:	dc 01       	movw	r26, r24
     f02:	cb 01       	movw	r24, r22
     f04:	8e 8b       	std	Y+22, r24	; 0x16
     f06:	9f 8b       	std	Y+23, r25	; 0x17
     f08:	a8 8f       	std	Y+24, r26	; 0x18
     f0a:	b9 8f       	std	Y+25, r27	; 0x19
	if (__tmp < 1.0)
     f0c:	6e 89       	ldd	r22, Y+22	; 0x16
     f0e:	7f 89       	ldd	r23, Y+23	; 0x17
     f10:	88 8d       	ldd	r24, Y+24	; 0x18
     f12:	99 8d       	ldd	r25, Y+25	; 0x19
     f14:	20 e0       	ldi	r18, 0x00	; 0
     f16:	30 e0       	ldi	r19, 0x00	; 0
     f18:	40 e8       	ldi	r20, 0x80	; 128
     f1a:	5f e3       	ldi	r21, 0x3F	; 63
     f1c:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
     f20:	88 23       	and	r24, r24
     f22:	2c f4       	brge	.+10     	; 0xf2e <HLCD_voidInit+0x2a0>
		__ticks = 1;
     f24:	81 e0       	ldi	r24, 0x01	; 1
     f26:	90 e0       	ldi	r25, 0x00	; 0
     f28:	9d 8b       	std	Y+21, r25	; 0x15
     f2a:	8c 8b       	std	Y+20, r24	; 0x14
     f2c:	3f c0       	rjmp	.+126    	; 0xfac <HLCD_voidInit+0x31e>
	else if (__tmp > 65535)
     f2e:	6e 89       	ldd	r22, Y+22	; 0x16
     f30:	7f 89       	ldd	r23, Y+23	; 0x17
     f32:	88 8d       	ldd	r24, Y+24	; 0x18
     f34:	99 8d       	ldd	r25, Y+25	; 0x19
     f36:	20 e0       	ldi	r18, 0x00	; 0
     f38:	3f ef       	ldi	r19, 0xFF	; 255
     f3a:	4f e7       	ldi	r20, 0x7F	; 127
     f3c:	57 e4       	ldi	r21, 0x47	; 71
     f3e:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
     f42:	18 16       	cp	r1, r24
     f44:	4c f5       	brge	.+82     	; 0xf98 <HLCD_voidInit+0x30a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f46:	6a 8d       	ldd	r22, Y+26	; 0x1a
     f48:	7b 8d       	ldd	r23, Y+27	; 0x1b
     f4a:	8c 8d       	ldd	r24, Y+28	; 0x1c
     f4c:	9d 8d       	ldd	r25, Y+29	; 0x1d
     f4e:	20 e0       	ldi	r18, 0x00	; 0
     f50:	30 e0       	ldi	r19, 0x00	; 0
     f52:	40 e2       	ldi	r20, 0x20	; 32
     f54:	51 e4       	ldi	r21, 0x41	; 65
     f56:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     f5a:	dc 01       	movw	r26, r24
     f5c:	cb 01       	movw	r24, r22
     f5e:	bc 01       	movw	r22, r24
     f60:	cd 01       	movw	r24, r26
     f62:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     f66:	dc 01       	movw	r26, r24
     f68:	cb 01       	movw	r24, r22
     f6a:	9d 8b       	std	Y+21, r25	; 0x15
     f6c:	8c 8b       	std	Y+20, r24	; 0x14
     f6e:	0f c0       	rjmp	.+30     	; 0xf8e <HLCD_voidInit+0x300>
     f70:	88 ec       	ldi	r24, 0xC8	; 200
     f72:	90 e0       	ldi	r25, 0x00	; 0
     f74:	9b 8b       	std	Y+19, r25	; 0x13
     f76:	8a 8b       	std	Y+18, r24	; 0x12
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     f78:	8a 89       	ldd	r24, Y+18	; 0x12
     f7a:	9b 89       	ldd	r25, Y+19	; 0x13
     f7c:	01 97       	sbiw	r24, 0x01	; 1
     f7e:	f1 f7       	brne	.-4      	; 0xf7c <HLCD_voidInit+0x2ee>
     f80:	9b 8b       	std	Y+19, r25	; 0x13
     f82:	8a 8b       	std	Y+18, r24	; 0x12
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f84:	8c 89       	ldd	r24, Y+20	; 0x14
     f86:	9d 89       	ldd	r25, Y+21	; 0x15
     f88:	01 97       	sbiw	r24, 0x01	; 1
     f8a:	9d 8b       	std	Y+21, r25	; 0x15
     f8c:	8c 8b       	std	Y+20, r24	; 0x14
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f8e:	8c 89       	ldd	r24, Y+20	; 0x14
     f90:	9d 89       	ldd	r25, Y+21	; 0x15
     f92:	00 97       	sbiw	r24, 0x00	; 0
     f94:	69 f7       	brne	.-38     	; 0xf70 <HLCD_voidInit+0x2e2>
     f96:	24 c0       	rjmp	.+72     	; 0xfe0 <HLCD_voidInit+0x352>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f98:	6e 89       	ldd	r22, Y+22	; 0x16
     f9a:	7f 89       	ldd	r23, Y+23	; 0x17
     f9c:	88 8d       	ldd	r24, Y+24	; 0x18
     f9e:	99 8d       	ldd	r25, Y+25	; 0x19
     fa0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     fa4:	dc 01       	movw	r26, r24
     fa6:	cb 01       	movw	r24, r22
     fa8:	9d 8b       	std	Y+21, r25	; 0x15
     faa:	8c 8b       	std	Y+20, r24	; 0x14
     fac:	8c 89       	ldd	r24, Y+20	; 0x14
     fae:	9d 89       	ldd	r25, Y+21	; 0x15
     fb0:	99 8b       	std	Y+17, r25	; 0x11
     fb2:	88 8b       	std	Y+16, r24	; 0x10
     fb4:	88 89       	ldd	r24, Y+16	; 0x10
     fb6:	99 89       	ldd	r25, Y+17	; 0x11
     fb8:	01 97       	sbiw	r24, 0x01	; 1
     fba:	f1 f7       	brne	.-4      	; 0xfb8 <HLCD_voidInit+0x32a>
     fbc:	99 8b       	std	Y+17, r25	; 0x11
     fbe:	88 8b       	std	Y+16, r24	; 0x10
     fc0:	0f c0       	rjmp	.+30     	; 0xfe0 <HLCD_voidInit+0x352>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     fc2:	6f 8d       	ldd	r22, Y+31	; 0x1f
     fc4:	78 a1       	ldd	r23, Y+32	; 0x20
     fc6:	89 a1       	ldd	r24, Y+33	; 0x21
     fc8:	9a a1       	ldd	r25, Y+34	; 0x22
     fca:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     fce:	dc 01       	movw	r26, r24
     fd0:	cb 01       	movw	r24, r22
     fd2:	8e 8f       	std	Y+30, r24	; 0x1e
     fd4:	8e 8d       	ldd	r24, Y+30	; 0x1e
     fd6:	8f 87       	std	Y+15, r24	; 0x0f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     fd8:	8f 85       	ldd	r24, Y+15	; 0x0f
     fda:	8a 95       	dec	r24
     fdc:	f1 f7       	brne	.-4      	; 0xfda <HLCD_voidInit+0x34c>
     fde:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_us(50);
	HLCD_voidSendCmd(0x01);
     fe0:	81 e0       	ldi	r24, 0x01	; 1
     fe2:	0e 94 65 0a 	call	0x14ca	; 0x14ca <HLCD_voidSendCmd>
     fe6:	80 e0       	ldi	r24, 0x00	; 0
     fe8:	90 e0       	ldi	r25, 0x00	; 0
     fea:	a0 e0       	ldi	r26, 0x00	; 0
     fec:	b0 e4       	ldi	r27, 0x40	; 64
     fee:	8b 87       	std	Y+11, r24	; 0x0b
     ff0:	9c 87       	std	Y+12, r25	; 0x0c
     ff2:	ad 87       	std	Y+13, r26	; 0x0d
     ff4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     ff6:	6b 85       	ldd	r22, Y+11	; 0x0b
     ff8:	7c 85       	ldd	r23, Y+12	; 0x0c
     ffa:	8d 85       	ldd	r24, Y+13	; 0x0d
     ffc:	9e 85       	ldd	r25, Y+14	; 0x0e
     ffe:	20 e0       	ldi	r18, 0x00	; 0
    1000:	30 e0       	ldi	r19, 0x00	; 0
    1002:	4a ef       	ldi	r20, 0xFA	; 250
    1004:	54 e4       	ldi	r21, 0x44	; 68
    1006:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    100a:	dc 01       	movw	r26, r24
    100c:	cb 01       	movw	r24, r22
    100e:	8f 83       	std	Y+7, r24	; 0x07
    1010:	98 87       	std	Y+8, r25	; 0x08
    1012:	a9 87       	std	Y+9, r26	; 0x09
    1014:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1016:	6f 81       	ldd	r22, Y+7	; 0x07
    1018:	78 85       	ldd	r23, Y+8	; 0x08
    101a:	89 85       	ldd	r24, Y+9	; 0x09
    101c:	9a 85       	ldd	r25, Y+10	; 0x0a
    101e:	20 e0       	ldi	r18, 0x00	; 0
    1020:	30 e0       	ldi	r19, 0x00	; 0
    1022:	40 e8       	ldi	r20, 0x80	; 128
    1024:	5f e3       	ldi	r21, 0x3F	; 63
    1026:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    102a:	88 23       	and	r24, r24
    102c:	2c f4       	brge	.+10     	; 0x1038 <HLCD_voidInit+0x3aa>
		__ticks = 1;
    102e:	81 e0       	ldi	r24, 0x01	; 1
    1030:	90 e0       	ldi	r25, 0x00	; 0
    1032:	9e 83       	std	Y+6, r25	; 0x06
    1034:	8d 83       	std	Y+5, r24	; 0x05
    1036:	3f c0       	rjmp	.+126    	; 0x10b6 <HLCD_voidInit+0x428>
	else if (__tmp > 65535)
    1038:	6f 81       	ldd	r22, Y+7	; 0x07
    103a:	78 85       	ldd	r23, Y+8	; 0x08
    103c:	89 85       	ldd	r24, Y+9	; 0x09
    103e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1040:	20 e0       	ldi	r18, 0x00	; 0
    1042:	3f ef       	ldi	r19, 0xFF	; 255
    1044:	4f e7       	ldi	r20, 0x7F	; 127
    1046:	57 e4       	ldi	r21, 0x47	; 71
    1048:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    104c:	18 16       	cp	r1, r24
    104e:	4c f5       	brge	.+82     	; 0x10a2 <HLCD_voidInit+0x414>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1050:	6b 85       	ldd	r22, Y+11	; 0x0b
    1052:	7c 85       	ldd	r23, Y+12	; 0x0c
    1054:	8d 85       	ldd	r24, Y+13	; 0x0d
    1056:	9e 85       	ldd	r25, Y+14	; 0x0e
    1058:	20 e0       	ldi	r18, 0x00	; 0
    105a:	30 e0       	ldi	r19, 0x00	; 0
    105c:	40 e2       	ldi	r20, 0x20	; 32
    105e:	51 e4       	ldi	r21, 0x41	; 65
    1060:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1064:	dc 01       	movw	r26, r24
    1066:	cb 01       	movw	r24, r22
    1068:	bc 01       	movw	r22, r24
    106a:	cd 01       	movw	r24, r26
    106c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1070:	dc 01       	movw	r26, r24
    1072:	cb 01       	movw	r24, r22
    1074:	9e 83       	std	Y+6, r25	; 0x06
    1076:	8d 83       	std	Y+5, r24	; 0x05
    1078:	0f c0       	rjmp	.+30     	; 0x1098 <HLCD_voidInit+0x40a>
    107a:	88 ec       	ldi	r24, 0xC8	; 200
    107c:	90 e0       	ldi	r25, 0x00	; 0
    107e:	9c 83       	std	Y+4, r25	; 0x04
    1080:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1082:	8b 81       	ldd	r24, Y+3	; 0x03
    1084:	9c 81       	ldd	r25, Y+4	; 0x04
    1086:	01 97       	sbiw	r24, 0x01	; 1
    1088:	f1 f7       	brne	.-4      	; 0x1086 <HLCD_voidInit+0x3f8>
    108a:	9c 83       	std	Y+4, r25	; 0x04
    108c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    108e:	8d 81       	ldd	r24, Y+5	; 0x05
    1090:	9e 81       	ldd	r25, Y+6	; 0x06
    1092:	01 97       	sbiw	r24, 0x01	; 1
    1094:	9e 83       	std	Y+6, r25	; 0x06
    1096:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1098:	8d 81       	ldd	r24, Y+5	; 0x05
    109a:	9e 81       	ldd	r25, Y+6	; 0x06
    109c:	00 97       	sbiw	r24, 0x00	; 0
    109e:	69 f7       	brne	.-38     	; 0x107a <HLCD_voidInit+0x3ec>
    10a0:	14 c0       	rjmp	.+40     	; 0x10ca <HLCD_voidInit+0x43c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    10a2:	6f 81       	ldd	r22, Y+7	; 0x07
    10a4:	78 85       	ldd	r23, Y+8	; 0x08
    10a6:	89 85       	ldd	r24, Y+9	; 0x09
    10a8:	9a 85       	ldd	r25, Y+10	; 0x0a
    10aa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    10ae:	dc 01       	movw	r26, r24
    10b0:	cb 01       	movw	r24, r22
    10b2:	9e 83       	std	Y+6, r25	; 0x06
    10b4:	8d 83       	std	Y+5, r24	; 0x05
    10b6:	8d 81       	ldd	r24, Y+5	; 0x05
    10b8:	9e 81       	ldd	r25, Y+6	; 0x06
    10ba:	9a 83       	std	Y+2, r25	; 0x02
    10bc:	89 83       	std	Y+1, r24	; 0x01
    10be:	89 81       	ldd	r24, Y+1	; 0x01
    10c0:	9a 81       	ldd	r25, Y+2	; 0x02
    10c2:	01 97       	sbiw	r24, 0x01	; 1
    10c4:	f1 f7       	brne	.-4      	; 0x10c2 <HLCD_voidInit+0x434>
    10c6:	9a 83       	std	Y+2, r25	; 0x02
    10c8:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	HLCD_voidSendCmd(0x06);
    10ca:	86 e0       	ldi	r24, 0x06	; 6
    10cc:	0e 94 65 0a 	call	0x14ca	; 0x14ca <HLCD_voidSendCmd>
}
    10d0:	ee 96       	adiw	r28, 0x3e	; 62
    10d2:	0f b6       	in	r0, 0x3f	; 63
    10d4:	f8 94       	cli
    10d6:	de bf       	out	0x3e, r29	; 62
    10d8:	0f be       	out	0x3f, r0	; 63
    10da:	cd bf       	out	0x3d, r28	; 61
    10dc:	cf 91       	pop	r28
    10de:	df 91       	pop	r29
    10e0:	08 95       	ret

000010e2 <HLCD_voidSendChar>:
void HLCD_voidSendChar(char ARG_u8Data)
{
    10e2:	df 93       	push	r29
    10e4:	cf 93       	push	r28
    10e6:	cd b7       	in	r28, 0x3d	; 61
    10e8:	de b7       	in	r29, 0x3e	; 62
    10ea:	e9 97       	sbiw	r28, 0x39	; 57
    10ec:	0f b6       	in	r0, 0x3f	; 63
    10ee:	f8 94       	cli
    10f0:	de bf       	out	0x3e, r29	; 62
    10f2:	0f be       	out	0x3f, r0	; 63
    10f4:	cd bf       	out	0x3d, r28	; 61
    10f6:	89 af       	std	Y+57, r24	; 0x39
	/*control preparation*/
	MDIO_stderrorSetPinValue(LCD_CONTROL_PORT,LCD_RS_PIN,MDIO_HIGH);
    10f8:	82 e0       	ldi	r24, 0x02	; 2
    10fa:	61 e0       	ldi	r22, 0x01	; 1
    10fc:	42 e0       	ldi	r20, 0x02	; 2
    10fe:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <MDIO_stderrorSetPinValue>
	MDIO_stderrorSetPinValue(LCD_CONTROL_PORT,LCD_RW_PIN,MDIO_LOW);
    1102:	82 e0       	ldi	r24, 0x02	; 2
    1104:	62 e0       	ldi	r22, 0x02	; 2
    1106:	41 e0       	ldi	r20, 0x01	; 1
    1108:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <MDIO_stderrorSetPinValue>
    110c:	80 e0       	ldi	r24, 0x00	; 0
    110e:	90 e0       	ldi	r25, 0x00	; 0
    1110:	a0 e8       	ldi	r26, 0x80	; 128
    1112:	bf e3       	ldi	r27, 0x3F	; 63
    1114:	8d ab       	std	Y+53, r24	; 0x35
    1116:	9e ab       	std	Y+54, r25	; 0x36
    1118:	af ab       	std	Y+55, r26	; 0x37
    111a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    111c:	6d a9       	ldd	r22, Y+53	; 0x35
    111e:	7e a9       	ldd	r23, Y+54	; 0x36
    1120:	8f a9       	ldd	r24, Y+55	; 0x37
    1122:	98 ad       	ldd	r25, Y+56	; 0x38
    1124:	20 e0       	ldi	r18, 0x00	; 0
    1126:	30 e0       	ldi	r19, 0x00	; 0
    1128:	4a ef       	ldi	r20, 0xFA	; 250
    112a:	54 e4       	ldi	r21, 0x44	; 68
    112c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1130:	dc 01       	movw	r26, r24
    1132:	cb 01       	movw	r24, r22
    1134:	89 ab       	std	Y+49, r24	; 0x31
    1136:	9a ab       	std	Y+50, r25	; 0x32
    1138:	ab ab       	std	Y+51, r26	; 0x33
    113a:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    113c:	69 a9       	ldd	r22, Y+49	; 0x31
    113e:	7a a9       	ldd	r23, Y+50	; 0x32
    1140:	8b a9       	ldd	r24, Y+51	; 0x33
    1142:	9c a9       	ldd	r25, Y+52	; 0x34
    1144:	20 e0       	ldi	r18, 0x00	; 0
    1146:	30 e0       	ldi	r19, 0x00	; 0
    1148:	40 e8       	ldi	r20, 0x80	; 128
    114a:	5f e3       	ldi	r21, 0x3F	; 63
    114c:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1150:	88 23       	and	r24, r24
    1152:	2c f4       	brge	.+10     	; 0x115e <HLCD_voidSendChar+0x7c>
		__ticks = 1;
    1154:	81 e0       	ldi	r24, 0x01	; 1
    1156:	90 e0       	ldi	r25, 0x00	; 0
    1158:	98 ab       	std	Y+48, r25	; 0x30
    115a:	8f a7       	std	Y+47, r24	; 0x2f
    115c:	3f c0       	rjmp	.+126    	; 0x11dc <HLCD_voidSendChar+0xfa>
	else if (__tmp > 65535)
    115e:	69 a9       	ldd	r22, Y+49	; 0x31
    1160:	7a a9       	ldd	r23, Y+50	; 0x32
    1162:	8b a9       	ldd	r24, Y+51	; 0x33
    1164:	9c a9       	ldd	r25, Y+52	; 0x34
    1166:	20 e0       	ldi	r18, 0x00	; 0
    1168:	3f ef       	ldi	r19, 0xFF	; 255
    116a:	4f e7       	ldi	r20, 0x7F	; 127
    116c:	57 e4       	ldi	r21, 0x47	; 71
    116e:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1172:	18 16       	cp	r1, r24
    1174:	4c f5       	brge	.+82     	; 0x11c8 <HLCD_voidSendChar+0xe6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1176:	6d a9       	ldd	r22, Y+53	; 0x35
    1178:	7e a9       	ldd	r23, Y+54	; 0x36
    117a:	8f a9       	ldd	r24, Y+55	; 0x37
    117c:	98 ad       	ldd	r25, Y+56	; 0x38
    117e:	20 e0       	ldi	r18, 0x00	; 0
    1180:	30 e0       	ldi	r19, 0x00	; 0
    1182:	40 e2       	ldi	r20, 0x20	; 32
    1184:	51 e4       	ldi	r21, 0x41	; 65
    1186:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    118a:	dc 01       	movw	r26, r24
    118c:	cb 01       	movw	r24, r22
    118e:	bc 01       	movw	r22, r24
    1190:	cd 01       	movw	r24, r26
    1192:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1196:	dc 01       	movw	r26, r24
    1198:	cb 01       	movw	r24, r22
    119a:	98 ab       	std	Y+48, r25	; 0x30
    119c:	8f a7       	std	Y+47, r24	; 0x2f
    119e:	0f c0       	rjmp	.+30     	; 0x11be <HLCD_voidSendChar+0xdc>
    11a0:	88 ec       	ldi	r24, 0xC8	; 200
    11a2:	90 e0       	ldi	r25, 0x00	; 0
    11a4:	9e a7       	std	Y+46, r25	; 0x2e
    11a6:	8d a7       	std	Y+45, r24	; 0x2d
    11a8:	8d a5       	ldd	r24, Y+45	; 0x2d
    11aa:	9e a5       	ldd	r25, Y+46	; 0x2e
    11ac:	01 97       	sbiw	r24, 0x01	; 1
    11ae:	f1 f7       	brne	.-4      	; 0x11ac <HLCD_voidSendChar+0xca>
    11b0:	9e a7       	std	Y+46, r25	; 0x2e
    11b2:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    11b4:	8f a5       	ldd	r24, Y+47	; 0x2f
    11b6:	98 a9       	ldd	r25, Y+48	; 0x30
    11b8:	01 97       	sbiw	r24, 0x01	; 1
    11ba:	98 ab       	std	Y+48, r25	; 0x30
    11bc:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    11be:	8f a5       	ldd	r24, Y+47	; 0x2f
    11c0:	98 a9       	ldd	r25, Y+48	; 0x30
    11c2:	00 97       	sbiw	r24, 0x00	; 0
    11c4:	69 f7       	brne	.-38     	; 0x11a0 <HLCD_voidSendChar+0xbe>
    11c6:	14 c0       	rjmp	.+40     	; 0x11f0 <HLCD_voidSendChar+0x10e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    11c8:	69 a9       	ldd	r22, Y+49	; 0x31
    11ca:	7a a9       	ldd	r23, Y+50	; 0x32
    11cc:	8b a9       	ldd	r24, Y+51	; 0x33
    11ce:	9c a9       	ldd	r25, Y+52	; 0x34
    11d0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    11d4:	dc 01       	movw	r26, r24
    11d6:	cb 01       	movw	r24, r22
    11d8:	98 ab       	std	Y+48, r25	; 0x30
    11da:	8f a7       	std	Y+47, r24	; 0x2f
    11dc:	8f a5       	ldd	r24, Y+47	; 0x2f
    11de:	98 a9       	ldd	r25, Y+48	; 0x30
    11e0:	9c a7       	std	Y+44, r25	; 0x2c
    11e2:	8b a7       	std	Y+43, r24	; 0x2b
    11e4:	8b a5       	ldd	r24, Y+43	; 0x2b
    11e6:	9c a5       	ldd	r25, Y+44	; 0x2c
    11e8:	01 97       	sbiw	r24, 0x01	; 1
    11ea:	f1 f7       	brne	.-4      	; 0x11e8 <HLCD_voidSendChar+0x106>
    11ec:	9c a7       	std	Y+44, r25	; 0x2c
    11ee:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);
	/*enable preparation & send Data*/
	MDIO_stderrorSetPinValue(LCD_CONTROL_PORT,LCD_E_PIN,MDIO_HIGH);
    11f0:	82 e0       	ldi	r24, 0x02	; 2
    11f2:	63 e0       	ldi	r22, 0x03	; 3
    11f4:	42 e0       	ldi	r20, 0x02	; 2
    11f6:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <MDIO_stderrorSetPinValue>
    11fa:	80 e0       	ldi	r24, 0x00	; 0
    11fc:	90 e0       	ldi	r25, 0x00	; 0
    11fe:	a0 e8       	ldi	r26, 0x80	; 128
    1200:	bf e3       	ldi	r27, 0x3F	; 63
    1202:	8f a3       	std	Y+39, r24	; 0x27
    1204:	98 a7       	std	Y+40, r25	; 0x28
    1206:	a9 a7       	std	Y+41, r26	; 0x29
    1208:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    120a:	6f a1       	ldd	r22, Y+39	; 0x27
    120c:	78 a5       	ldd	r23, Y+40	; 0x28
    120e:	89 a5       	ldd	r24, Y+41	; 0x29
    1210:	9a a5       	ldd	r25, Y+42	; 0x2a
    1212:	20 e0       	ldi	r18, 0x00	; 0
    1214:	30 e0       	ldi	r19, 0x00	; 0
    1216:	4a ef       	ldi	r20, 0xFA	; 250
    1218:	54 e4       	ldi	r21, 0x44	; 68
    121a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    121e:	dc 01       	movw	r26, r24
    1220:	cb 01       	movw	r24, r22
    1222:	8b a3       	std	Y+35, r24	; 0x23
    1224:	9c a3       	std	Y+36, r25	; 0x24
    1226:	ad a3       	std	Y+37, r26	; 0x25
    1228:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    122a:	6b a1       	ldd	r22, Y+35	; 0x23
    122c:	7c a1       	ldd	r23, Y+36	; 0x24
    122e:	8d a1       	ldd	r24, Y+37	; 0x25
    1230:	9e a1       	ldd	r25, Y+38	; 0x26
    1232:	20 e0       	ldi	r18, 0x00	; 0
    1234:	30 e0       	ldi	r19, 0x00	; 0
    1236:	40 e8       	ldi	r20, 0x80	; 128
    1238:	5f e3       	ldi	r21, 0x3F	; 63
    123a:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    123e:	88 23       	and	r24, r24
    1240:	2c f4       	brge	.+10     	; 0x124c <HLCD_voidSendChar+0x16a>
		__ticks = 1;
    1242:	81 e0       	ldi	r24, 0x01	; 1
    1244:	90 e0       	ldi	r25, 0x00	; 0
    1246:	9a a3       	std	Y+34, r25	; 0x22
    1248:	89 a3       	std	Y+33, r24	; 0x21
    124a:	3f c0       	rjmp	.+126    	; 0x12ca <HLCD_voidSendChar+0x1e8>
	else if (__tmp > 65535)
    124c:	6b a1       	ldd	r22, Y+35	; 0x23
    124e:	7c a1       	ldd	r23, Y+36	; 0x24
    1250:	8d a1       	ldd	r24, Y+37	; 0x25
    1252:	9e a1       	ldd	r25, Y+38	; 0x26
    1254:	20 e0       	ldi	r18, 0x00	; 0
    1256:	3f ef       	ldi	r19, 0xFF	; 255
    1258:	4f e7       	ldi	r20, 0x7F	; 127
    125a:	57 e4       	ldi	r21, 0x47	; 71
    125c:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1260:	18 16       	cp	r1, r24
    1262:	4c f5       	brge	.+82     	; 0x12b6 <HLCD_voidSendChar+0x1d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1264:	6f a1       	ldd	r22, Y+39	; 0x27
    1266:	78 a5       	ldd	r23, Y+40	; 0x28
    1268:	89 a5       	ldd	r24, Y+41	; 0x29
    126a:	9a a5       	ldd	r25, Y+42	; 0x2a
    126c:	20 e0       	ldi	r18, 0x00	; 0
    126e:	30 e0       	ldi	r19, 0x00	; 0
    1270:	40 e2       	ldi	r20, 0x20	; 32
    1272:	51 e4       	ldi	r21, 0x41	; 65
    1274:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1278:	dc 01       	movw	r26, r24
    127a:	cb 01       	movw	r24, r22
    127c:	bc 01       	movw	r22, r24
    127e:	cd 01       	movw	r24, r26
    1280:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1284:	dc 01       	movw	r26, r24
    1286:	cb 01       	movw	r24, r22
    1288:	9a a3       	std	Y+34, r25	; 0x22
    128a:	89 a3       	std	Y+33, r24	; 0x21
    128c:	0f c0       	rjmp	.+30     	; 0x12ac <HLCD_voidSendChar+0x1ca>
    128e:	88 ec       	ldi	r24, 0xC8	; 200
    1290:	90 e0       	ldi	r25, 0x00	; 0
    1292:	98 a3       	std	Y+32, r25	; 0x20
    1294:	8f 8f       	std	Y+31, r24	; 0x1f
    1296:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1298:	98 a1       	ldd	r25, Y+32	; 0x20
    129a:	01 97       	sbiw	r24, 0x01	; 1
    129c:	f1 f7       	brne	.-4      	; 0x129a <HLCD_voidSendChar+0x1b8>
    129e:	98 a3       	std	Y+32, r25	; 0x20
    12a0:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    12a2:	89 a1       	ldd	r24, Y+33	; 0x21
    12a4:	9a a1       	ldd	r25, Y+34	; 0x22
    12a6:	01 97       	sbiw	r24, 0x01	; 1
    12a8:	9a a3       	std	Y+34, r25	; 0x22
    12aa:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    12ac:	89 a1       	ldd	r24, Y+33	; 0x21
    12ae:	9a a1       	ldd	r25, Y+34	; 0x22
    12b0:	00 97       	sbiw	r24, 0x00	; 0
    12b2:	69 f7       	brne	.-38     	; 0x128e <HLCD_voidSendChar+0x1ac>
    12b4:	14 c0       	rjmp	.+40     	; 0x12de <HLCD_voidSendChar+0x1fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    12b6:	6b a1       	ldd	r22, Y+35	; 0x23
    12b8:	7c a1       	ldd	r23, Y+36	; 0x24
    12ba:	8d a1       	ldd	r24, Y+37	; 0x25
    12bc:	9e a1       	ldd	r25, Y+38	; 0x26
    12be:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    12c2:	dc 01       	movw	r26, r24
    12c4:	cb 01       	movw	r24, r22
    12c6:	9a a3       	std	Y+34, r25	; 0x22
    12c8:	89 a3       	std	Y+33, r24	; 0x21
    12ca:	89 a1       	ldd	r24, Y+33	; 0x21
    12cc:	9a a1       	ldd	r25, Y+34	; 0x22
    12ce:	9e 8f       	std	Y+30, r25	; 0x1e
    12d0:	8d 8f       	std	Y+29, r24	; 0x1d
    12d2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    12d4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    12d6:	01 97       	sbiw	r24, 0x01	; 1
    12d8:	f1 f7       	brne	.-4      	; 0x12d6 <HLCD_voidSendChar+0x1f4>
    12da:	9e 8f       	std	Y+30, r25	; 0x1e
    12dc:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
	MDIO_stderrorSetPortValue(LCD_DATA_PORT,ARG_u8Data);
    12de:	81 e0       	ldi	r24, 0x01	; 1
    12e0:	69 ad       	ldd	r22, Y+57	; 0x39
    12e2:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <MDIO_stderrorSetPortValue>
    12e6:	80 e0       	ldi	r24, 0x00	; 0
    12e8:	90 e0       	ldi	r25, 0x00	; 0
    12ea:	a0 e8       	ldi	r26, 0x80	; 128
    12ec:	bf e3       	ldi	r27, 0x3F	; 63
    12ee:	89 8f       	std	Y+25, r24	; 0x19
    12f0:	9a 8f       	std	Y+26, r25	; 0x1a
    12f2:	ab 8f       	std	Y+27, r26	; 0x1b
    12f4:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    12f6:	69 8d       	ldd	r22, Y+25	; 0x19
    12f8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    12fa:	8b 8d       	ldd	r24, Y+27	; 0x1b
    12fc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    12fe:	20 e0       	ldi	r18, 0x00	; 0
    1300:	30 e0       	ldi	r19, 0x00	; 0
    1302:	4a ef       	ldi	r20, 0xFA	; 250
    1304:	54 e4       	ldi	r21, 0x44	; 68
    1306:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    130a:	dc 01       	movw	r26, r24
    130c:	cb 01       	movw	r24, r22
    130e:	8d 8b       	std	Y+21, r24	; 0x15
    1310:	9e 8b       	std	Y+22, r25	; 0x16
    1312:	af 8b       	std	Y+23, r26	; 0x17
    1314:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1316:	6d 89       	ldd	r22, Y+21	; 0x15
    1318:	7e 89       	ldd	r23, Y+22	; 0x16
    131a:	8f 89       	ldd	r24, Y+23	; 0x17
    131c:	98 8d       	ldd	r25, Y+24	; 0x18
    131e:	20 e0       	ldi	r18, 0x00	; 0
    1320:	30 e0       	ldi	r19, 0x00	; 0
    1322:	40 e8       	ldi	r20, 0x80	; 128
    1324:	5f e3       	ldi	r21, 0x3F	; 63
    1326:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    132a:	88 23       	and	r24, r24
    132c:	2c f4       	brge	.+10     	; 0x1338 <HLCD_voidSendChar+0x256>
		__ticks = 1;
    132e:	81 e0       	ldi	r24, 0x01	; 1
    1330:	90 e0       	ldi	r25, 0x00	; 0
    1332:	9c 8b       	std	Y+20, r25	; 0x14
    1334:	8b 8b       	std	Y+19, r24	; 0x13
    1336:	3f c0       	rjmp	.+126    	; 0x13b6 <HLCD_voidSendChar+0x2d4>
	else if (__tmp > 65535)
    1338:	6d 89       	ldd	r22, Y+21	; 0x15
    133a:	7e 89       	ldd	r23, Y+22	; 0x16
    133c:	8f 89       	ldd	r24, Y+23	; 0x17
    133e:	98 8d       	ldd	r25, Y+24	; 0x18
    1340:	20 e0       	ldi	r18, 0x00	; 0
    1342:	3f ef       	ldi	r19, 0xFF	; 255
    1344:	4f e7       	ldi	r20, 0x7F	; 127
    1346:	57 e4       	ldi	r21, 0x47	; 71
    1348:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    134c:	18 16       	cp	r1, r24
    134e:	4c f5       	brge	.+82     	; 0x13a2 <HLCD_voidSendChar+0x2c0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1350:	69 8d       	ldd	r22, Y+25	; 0x19
    1352:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1354:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1356:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1358:	20 e0       	ldi	r18, 0x00	; 0
    135a:	30 e0       	ldi	r19, 0x00	; 0
    135c:	40 e2       	ldi	r20, 0x20	; 32
    135e:	51 e4       	ldi	r21, 0x41	; 65
    1360:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1364:	dc 01       	movw	r26, r24
    1366:	cb 01       	movw	r24, r22
    1368:	bc 01       	movw	r22, r24
    136a:	cd 01       	movw	r24, r26
    136c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1370:	dc 01       	movw	r26, r24
    1372:	cb 01       	movw	r24, r22
    1374:	9c 8b       	std	Y+20, r25	; 0x14
    1376:	8b 8b       	std	Y+19, r24	; 0x13
    1378:	0f c0       	rjmp	.+30     	; 0x1398 <HLCD_voidSendChar+0x2b6>
    137a:	88 ec       	ldi	r24, 0xC8	; 200
    137c:	90 e0       	ldi	r25, 0x00	; 0
    137e:	9a 8b       	std	Y+18, r25	; 0x12
    1380:	89 8b       	std	Y+17, r24	; 0x11
    1382:	89 89       	ldd	r24, Y+17	; 0x11
    1384:	9a 89       	ldd	r25, Y+18	; 0x12
    1386:	01 97       	sbiw	r24, 0x01	; 1
    1388:	f1 f7       	brne	.-4      	; 0x1386 <HLCD_voidSendChar+0x2a4>
    138a:	9a 8b       	std	Y+18, r25	; 0x12
    138c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    138e:	8b 89       	ldd	r24, Y+19	; 0x13
    1390:	9c 89       	ldd	r25, Y+20	; 0x14
    1392:	01 97       	sbiw	r24, 0x01	; 1
    1394:	9c 8b       	std	Y+20, r25	; 0x14
    1396:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1398:	8b 89       	ldd	r24, Y+19	; 0x13
    139a:	9c 89       	ldd	r25, Y+20	; 0x14
    139c:	00 97       	sbiw	r24, 0x00	; 0
    139e:	69 f7       	brne	.-38     	; 0x137a <HLCD_voidSendChar+0x298>
    13a0:	14 c0       	rjmp	.+40     	; 0x13ca <HLCD_voidSendChar+0x2e8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    13a2:	6d 89       	ldd	r22, Y+21	; 0x15
    13a4:	7e 89       	ldd	r23, Y+22	; 0x16
    13a6:	8f 89       	ldd	r24, Y+23	; 0x17
    13a8:	98 8d       	ldd	r25, Y+24	; 0x18
    13aa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    13ae:	dc 01       	movw	r26, r24
    13b0:	cb 01       	movw	r24, r22
    13b2:	9c 8b       	std	Y+20, r25	; 0x14
    13b4:	8b 8b       	std	Y+19, r24	; 0x13
    13b6:	8b 89       	ldd	r24, Y+19	; 0x13
    13b8:	9c 89       	ldd	r25, Y+20	; 0x14
    13ba:	98 8b       	std	Y+16, r25	; 0x10
    13bc:	8f 87       	std	Y+15, r24	; 0x0f
    13be:	8f 85       	ldd	r24, Y+15	; 0x0f
    13c0:	98 89       	ldd	r25, Y+16	; 0x10
    13c2:	01 97       	sbiw	r24, 0x01	; 1
    13c4:	f1 f7       	brne	.-4      	; 0x13c2 <HLCD_voidSendChar+0x2e0>
    13c6:	98 8b       	std	Y+16, r25	; 0x10
    13c8:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	MDIO_stderrorSetPinValue(LCD_CONTROL_PORT,LCD_E_PIN,MDIO_LOW);
    13ca:	82 e0       	ldi	r24, 0x02	; 2
    13cc:	63 e0       	ldi	r22, 0x03	; 3
    13ce:	41 e0       	ldi	r20, 0x01	; 1
    13d0:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <MDIO_stderrorSetPinValue>
    13d4:	80 e0       	ldi	r24, 0x00	; 0
    13d6:	90 e0       	ldi	r25, 0x00	; 0
    13d8:	a0 e0       	ldi	r26, 0x00	; 0
    13da:	b0 e4       	ldi	r27, 0x40	; 64
    13dc:	8b 87       	std	Y+11, r24	; 0x0b
    13de:	9c 87       	std	Y+12, r25	; 0x0c
    13e0:	ad 87       	std	Y+13, r26	; 0x0d
    13e2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    13e4:	6b 85       	ldd	r22, Y+11	; 0x0b
    13e6:	7c 85       	ldd	r23, Y+12	; 0x0c
    13e8:	8d 85       	ldd	r24, Y+13	; 0x0d
    13ea:	9e 85       	ldd	r25, Y+14	; 0x0e
    13ec:	20 e0       	ldi	r18, 0x00	; 0
    13ee:	30 e0       	ldi	r19, 0x00	; 0
    13f0:	4a ef       	ldi	r20, 0xFA	; 250
    13f2:	54 e4       	ldi	r21, 0x44	; 68
    13f4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    13f8:	dc 01       	movw	r26, r24
    13fa:	cb 01       	movw	r24, r22
    13fc:	8f 83       	std	Y+7, r24	; 0x07
    13fe:	98 87       	std	Y+8, r25	; 0x08
    1400:	a9 87       	std	Y+9, r26	; 0x09
    1402:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1404:	6f 81       	ldd	r22, Y+7	; 0x07
    1406:	78 85       	ldd	r23, Y+8	; 0x08
    1408:	89 85       	ldd	r24, Y+9	; 0x09
    140a:	9a 85       	ldd	r25, Y+10	; 0x0a
    140c:	20 e0       	ldi	r18, 0x00	; 0
    140e:	30 e0       	ldi	r19, 0x00	; 0
    1410:	40 e8       	ldi	r20, 0x80	; 128
    1412:	5f e3       	ldi	r21, 0x3F	; 63
    1414:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1418:	88 23       	and	r24, r24
    141a:	2c f4       	brge	.+10     	; 0x1426 <HLCD_voidSendChar+0x344>
		__ticks = 1;
    141c:	81 e0       	ldi	r24, 0x01	; 1
    141e:	90 e0       	ldi	r25, 0x00	; 0
    1420:	9e 83       	std	Y+6, r25	; 0x06
    1422:	8d 83       	std	Y+5, r24	; 0x05
    1424:	3f c0       	rjmp	.+126    	; 0x14a4 <HLCD_voidSendChar+0x3c2>
	else if (__tmp > 65535)
    1426:	6f 81       	ldd	r22, Y+7	; 0x07
    1428:	78 85       	ldd	r23, Y+8	; 0x08
    142a:	89 85       	ldd	r24, Y+9	; 0x09
    142c:	9a 85       	ldd	r25, Y+10	; 0x0a
    142e:	20 e0       	ldi	r18, 0x00	; 0
    1430:	3f ef       	ldi	r19, 0xFF	; 255
    1432:	4f e7       	ldi	r20, 0x7F	; 127
    1434:	57 e4       	ldi	r21, 0x47	; 71
    1436:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    143a:	18 16       	cp	r1, r24
    143c:	4c f5       	brge	.+82     	; 0x1490 <HLCD_voidSendChar+0x3ae>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    143e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1440:	7c 85       	ldd	r23, Y+12	; 0x0c
    1442:	8d 85       	ldd	r24, Y+13	; 0x0d
    1444:	9e 85       	ldd	r25, Y+14	; 0x0e
    1446:	20 e0       	ldi	r18, 0x00	; 0
    1448:	30 e0       	ldi	r19, 0x00	; 0
    144a:	40 e2       	ldi	r20, 0x20	; 32
    144c:	51 e4       	ldi	r21, 0x41	; 65
    144e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1452:	dc 01       	movw	r26, r24
    1454:	cb 01       	movw	r24, r22
    1456:	bc 01       	movw	r22, r24
    1458:	cd 01       	movw	r24, r26
    145a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    145e:	dc 01       	movw	r26, r24
    1460:	cb 01       	movw	r24, r22
    1462:	9e 83       	std	Y+6, r25	; 0x06
    1464:	8d 83       	std	Y+5, r24	; 0x05
    1466:	0f c0       	rjmp	.+30     	; 0x1486 <HLCD_voidSendChar+0x3a4>
    1468:	88 ec       	ldi	r24, 0xC8	; 200
    146a:	90 e0       	ldi	r25, 0x00	; 0
    146c:	9c 83       	std	Y+4, r25	; 0x04
    146e:	8b 83       	std	Y+3, r24	; 0x03
    1470:	8b 81       	ldd	r24, Y+3	; 0x03
    1472:	9c 81       	ldd	r25, Y+4	; 0x04
    1474:	01 97       	sbiw	r24, 0x01	; 1
    1476:	f1 f7       	brne	.-4      	; 0x1474 <HLCD_voidSendChar+0x392>
    1478:	9c 83       	std	Y+4, r25	; 0x04
    147a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    147c:	8d 81       	ldd	r24, Y+5	; 0x05
    147e:	9e 81       	ldd	r25, Y+6	; 0x06
    1480:	01 97       	sbiw	r24, 0x01	; 1
    1482:	9e 83       	std	Y+6, r25	; 0x06
    1484:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1486:	8d 81       	ldd	r24, Y+5	; 0x05
    1488:	9e 81       	ldd	r25, Y+6	; 0x06
    148a:	00 97       	sbiw	r24, 0x00	; 0
    148c:	69 f7       	brne	.-38     	; 0x1468 <HLCD_voidSendChar+0x386>
    148e:	14 c0       	rjmp	.+40     	; 0x14b8 <HLCD_voidSendChar+0x3d6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1490:	6f 81       	ldd	r22, Y+7	; 0x07
    1492:	78 85       	ldd	r23, Y+8	; 0x08
    1494:	89 85       	ldd	r24, Y+9	; 0x09
    1496:	9a 85       	ldd	r25, Y+10	; 0x0a
    1498:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    149c:	dc 01       	movw	r26, r24
    149e:	cb 01       	movw	r24, r22
    14a0:	9e 83       	std	Y+6, r25	; 0x06
    14a2:	8d 83       	std	Y+5, r24	; 0x05
    14a4:	8d 81       	ldd	r24, Y+5	; 0x05
    14a6:	9e 81       	ldd	r25, Y+6	; 0x06
    14a8:	9a 83       	std	Y+2, r25	; 0x02
    14aa:	89 83       	std	Y+1, r24	; 0x01
    14ac:	89 81       	ldd	r24, Y+1	; 0x01
    14ae:	9a 81       	ldd	r25, Y+2	; 0x02
    14b0:	01 97       	sbiw	r24, 0x01	; 1
    14b2:	f1 f7       	brne	.-4      	; 0x14b0 <HLCD_voidSendChar+0x3ce>
    14b4:	9a 83       	std	Y+2, r25	; 0x02
    14b6:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);

}
    14b8:	e9 96       	adiw	r28, 0x39	; 57
    14ba:	0f b6       	in	r0, 0x3f	; 63
    14bc:	f8 94       	cli
    14be:	de bf       	out	0x3e, r29	; 62
    14c0:	0f be       	out	0x3f, r0	; 63
    14c2:	cd bf       	out	0x3d, r28	; 61
    14c4:	cf 91       	pop	r28
    14c6:	df 91       	pop	r29
    14c8:	08 95       	ret

000014ca <HLCD_voidSendCmd>:

void HLCD_voidSendCmd(u8 ARG_u8Cmd)
{
    14ca:	df 93       	push	r29
    14cc:	cf 93       	push	r28
    14ce:	cd b7       	in	r28, 0x3d	; 61
    14d0:	de b7       	in	r29, 0x3e	; 62
    14d2:	6d 97       	sbiw	r28, 0x1d	; 29
    14d4:	0f b6       	in	r0, 0x3f	; 63
    14d6:	f8 94       	cli
    14d8:	de bf       	out	0x3e, r29	; 62
    14da:	0f be       	out	0x3f, r0	; 63
    14dc:	cd bf       	out	0x3d, r28	; 61
    14de:	8d 8f       	std	Y+29, r24	; 0x1d
	/*control preparation*/
	MDIO_stderrorSetPinValue(LCD_CONTROL_PORT,LCD_RS_PIN,MDIO_LOW);
    14e0:	82 e0       	ldi	r24, 0x02	; 2
    14e2:	61 e0       	ldi	r22, 0x01	; 1
    14e4:	41 e0       	ldi	r20, 0x01	; 1
    14e6:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <MDIO_stderrorSetPinValue>
	MDIO_stderrorSetPinValue(LCD_CONTROL_PORT,LCD_RW_PIN,MDIO_LOW);
    14ea:	82 e0       	ldi	r24, 0x02	; 2
    14ec:	62 e0       	ldi	r22, 0x02	; 2
    14ee:	41 e0       	ldi	r20, 0x01	; 1
    14f0:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <MDIO_stderrorSetPinValue>

	/*enable preparation & send cmd*/
	MDIO_stderrorSetPinValue(LCD_CONTROL_PORT,LCD_E_PIN,MDIO_HIGH);
    14f4:	82 e0       	ldi	r24, 0x02	; 2
    14f6:	63 e0       	ldi	r22, 0x03	; 3
    14f8:	42 e0       	ldi	r20, 0x02	; 2
    14fa:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <MDIO_stderrorSetPinValue>
    14fe:	80 e0       	ldi	r24, 0x00	; 0
    1500:	90 e0       	ldi	r25, 0x00	; 0
    1502:	a0 e8       	ldi	r26, 0x80	; 128
    1504:	bf e3       	ldi	r27, 0x3F	; 63
    1506:	89 8f       	std	Y+25, r24	; 0x19
    1508:	9a 8f       	std	Y+26, r25	; 0x1a
    150a:	ab 8f       	std	Y+27, r26	; 0x1b
    150c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    150e:	69 8d       	ldd	r22, Y+25	; 0x19
    1510:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1512:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1514:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1516:	20 e0       	ldi	r18, 0x00	; 0
    1518:	30 e0       	ldi	r19, 0x00	; 0
    151a:	4a ef       	ldi	r20, 0xFA	; 250
    151c:	54 e4       	ldi	r21, 0x44	; 68
    151e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1522:	dc 01       	movw	r26, r24
    1524:	cb 01       	movw	r24, r22
    1526:	8d 8b       	std	Y+21, r24	; 0x15
    1528:	9e 8b       	std	Y+22, r25	; 0x16
    152a:	af 8b       	std	Y+23, r26	; 0x17
    152c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    152e:	6d 89       	ldd	r22, Y+21	; 0x15
    1530:	7e 89       	ldd	r23, Y+22	; 0x16
    1532:	8f 89       	ldd	r24, Y+23	; 0x17
    1534:	98 8d       	ldd	r25, Y+24	; 0x18
    1536:	20 e0       	ldi	r18, 0x00	; 0
    1538:	30 e0       	ldi	r19, 0x00	; 0
    153a:	40 e8       	ldi	r20, 0x80	; 128
    153c:	5f e3       	ldi	r21, 0x3F	; 63
    153e:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1542:	88 23       	and	r24, r24
    1544:	2c f4       	brge	.+10     	; 0x1550 <HLCD_voidSendCmd+0x86>
		__ticks = 1;
    1546:	81 e0       	ldi	r24, 0x01	; 1
    1548:	90 e0       	ldi	r25, 0x00	; 0
    154a:	9c 8b       	std	Y+20, r25	; 0x14
    154c:	8b 8b       	std	Y+19, r24	; 0x13
    154e:	3f c0       	rjmp	.+126    	; 0x15ce <HLCD_voidSendCmd+0x104>
	else if (__tmp > 65535)
    1550:	6d 89       	ldd	r22, Y+21	; 0x15
    1552:	7e 89       	ldd	r23, Y+22	; 0x16
    1554:	8f 89       	ldd	r24, Y+23	; 0x17
    1556:	98 8d       	ldd	r25, Y+24	; 0x18
    1558:	20 e0       	ldi	r18, 0x00	; 0
    155a:	3f ef       	ldi	r19, 0xFF	; 255
    155c:	4f e7       	ldi	r20, 0x7F	; 127
    155e:	57 e4       	ldi	r21, 0x47	; 71
    1560:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1564:	18 16       	cp	r1, r24
    1566:	4c f5       	brge	.+82     	; 0x15ba <HLCD_voidSendCmd+0xf0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1568:	69 8d       	ldd	r22, Y+25	; 0x19
    156a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    156c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    156e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1570:	20 e0       	ldi	r18, 0x00	; 0
    1572:	30 e0       	ldi	r19, 0x00	; 0
    1574:	40 e2       	ldi	r20, 0x20	; 32
    1576:	51 e4       	ldi	r21, 0x41	; 65
    1578:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    157c:	dc 01       	movw	r26, r24
    157e:	cb 01       	movw	r24, r22
    1580:	bc 01       	movw	r22, r24
    1582:	cd 01       	movw	r24, r26
    1584:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1588:	dc 01       	movw	r26, r24
    158a:	cb 01       	movw	r24, r22
    158c:	9c 8b       	std	Y+20, r25	; 0x14
    158e:	8b 8b       	std	Y+19, r24	; 0x13
    1590:	0f c0       	rjmp	.+30     	; 0x15b0 <HLCD_voidSendCmd+0xe6>
    1592:	88 ec       	ldi	r24, 0xC8	; 200
    1594:	90 e0       	ldi	r25, 0x00	; 0
    1596:	9a 8b       	std	Y+18, r25	; 0x12
    1598:	89 8b       	std	Y+17, r24	; 0x11
    159a:	89 89       	ldd	r24, Y+17	; 0x11
    159c:	9a 89       	ldd	r25, Y+18	; 0x12
    159e:	01 97       	sbiw	r24, 0x01	; 1
    15a0:	f1 f7       	brne	.-4      	; 0x159e <HLCD_voidSendCmd+0xd4>
    15a2:	9a 8b       	std	Y+18, r25	; 0x12
    15a4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15a6:	8b 89       	ldd	r24, Y+19	; 0x13
    15a8:	9c 89       	ldd	r25, Y+20	; 0x14
    15aa:	01 97       	sbiw	r24, 0x01	; 1
    15ac:	9c 8b       	std	Y+20, r25	; 0x14
    15ae:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15b0:	8b 89       	ldd	r24, Y+19	; 0x13
    15b2:	9c 89       	ldd	r25, Y+20	; 0x14
    15b4:	00 97       	sbiw	r24, 0x00	; 0
    15b6:	69 f7       	brne	.-38     	; 0x1592 <HLCD_voidSendCmd+0xc8>
    15b8:	14 c0       	rjmp	.+40     	; 0x15e2 <HLCD_voidSendCmd+0x118>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15ba:	6d 89       	ldd	r22, Y+21	; 0x15
    15bc:	7e 89       	ldd	r23, Y+22	; 0x16
    15be:	8f 89       	ldd	r24, Y+23	; 0x17
    15c0:	98 8d       	ldd	r25, Y+24	; 0x18
    15c2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    15c6:	dc 01       	movw	r26, r24
    15c8:	cb 01       	movw	r24, r22
    15ca:	9c 8b       	std	Y+20, r25	; 0x14
    15cc:	8b 8b       	std	Y+19, r24	; 0x13
    15ce:	8b 89       	ldd	r24, Y+19	; 0x13
    15d0:	9c 89       	ldd	r25, Y+20	; 0x14
    15d2:	98 8b       	std	Y+16, r25	; 0x10
    15d4:	8f 87       	std	Y+15, r24	; 0x0f
    15d6:	8f 85       	ldd	r24, Y+15	; 0x0f
    15d8:	98 89       	ldd	r25, Y+16	; 0x10
    15da:	01 97       	sbiw	r24, 0x01	; 1
    15dc:	f1 f7       	brne	.-4      	; 0x15da <HLCD_voidSendCmd+0x110>
    15de:	98 8b       	std	Y+16, r25	; 0x10
    15e0:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	MDIO_stderrorSetPortValue(LCD_DATA_PORT,ARG_u8Cmd);
    15e2:	81 e0       	ldi	r24, 0x01	; 1
    15e4:	6d 8d       	ldd	r22, Y+29	; 0x1d
    15e6:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <MDIO_stderrorSetPortValue>
    15ea:	80 e0       	ldi	r24, 0x00	; 0
    15ec:	90 e0       	ldi	r25, 0x00	; 0
    15ee:	a0 e8       	ldi	r26, 0x80	; 128
    15f0:	bf e3       	ldi	r27, 0x3F	; 63
    15f2:	8b 87       	std	Y+11, r24	; 0x0b
    15f4:	9c 87       	std	Y+12, r25	; 0x0c
    15f6:	ad 87       	std	Y+13, r26	; 0x0d
    15f8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    15fa:	6b 85       	ldd	r22, Y+11	; 0x0b
    15fc:	7c 85       	ldd	r23, Y+12	; 0x0c
    15fe:	8d 85       	ldd	r24, Y+13	; 0x0d
    1600:	9e 85       	ldd	r25, Y+14	; 0x0e
    1602:	20 e0       	ldi	r18, 0x00	; 0
    1604:	30 e0       	ldi	r19, 0x00	; 0
    1606:	4a ef       	ldi	r20, 0xFA	; 250
    1608:	54 e4       	ldi	r21, 0x44	; 68
    160a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    160e:	dc 01       	movw	r26, r24
    1610:	cb 01       	movw	r24, r22
    1612:	8f 83       	std	Y+7, r24	; 0x07
    1614:	98 87       	std	Y+8, r25	; 0x08
    1616:	a9 87       	std	Y+9, r26	; 0x09
    1618:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    161a:	6f 81       	ldd	r22, Y+7	; 0x07
    161c:	78 85       	ldd	r23, Y+8	; 0x08
    161e:	89 85       	ldd	r24, Y+9	; 0x09
    1620:	9a 85       	ldd	r25, Y+10	; 0x0a
    1622:	20 e0       	ldi	r18, 0x00	; 0
    1624:	30 e0       	ldi	r19, 0x00	; 0
    1626:	40 e8       	ldi	r20, 0x80	; 128
    1628:	5f e3       	ldi	r21, 0x3F	; 63
    162a:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    162e:	88 23       	and	r24, r24
    1630:	2c f4       	brge	.+10     	; 0x163c <HLCD_voidSendCmd+0x172>
		__ticks = 1;
    1632:	81 e0       	ldi	r24, 0x01	; 1
    1634:	90 e0       	ldi	r25, 0x00	; 0
    1636:	9e 83       	std	Y+6, r25	; 0x06
    1638:	8d 83       	std	Y+5, r24	; 0x05
    163a:	3f c0       	rjmp	.+126    	; 0x16ba <HLCD_voidSendCmd+0x1f0>
	else if (__tmp > 65535)
    163c:	6f 81       	ldd	r22, Y+7	; 0x07
    163e:	78 85       	ldd	r23, Y+8	; 0x08
    1640:	89 85       	ldd	r24, Y+9	; 0x09
    1642:	9a 85       	ldd	r25, Y+10	; 0x0a
    1644:	20 e0       	ldi	r18, 0x00	; 0
    1646:	3f ef       	ldi	r19, 0xFF	; 255
    1648:	4f e7       	ldi	r20, 0x7F	; 127
    164a:	57 e4       	ldi	r21, 0x47	; 71
    164c:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1650:	18 16       	cp	r1, r24
    1652:	4c f5       	brge	.+82     	; 0x16a6 <HLCD_voidSendCmd+0x1dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1654:	6b 85       	ldd	r22, Y+11	; 0x0b
    1656:	7c 85       	ldd	r23, Y+12	; 0x0c
    1658:	8d 85       	ldd	r24, Y+13	; 0x0d
    165a:	9e 85       	ldd	r25, Y+14	; 0x0e
    165c:	20 e0       	ldi	r18, 0x00	; 0
    165e:	30 e0       	ldi	r19, 0x00	; 0
    1660:	40 e2       	ldi	r20, 0x20	; 32
    1662:	51 e4       	ldi	r21, 0x41	; 65
    1664:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1668:	dc 01       	movw	r26, r24
    166a:	cb 01       	movw	r24, r22
    166c:	bc 01       	movw	r22, r24
    166e:	cd 01       	movw	r24, r26
    1670:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1674:	dc 01       	movw	r26, r24
    1676:	cb 01       	movw	r24, r22
    1678:	9e 83       	std	Y+6, r25	; 0x06
    167a:	8d 83       	std	Y+5, r24	; 0x05
    167c:	0f c0       	rjmp	.+30     	; 0x169c <HLCD_voidSendCmd+0x1d2>
    167e:	88 ec       	ldi	r24, 0xC8	; 200
    1680:	90 e0       	ldi	r25, 0x00	; 0
    1682:	9c 83       	std	Y+4, r25	; 0x04
    1684:	8b 83       	std	Y+3, r24	; 0x03
    1686:	8b 81       	ldd	r24, Y+3	; 0x03
    1688:	9c 81       	ldd	r25, Y+4	; 0x04
    168a:	01 97       	sbiw	r24, 0x01	; 1
    168c:	f1 f7       	brne	.-4      	; 0x168a <HLCD_voidSendCmd+0x1c0>
    168e:	9c 83       	std	Y+4, r25	; 0x04
    1690:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1692:	8d 81       	ldd	r24, Y+5	; 0x05
    1694:	9e 81       	ldd	r25, Y+6	; 0x06
    1696:	01 97       	sbiw	r24, 0x01	; 1
    1698:	9e 83       	std	Y+6, r25	; 0x06
    169a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    169c:	8d 81       	ldd	r24, Y+5	; 0x05
    169e:	9e 81       	ldd	r25, Y+6	; 0x06
    16a0:	00 97       	sbiw	r24, 0x00	; 0
    16a2:	69 f7       	brne	.-38     	; 0x167e <HLCD_voidSendCmd+0x1b4>
    16a4:	14 c0       	rjmp	.+40     	; 0x16ce <HLCD_voidSendCmd+0x204>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    16a6:	6f 81       	ldd	r22, Y+7	; 0x07
    16a8:	78 85       	ldd	r23, Y+8	; 0x08
    16aa:	89 85       	ldd	r24, Y+9	; 0x09
    16ac:	9a 85       	ldd	r25, Y+10	; 0x0a
    16ae:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    16b2:	dc 01       	movw	r26, r24
    16b4:	cb 01       	movw	r24, r22
    16b6:	9e 83       	std	Y+6, r25	; 0x06
    16b8:	8d 83       	std	Y+5, r24	; 0x05
    16ba:	8d 81       	ldd	r24, Y+5	; 0x05
    16bc:	9e 81       	ldd	r25, Y+6	; 0x06
    16be:	9a 83       	std	Y+2, r25	; 0x02
    16c0:	89 83       	std	Y+1, r24	; 0x01
    16c2:	89 81       	ldd	r24, Y+1	; 0x01
    16c4:	9a 81       	ldd	r25, Y+2	; 0x02
    16c6:	01 97       	sbiw	r24, 0x01	; 1
    16c8:	f1 f7       	brne	.-4      	; 0x16c6 <HLCD_voidSendCmd+0x1fc>
    16ca:	9a 83       	std	Y+2, r25	; 0x02
    16cc:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
	MDIO_stderrorSetPinValue(LCD_CONTROL_PORT,LCD_E_PIN,MDIO_LOW);
    16ce:	82 e0       	ldi	r24, 0x02	; 2
    16d0:	63 e0       	ldi	r22, 0x03	; 3
    16d2:	41 e0       	ldi	r20, 0x01	; 1
    16d4:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <MDIO_stderrorSetPinValue>

}
    16d8:	6d 96       	adiw	r28, 0x1d	; 29
    16da:	0f b6       	in	r0, 0x3f	; 63
    16dc:	f8 94       	cli
    16de:	de bf       	out	0x3e, r29	; 62
    16e0:	0f be       	out	0x3f, r0	; 63
    16e2:	cd bf       	out	0x3d, r28	; 61
    16e4:	cf 91       	pop	r28
    16e6:	df 91       	pop	r29
    16e8:	08 95       	ret

000016ea <HLCD_voidSendString>:
void HLCD_voidSendString(const char * ARG_ccharpString)
{
    16ea:	df 93       	push	r29
    16ec:	cf 93       	push	r28
    16ee:	00 d0       	rcall	.+0      	; 0x16f0 <HLCD_voidSendString+0x6>
    16f0:	0f 92       	push	r0
    16f2:	cd b7       	in	r28, 0x3d	; 61
    16f4:	de b7       	in	r29, 0x3e	; 62
    16f6:	9b 83       	std	Y+3, r25	; 0x03
    16f8:	8a 83       	std	Y+2, r24	; 0x02
	if(ARG_ccharpString != NULL_POINTER )
    16fa:	8a 81       	ldd	r24, Y+2	; 0x02
    16fc:	9b 81       	ldd	r25, Y+3	; 0x03
    16fe:	00 97       	sbiw	r24, 0x00	; 0
    1700:	d1 f0       	breq	.+52     	; 0x1736 <HLCD_voidSendString+0x4c>
	{
		u8 L_u8i=0;
    1702:	19 82       	std	Y+1, r1	; 0x01
		do{
			HLCD_voidSendChar(ARG_ccharpString[L_u8i]);
    1704:	89 81       	ldd	r24, Y+1	; 0x01
    1706:	28 2f       	mov	r18, r24
    1708:	30 e0       	ldi	r19, 0x00	; 0
    170a:	8a 81       	ldd	r24, Y+2	; 0x02
    170c:	9b 81       	ldd	r25, Y+3	; 0x03
    170e:	fc 01       	movw	r30, r24
    1710:	e2 0f       	add	r30, r18
    1712:	f3 1f       	adc	r31, r19
    1714:	80 81       	ld	r24, Z
    1716:	0e 94 71 08 	call	0x10e2	; 0x10e2 <HLCD_voidSendChar>
			L_u8i++;
    171a:	89 81       	ldd	r24, Y+1	; 0x01
    171c:	8f 5f       	subi	r24, 0xFF	; 255
    171e:	89 83       	std	Y+1, r24	; 0x01
		}while(ARG_ccharpString[L_u8i] != '\0' );
    1720:	89 81       	ldd	r24, Y+1	; 0x01
    1722:	28 2f       	mov	r18, r24
    1724:	30 e0       	ldi	r19, 0x00	; 0
    1726:	8a 81       	ldd	r24, Y+2	; 0x02
    1728:	9b 81       	ldd	r25, Y+3	; 0x03
    172a:	fc 01       	movw	r30, r24
    172c:	e2 0f       	add	r30, r18
    172e:	f3 1f       	adc	r31, r19
    1730:	80 81       	ld	r24, Z
    1732:	88 23       	and	r24, r24
    1734:	39 f7       	brne	.-50     	; 0x1704 <HLCD_voidSendString+0x1a>
	}

}
    1736:	0f 90       	pop	r0
    1738:	0f 90       	pop	r0
    173a:	0f 90       	pop	r0
    173c:	cf 91       	pop	r28
    173e:	df 91       	pop	r29
    1740:	08 95       	ret

00001742 <HLCD_voidSetCursor>:
void HLCD_voidSetCursor(u8 ARG_u8Row,u8 ARG_u8Col)
{
    1742:	df 93       	push	r29
    1744:	cf 93       	push	r28
    1746:	00 d0       	rcall	.+0      	; 0x1748 <HLCD_voidSetCursor+0x6>
    1748:	cd b7       	in	r28, 0x3d	; 61
    174a:	de b7       	in	r29, 0x3e	; 62
    174c:	89 83       	std	Y+1, r24	; 0x01
    174e:	6a 83       	std	Y+2, r22	; 0x02

	HLCD_voidSendCmd((0x80+ARG_u8Col+((ARG_u8Row*4)<<4)));
    1750:	89 81       	ldd	r24, Y+1	; 0x01
    1752:	88 2f       	mov	r24, r24
    1754:	90 e0       	ldi	r25, 0x00	; 0
    1756:	88 0f       	add	r24, r24
    1758:	99 1f       	adc	r25, r25
    175a:	88 0f       	add	r24, r24
    175c:	99 1f       	adc	r25, r25
    175e:	98 2f       	mov	r25, r24
    1760:	92 95       	swap	r25
    1762:	90 7f       	andi	r25, 0xF0	; 240
    1764:	8a 81       	ldd	r24, Y+2	; 0x02
    1766:	89 0f       	add	r24, r25
    1768:	80 58       	subi	r24, 0x80	; 128
    176a:	0e 94 65 0a 	call	0x14ca	; 0x14ca <HLCD_voidSendCmd>
}
    176e:	0f 90       	pop	r0
    1770:	0f 90       	pop	r0
    1772:	cf 91       	pop	r28
    1774:	df 91       	pop	r29
    1776:	08 95       	ret

00001778 <HLCD_voidWriteCustom>:
void HLCD_voidWriteCustom(const char * ARG_ccharpString,u8 ARG_u8Location)
{
    1778:	df 93       	push	r29
    177a:	cf 93       	push	r28
    177c:	00 d0       	rcall	.+0      	; 0x177e <HLCD_voidWriteCustom+0x6>
    177e:	00 d0       	rcall	.+0      	; 0x1780 <HLCD_voidWriteCustom+0x8>
    1780:	0f 92       	push	r0
    1782:	cd b7       	in	r28, 0x3d	; 61
    1784:	de b7       	in	r29, 0x3e	; 62
    1786:	9c 83       	std	Y+4, r25	; 0x04
    1788:	8b 83       	std	Y+3, r24	; 0x03
    178a:	6d 83       	std	Y+5, r22	; 0x05
	u8 L_u8address =0;
    178c:	1a 82       	std	Y+2, r1	; 0x02


	if(ARG_u8Location<8)
    178e:	8d 81       	ldd	r24, Y+5	; 0x05
    1790:	88 30       	cpi	r24, 0x08	; 8
    1792:	30 f5       	brcc	.+76     	; 0x17e0 <HLCD_voidWriteCustom+0x68>
	{
		L_u8address=ARG_u8Location*8;
    1794:	8d 81       	ldd	r24, Y+5	; 0x05
    1796:	88 2f       	mov	r24, r24
    1798:	90 e0       	ldi	r25, 0x00	; 0
    179a:	88 0f       	add	r24, r24
    179c:	99 1f       	adc	r25, r25
    179e:	88 0f       	add	r24, r24
    17a0:	99 1f       	adc	r25, r25
    17a2:	88 0f       	add	r24, r24
    17a4:	99 1f       	adc	r25, r25
    17a6:	8a 83       	std	Y+2, r24	; 0x02
		/*0-1-D5-D4-D3-D2-D1-D0 TO GO TO CGRAM D5-D0 LOCATION 0-7*/
		SET_BIT(L_u8address,6);
    17a8:	8a 81       	ldd	r24, Y+2	; 0x02
    17aa:	80 64       	ori	r24, 0x40	; 64
    17ac:	8a 83       	std	Y+2, r24	; 0x02
		HLCD_voidSendCmd(L_u8address);
    17ae:	8a 81       	ldd	r24, Y+2	; 0x02
    17b0:	0e 94 65 0a 	call	0x14ca	; 0x14ca <HLCD_voidSendCmd>
		u8 L_u8i;
		for(L_u8i=0;L_u8i<8;L_u8i++)
    17b4:	19 82       	std	Y+1, r1	; 0x01
    17b6:	0e c0       	rjmp	.+28     	; 0x17d4 <HLCD_voidWriteCustom+0x5c>
		{
			HLCD_voidSendChar(ARG_ccharpString[L_u8i]);
    17b8:	89 81       	ldd	r24, Y+1	; 0x01
    17ba:	28 2f       	mov	r18, r24
    17bc:	30 e0       	ldi	r19, 0x00	; 0
    17be:	8b 81       	ldd	r24, Y+3	; 0x03
    17c0:	9c 81       	ldd	r25, Y+4	; 0x04
    17c2:	fc 01       	movw	r30, r24
    17c4:	e2 0f       	add	r30, r18
    17c6:	f3 1f       	adc	r31, r19
    17c8:	80 81       	ld	r24, Z
    17ca:	0e 94 71 08 	call	0x10e2	; 0x10e2 <HLCD_voidSendChar>
		L_u8address=ARG_u8Location*8;
		/*0-1-D5-D4-D3-D2-D1-D0 TO GO TO CGRAM D5-D0 LOCATION 0-7*/
		SET_BIT(L_u8address,6);
		HLCD_voidSendCmd(L_u8address);
		u8 L_u8i;
		for(L_u8i=0;L_u8i<8;L_u8i++)
    17ce:	89 81       	ldd	r24, Y+1	; 0x01
    17d0:	8f 5f       	subi	r24, 0xFF	; 255
    17d2:	89 83       	std	Y+1, r24	; 0x01
    17d4:	89 81       	ldd	r24, Y+1	; 0x01
    17d6:	88 30       	cpi	r24, 0x08	; 8
    17d8:	78 f3       	brcs	.-34     	; 0x17b8 <HLCD_voidWriteCustom+0x40>
		{
			HLCD_voidSendChar(ARG_ccharpString[L_u8i]);
		}

		HLCD_voidSendCmd(0x02);/*return home*/
    17da:	82 e0       	ldi	r24, 0x02	; 2
    17dc:	0e 94 65 0a 	call	0x14ca	; 0x14ca <HLCD_voidSendCmd>
	{


	}

}
    17e0:	0f 90       	pop	r0
    17e2:	0f 90       	pop	r0
    17e4:	0f 90       	pop	r0
    17e6:	0f 90       	pop	r0
    17e8:	0f 90       	pop	r0
    17ea:	cf 91       	pop	r28
    17ec:	df 91       	pop	r29
    17ee:	08 95       	ret

000017f0 <HLCD_voidClear>:

void HLCD_voidClear(void)
{
    17f0:	df 93       	push	r29
    17f2:	cf 93       	push	r28
    17f4:	cd b7       	in	r28, 0x3d	; 61
    17f6:	de b7       	in	r29, 0x3e	; 62
	HLCD_voidSendCmd(0x01);//clear
    17f8:	81 e0       	ldi	r24, 0x01	; 1
    17fa:	0e 94 65 0a 	call	0x14ca	; 0x14ca <HLCD_voidSendCmd>
}
    17fe:	cf 91       	pop	r28
    1800:	df 91       	pop	r29
    1802:	08 95       	ret

00001804 <MDIO_stderrorSetPortDirection>:
STD_error_t MDIO_stderrorSetPortDirection
(
	u8 ARG_u8Port,
	u8 ARG_u8Direction
)
{
    1804:	df 93       	push	r29
    1806:	cf 93       	push	r28
    1808:	00 d0       	rcall	.+0      	; 0x180a <MDIO_stderrorSetPortDirection+0x6>
    180a:	00 d0       	rcall	.+0      	; 0x180c <MDIO_stderrorSetPortDirection+0x8>
    180c:	0f 92       	push	r0
    180e:	cd b7       	in	r28, 0x3d	; 61
    1810:	de b7       	in	r29, 0x3e	; 62
    1812:	8a 83       	std	Y+2, r24	; 0x02
    1814:	6b 83       	std	Y+3, r22	; 0x03
	STD_error_t L_stderrorError=E_NOK;
    1816:	19 82       	std	Y+1, r1	; 0x01
	switch(ARG_u8Port)
    1818:	8a 81       	ldd	r24, Y+2	; 0x02
    181a:	28 2f       	mov	r18, r24
    181c:	30 e0       	ldi	r19, 0x00	; 0
    181e:	3d 83       	std	Y+5, r19	; 0x05
    1820:	2c 83       	std	Y+4, r18	; 0x04
    1822:	8c 81       	ldd	r24, Y+4	; 0x04
    1824:	9d 81       	ldd	r25, Y+5	; 0x05
    1826:	82 30       	cpi	r24, 0x02	; 2
    1828:	91 05       	cpc	r25, r1
    182a:	e9 f0       	breq	.+58     	; 0x1866 <MDIO_stderrorSetPortDirection+0x62>
    182c:	2c 81       	ldd	r18, Y+4	; 0x04
    182e:	3d 81       	ldd	r19, Y+5	; 0x05
    1830:	23 30       	cpi	r18, 0x03	; 3
    1832:	31 05       	cpc	r19, r1
    1834:	34 f4       	brge	.+12     	; 0x1842 <MDIO_stderrorSetPortDirection+0x3e>
    1836:	8c 81       	ldd	r24, Y+4	; 0x04
    1838:	9d 81       	ldd	r25, Y+5	; 0x05
    183a:	81 30       	cpi	r24, 0x01	; 1
    183c:	91 05       	cpc	r25, r1
    183e:	61 f0       	breq	.+24     	; 0x1858 <MDIO_stderrorSetPortDirection+0x54>
    1840:	27 c0       	rjmp	.+78     	; 0x1890 <MDIO_stderrorSetPortDirection+0x8c>
    1842:	2c 81       	ldd	r18, Y+4	; 0x04
    1844:	3d 81       	ldd	r19, Y+5	; 0x05
    1846:	23 30       	cpi	r18, 0x03	; 3
    1848:	31 05       	cpc	r19, r1
    184a:	a1 f0       	breq	.+40     	; 0x1874 <MDIO_stderrorSetPortDirection+0x70>
    184c:	8c 81       	ldd	r24, Y+4	; 0x04
    184e:	9d 81       	ldd	r25, Y+5	; 0x05
    1850:	84 30       	cpi	r24, 0x04	; 4
    1852:	91 05       	cpc	r25, r1
    1854:	b1 f0       	breq	.+44     	; 0x1882 <MDIO_stderrorSetPortDirection+0x7e>
    1856:	1c c0       	rjmp	.+56     	; 0x1890 <MDIO_stderrorSetPortDirection+0x8c>
	{
		case MDIO_PORTA:GPIOA->DDR = ARG_u8Direction;L_stderrorError = E_OK;break;
    1858:	e9 e3       	ldi	r30, 0x39	; 57
    185a:	f0 e0       	ldi	r31, 0x00	; 0
    185c:	8b 81       	ldd	r24, Y+3	; 0x03
    185e:	81 83       	std	Z+1, r24	; 0x01
    1860:	81 e0       	ldi	r24, 0x01	; 1
    1862:	89 83       	std	Y+1, r24	; 0x01
    1864:	16 c0       	rjmp	.+44     	; 0x1892 <MDIO_stderrorSetPortDirection+0x8e>
		case MDIO_PORTB:GPIOB->DDR = ARG_u8Direction;L_stderrorError = E_OK;break;
    1866:	e6 e3       	ldi	r30, 0x36	; 54
    1868:	f0 e0       	ldi	r31, 0x00	; 0
    186a:	8b 81       	ldd	r24, Y+3	; 0x03
    186c:	81 83       	std	Z+1, r24	; 0x01
    186e:	81 e0       	ldi	r24, 0x01	; 1
    1870:	89 83       	std	Y+1, r24	; 0x01
    1872:	0f c0       	rjmp	.+30     	; 0x1892 <MDIO_stderrorSetPortDirection+0x8e>
		case MDIO_PORTC:GPIOC->DDR = ARG_u8Direction;L_stderrorError = E_OK;break;
    1874:	e3 e3       	ldi	r30, 0x33	; 51
    1876:	f0 e0       	ldi	r31, 0x00	; 0
    1878:	8b 81       	ldd	r24, Y+3	; 0x03
    187a:	81 83       	std	Z+1, r24	; 0x01
    187c:	81 e0       	ldi	r24, 0x01	; 1
    187e:	89 83       	std	Y+1, r24	; 0x01
    1880:	08 c0       	rjmp	.+16     	; 0x1892 <MDIO_stderrorSetPortDirection+0x8e>
		case MDIO_PORTD:GPIOD->DDR = ARG_u8Direction;L_stderrorError = E_OK;break;
    1882:	e0 e3       	ldi	r30, 0x30	; 48
    1884:	f0 e0       	ldi	r31, 0x00	; 0
    1886:	8b 81       	ldd	r24, Y+3	; 0x03
    1888:	81 83       	std	Z+1, r24	; 0x01
    188a:	81 e0       	ldi	r24, 0x01	; 1
    188c:	89 83       	std	Y+1, r24	; 0x01
    188e:	01 c0       	rjmp	.+2      	; 0x1892 <MDIO_stderrorSetPortDirection+0x8e>
		default:L_stderrorError = E_NOK;break;
    1890:	19 82       	std	Y+1, r1	; 0x01
	}
	return L_stderrorError;
    1892:	89 81       	ldd	r24, Y+1	; 0x01
}
    1894:	0f 90       	pop	r0
    1896:	0f 90       	pop	r0
    1898:	0f 90       	pop	r0
    189a:	0f 90       	pop	r0
    189c:	0f 90       	pop	r0
    189e:	cf 91       	pop	r28
    18a0:	df 91       	pop	r29
    18a2:	08 95       	ret

000018a4 <MDIO_stderrorSetPortValue>:
STD_error_t MDIO_stderrorSetPortValue
(
	u8 ARG_u8Port,
	u8 ARG_u8Value
)
{
    18a4:	df 93       	push	r29
    18a6:	cf 93       	push	r28
    18a8:	00 d0       	rcall	.+0      	; 0x18aa <MDIO_stderrorSetPortValue+0x6>
    18aa:	00 d0       	rcall	.+0      	; 0x18ac <MDIO_stderrorSetPortValue+0x8>
    18ac:	0f 92       	push	r0
    18ae:	cd b7       	in	r28, 0x3d	; 61
    18b0:	de b7       	in	r29, 0x3e	; 62
    18b2:	8a 83       	std	Y+2, r24	; 0x02
    18b4:	6b 83       	std	Y+3, r22	; 0x03
	STD_error_t L_stderrorError=E_NOK;
    18b6:	19 82       	std	Y+1, r1	; 0x01
	switch(ARG_u8Port)
    18b8:	8a 81       	ldd	r24, Y+2	; 0x02
    18ba:	28 2f       	mov	r18, r24
    18bc:	30 e0       	ldi	r19, 0x00	; 0
    18be:	3d 83       	std	Y+5, r19	; 0x05
    18c0:	2c 83       	std	Y+4, r18	; 0x04
    18c2:	8c 81       	ldd	r24, Y+4	; 0x04
    18c4:	9d 81       	ldd	r25, Y+5	; 0x05
    18c6:	82 30       	cpi	r24, 0x02	; 2
    18c8:	91 05       	cpc	r25, r1
    18ca:	e9 f0       	breq	.+58     	; 0x1906 <MDIO_stderrorSetPortValue+0x62>
    18cc:	2c 81       	ldd	r18, Y+4	; 0x04
    18ce:	3d 81       	ldd	r19, Y+5	; 0x05
    18d0:	23 30       	cpi	r18, 0x03	; 3
    18d2:	31 05       	cpc	r19, r1
    18d4:	34 f4       	brge	.+12     	; 0x18e2 <MDIO_stderrorSetPortValue+0x3e>
    18d6:	8c 81       	ldd	r24, Y+4	; 0x04
    18d8:	9d 81       	ldd	r25, Y+5	; 0x05
    18da:	81 30       	cpi	r24, 0x01	; 1
    18dc:	91 05       	cpc	r25, r1
    18de:	61 f0       	breq	.+24     	; 0x18f8 <MDIO_stderrorSetPortValue+0x54>
    18e0:	27 c0       	rjmp	.+78     	; 0x1930 <MDIO_stderrorSetPortValue+0x8c>
    18e2:	2c 81       	ldd	r18, Y+4	; 0x04
    18e4:	3d 81       	ldd	r19, Y+5	; 0x05
    18e6:	23 30       	cpi	r18, 0x03	; 3
    18e8:	31 05       	cpc	r19, r1
    18ea:	a1 f0       	breq	.+40     	; 0x1914 <MDIO_stderrorSetPortValue+0x70>
    18ec:	8c 81       	ldd	r24, Y+4	; 0x04
    18ee:	9d 81       	ldd	r25, Y+5	; 0x05
    18f0:	84 30       	cpi	r24, 0x04	; 4
    18f2:	91 05       	cpc	r25, r1
    18f4:	b1 f0       	breq	.+44     	; 0x1922 <MDIO_stderrorSetPortValue+0x7e>
    18f6:	1c c0       	rjmp	.+56     	; 0x1930 <MDIO_stderrorSetPortValue+0x8c>
	{
		case MDIO_PORTA:GPIOA->PORT = ARG_u8Value;L_stderrorError = E_OK;break;
    18f8:	e9 e3       	ldi	r30, 0x39	; 57
    18fa:	f0 e0       	ldi	r31, 0x00	; 0
    18fc:	8b 81       	ldd	r24, Y+3	; 0x03
    18fe:	82 83       	std	Z+2, r24	; 0x02
    1900:	81 e0       	ldi	r24, 0x01	; 1
    1902:	89 83       	std	Y+1, r24	; 0x01
    1904:	16 c0       	rjmp	.+44     	; 0x1932 <MDIO_stderrorSetPortValue+0x8e>
		case MDIO_PORTB:GPIOB->PORT = ARG_u8Value;L_stderrorError = E_OK;break;
    1906:	e6 e3       	ldi	r30, 0x36	; 54
    1908:	f0 e0       	ldi	r31, 0x00	; 0
    190a:	8b 81       	ldd	r24, Y+3	; 0x03
    190c:	82 83       	std	Z+2, r24	; 0x02
    190e:	81 e0       	ldi	r24, 0x01	; 1
    1910:	89 83       	std	Y+1, r24	; 0x01
    1912:	0f c0       	rjmp	.+30     	; 0x1932 <MDIO_stderrorSetPortValue+0x8e>
		case MDIO_PORTC:GPIOC->PORT = ARG_u8Value;L_stderrorError = E_OK;break;
    1914:	e3 e3       	ldi	r30, 0x33	; 51
    1916:	f0 e0       	ldi	r31, 0x00	; 0
    1918:	8b 81       	ldd	r24, Y+3	; 0x03
    191a:	82 83       	std	Z+2, r24	; 0x02
    191c:	81 e0       	ldi	r24, 0x01	; 1
    191e:	89 83       	std	Y+1, r24	; 0x01
    1920:	08 c0       	rjmp	.+16     	; 0x1932 <MDIO_stderrorSetPortValue+0x8e>
		case MDIO_PORTD:GPIOD->PORT = ARG_u8Value;L_stderrorError = E_OK;break;
    1922:	e0 e3       	ldi	r30, 0x30	; 48
    1924:	f0 e0       	ldi	r31, 0x00	; 0
    1926:	8b 81       	ldd	r24, Y+3	; 0x03
    1928:	82 83       	std	Z+2, r24	; 0x02
    192a:	81 e0       	ldi	r24, 0x01	; 1
    192c:	89 83       	std	Y+1, r24	; 0x01
    192e:	01 c0       	rjmp	.+2      	; 0x1932 <MDIO_stderrorSetPortValue+0x8e>
		default:L_stderrorError = E_NOK;break;
    1930:	19 82       	std	Y+1, r1	; 0x01
	}
	return L_stderrorError;
    1932:	89 81       	ldd	r24, Y+1	; 0x01
}
    1934:	0f 90       	pop	r0
    1936:	0f 90       	pop	r0
    1938:	0f 90       	pop	r0
    193a:	0f 90       	pop	r0
    193c:	0f 90       	pop	r0
    193e:	cf 91       	pop	r28
    1940:	df 91       	pop	r29
    1942:	08 95       	ret

00001944 <MDIO_stderrorGetPortValue>:
STD_error_t MDIO_stderrorGetPortValue
(
	u8 ARG_u8Port,
	u8* ARG_pu8Value
)
{
    1944:	df 93       	push	r29
    1946:	cf 93       	push	r28
    1948:	00 d0       	rcall	.+0      	; 0x194a <MDIO_stderrorGetPortValue+0x6>
    194a:	00 d0       	rcall	.+0      	; 0x194c <MDIO_stderrorGetPortValue+0x8>
    194c:	00 d0       	rcall	.+0      	; 0x194e <MDIO_stderrorGetPortValue+0xa>
    194e:	cd b7       	in	r28, 0x3d	; 61
    1950:	de b7       	in	r29, 0x3e	; 62
    1952:	8a 83       	std	Y+2, r24	; 0x02
    1954:	7c 83       	std	Y+4, r23	; 0x04
    1956:	6b 83       	std	Y+3, r22	; 0x03
	STD_error_t L_stderrorError=E_NOK;
    1958:	19 82       	std	Y+1, r1	; 0x01
	switch(ARG_u8Port)
    195a:	8a 81       	ldd	r24, Y+2	; 0x02
    195c:	28 2f       	mov	r18, r24
    195e:	30 e0       	ldi	r19, 0x00	; 0
    1960:	3e 83       	std	Y+6, r19	; 0x06
    1962:	2d 83       	std	Y+5, r18	; 0x05
    1964:	8d 81       	ldd	r24, Y+5	; 0x05
    1966:	9e 81       	ldd	r25, Y+6	; 0x06
    1968:	82 30       	cpi	r24, 0x02	; 2
    196a:	91 05       	cpc	r25, r1
    196c:	f9 f0       	breq	.+62     	; 0x19ac <MDIO_stderrorGetPortValue+0x68>
    196e:	2d 81       	ldd	r18, Y+5	; 0x05
    1970:	3e 81       	ldd	r19, Y+6	; 0x06
    1972:	23 30       	cpi	r18, 0x03	; 3
    1974:	31 05       	cpc	r19, r1
    1976:	34 f4       	brge	.+12     	; 0x1984 <MDIO_stderrorGetPortValue+0x40>
    1978:	8d 81       	ldd	r24, Y+5	; 0x05
    197a:	9e 81       	ldd	r25, Y+6	; 0x06
    197c:	81 30       	cpi	r24, 0x01	; 1
    197e:	91 05       	cpc	r25, r1
    1980:	61 f0       	breq	.+24     	; 0x199a <MDIO_stderrorGetPortValue+0x56>
    1982:	2f c0       	rjmp	.+94     	; 0x19e2 <MDIO_stderrorGetPortValue+0x9e>
    1984:	2d 81       	ldd	r18, Y+5	; 0x05
    1986:	3e 81       	ldd	r19, Y+6	; 0x06
    1988:	23 30       	cpi	r18, 0x03	; 3
    198a:	31 05       	cpc	r19, r1
    198c:	c1 f0       	breq	.+48     	; 0x19be <MDIO_stderrorGetPortValue+0x7a>
    198e:	8d 81       	ldd	r24, Y+5	; 0x05
    1990:	9e 81       	ldd	r25, Y+6	; 0x06
    1992:	84 30       	cpi	r24, 0x04	; 4
    1994:	91 05       	cpc	r25, r1
    1996:	e1 f0       	breq	.+56     	; 0x19d0 <MDIO_stderrorGetPortValue+0x8c>
    1998:	24 c0       	rjmp	.+72     	; 0x19e2 <MDIO_stderrorGetPortValue+0x9e>
	{
		case MDIO_PORTA: *ARG_pu8Value= GPIOA->PIN;L_stderrorError = E_OK;break;
    199a:	e9 e3       	ldi	r30, 0x39	; 57
    199c:	f0 e0       	ldi	r31, 0x00	; 0
    199e:	80 81       	ld	r24, Z
    19a0:	eb 81       	ldd	r30, Y+3	; 0x03
    19a2:	fc 81       	ldd	r31, Y+4	; 0x04
    19a4:	80 83       	st	Z, r24
    19a6:	81 e0       	ldi	r24, 0x01	; 1
    19a8:	89 83       	std	Y+1, r24	; 0x01
    19aa:	1c c0       	rjmp	.+56     	; 0x19e4 <MDIO_stderrorGetPortValue+0xa0>
		case MDIO_PORTB: *ARG_pu8Value= GPIOB->PIN;L_stderrorError = E_OK;break;
    19ac:	e6 e3       	ldi	r30, 0x36	; 54
    19ae:	f0 e0       	ldi	r31, 0x00	; 0
    19b0:	80 81       	ld	r24, Z
    19b2:	eb 81       	ldd	r30, Y+3	; 0x03
    19b4:	fc 81       	ldd	r31, Y+4	; 0x04
    19b6:	80 83       	st	Z, r24
    19b8:	81 e0       	ldi	r24, 0x01	; 1
    19ba:	89 83       	std	Y+1, r24	; 0x01
    19bc:	13 c0       	rjmp	.+38     	; 0x19e4 <MDIO_stderrorGetPortValue+0xa0>
		case MDIO_PORTC: *ARG_pu8Value= GPIOC->PIN;L_stderrorError = E_OK;break;
    19be:	e3 e3       	ldi	r30, 0x33	; 51
    19c0:	f0 e0       	ldi	r31, 0x00	; 0
    19c2:	80 81       	ld	r24, Z
    19c4:	eb 81       	ldd	r30, Y+3	; 0x03
    19c6:	fc 81       	ldd	r31, Y+4	; 0x04
    19c8:	80 83       	st	Z, r24
    19ca:	81 e0       	ldi	r24, 0x01	; 1
    19cc:	89 83       	std	Y+1, r24	; 0x01
    19ce:	0a c0       	rjmp	.+20     	; 0x19e4 <MDIO_stderrorGetPortValue+0xa0>
		case MDIO_PORTD: *ARG_pu8Value= GPIOD->PIN;L_stderrorError = E_OK;break;
    19d0:	e0 e3       	ldi	r30, 0x30	; 48
    19d2:	f0 e0       	ldi	r31, 0x00	; 0
    19d4:	80 81       	ld	r24, Z
    19d6:	eb 81       	ldd	r30, Y+3	; 0x03
    19d8:	fc 81       	ldd	r31, Y+4	; 0x04
    19da:	80 83       	st	Z, r24
    19dc:	81 e0       	ldi	r24, 0x01	; 1
    19de:	89 83       	std	Y+1, r24	; 0x01
    19e0:	01 c0       	rjmp	.+2      	; 0x19e4 <MDIO_stderrorGetPortValue+0xa0>
		default:L_stderrorError = E_NOK;break;
    19e2:	19 82       	std	Y+1, r1	; 0x01
	}
	return L_stderrorError;
    19e4:	89 81       	ldd	r24, Y+1	; 0x01
}
    19e6:	26 96       	adiw	r28, 0x06	; 6
    19e8:	0f b6       	in	r0, 0x3f	; 63
    19ea:	f8 94       	cli
    19ec:	de bf       	out	0x3e, r29	; 62
    19ee:	0f be       	out	0x3f, r0	; 63
    19f0:	cd bf       	out	0x3d, r28	; 61
    19f2:	cf 91       	pop	r28
    19f4:	df 91       	pop	r29
    19f6:	08 95       	ret

000019f8 <MDIO_stderrorSetPinDirection>:
(
	u8 ARG_u8Port,
	u8 ARG_u8pin,
	MDIO_mode ARG_u8Mode
)
{
    19f8:	df 93       	push	r29
    19fa:	cf 93       	push	r28
    19fc:	cd b7       	in	r28, 0x3d	; 61
    19fe:	de b7       	in	r29, 0x3e	; 62
    1a00:	2a 97       	sbiw	r28, 0x0a	; 10
    1a02:	0f b6       	in	r0, 0x3f	; 63
    1a04:	f8 94       	cli
    1a06:	de bf       	out	0x3e, r29	; 62
    1a08:	0f be       	out	0x3f, r0	; 63
    1a0a:	cd bf       	out	0x3d, r28	; 61
    1a0c:	8a 83       	std	Y+2, r24	; 0x02
    1a0e:	6b 83       	std	Y+3, r22	; 0x03
    1a10:	4c 83       	std	Y+4, r20	; 0x04
	
	STD_error_t L_stderrorError=E_NOK;
    1a12:	19 82       	std	Y+1, r1	; 0x01
	if ((ARG_u8pin>=0)&&(ARG_u8pin<=7))
    1a14:	8b 81       	ldd	r24, Y+3	; 0x03
    1a16:	88 30       	cpi	r24, 0x08	; 8
    1a18:	08 f0       	brcs	.+2      	; 0x1a1c <MDIO_stderrorSetPinDirection+0x24>
    1a1a:	ed c1       	rjmp	.+986    	; 0x1df6 <MDIO_stderrorSetPinDirection+0x3fe>
	{
		if(ARG_u8Mode==MDIO_INPUT_FLOAT)
    1a1c:	8c 81       	ldd	r24, Y+4	; 0x04
    1a1e:	88 23       	and	r24, r24
    1a20:	09 f0       	breq	.+2      	; 0x1a24 <MDIO_stderrorSetPinDirection+0x2c>
    1a22:	87 c0       	rjmp	.+270    	; 0x1b32 <MDIO_stderrorSetPinDirection+0x13a>
		{
			switch(ARG_u8Port)
    1a24:	8a 81       	ldd	r24, Y+2	; 0x02
    1a26:	28 2f       	mov	r18, r24
    1a28:	30 e0       	ldi	r19, 0x00	; 0
    1a2a:	3a 87       	std	Y+10, r19	; 0x0a
    1a2c:	29 87       	std	Y+9, r18	; 0x09
    1a2e:	89 85       	ldd	r24, Y+9	; 0x09
    1a30:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a32:	82 30       	cpi	r24, 0x02	; 2
    1a34:	91 05       	cpc	r25, r1
    1a36:	81 f1       	breq	.+96     	; 0x1a98 <MDIO_stderrorSetPinDirection+0xa0>
    1a38:	29 85       	ldd	r18, Y+9	; 0x09
    1a3a:	3a 85       	ldd	r19, Y+10	; 0x0a
    1a3c:	23 30       	cpi	r18, 0x03	; 3
    1a3e:	31 05       	cpc	r19, r1
    1a40:	34 f4       	brge	.+12     	; 0x1a4e <MDIO_stderrorSetPinDirection+0x56>
    1a42:	89 85       	ldd	r24, Y+9	; 0x09
    1a44:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a46:	81 30       	cpi	r24, 0x01	; 1
    1a48:	91 05       	cpc	r25, r1
    1a4a:	69 f0       	breq	.+26     	; 0x1a66 <MDIO_stderrorSetPinDirection+0x6e>
    1a4c:	70 c0       	rjmp	.+224    	; 0x1b2e <MDIO_stderrorSetPinDirection+0x136>
    1a4e:	29 85       	ldd	r18, Y+9	; 0x09
    1a50:	3a 85       	ldd	r19, Y+10	; 0x0a
    1a52:	23 30       	cpi	r18, 0x03	; 3
    1a54:	31 05       	cpc	r19, r1
    1a56:	c9 f1       	breq	.+114    	; 0x1aca <MDIO_stderrorSetPinDirection+0xd2>
    1a58:	89 85       	ldd	r24, Y+9	; 0x09
    1a5a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a5c:	84 30       	cpi	r24, 0x04	; 4
    1a5e:	91 05       	cpc	r25, r1
    1a60:	09 f4       	brne	.+2      	; 0x1a64 <MDIO_stderrorSetPinDirection+0x6c>
    1a62:	4c c0       	rjmp	.+152    	; 0x1afc <MDIO_stderrorSetPinDirection+0x104>
    1a64:	64 c0       	rjmp	.+200    	; 0x1b2e <MDIO_stderrorSetPinDirection+0x136>
			{
				case MDIO_PORTA:CLEAR_BIT(GPIOA->DDR, ARG_u8pin);L_stderrorError = E_OK;break;
    1a66:	a9 e3       	ldi	r26, 0x39	; 57
    1a68:	b0 e0       	ldi	r27, 0x00	; 0
    1a6a:	e9 e3       	ldi	r30, 0x39	; 57
    1a6c:	f0 e0       	ldi	r31, 0x00	; 0
    1a6e:	81 81       	ldd	r24, Z+1	; 0x01
    1a70:	48 2f       	mov	r20, r24
    1a72:	8b 81       	ldd	r24, Y+3	; 0x03
    1a74:	28 2f       	mov	r18, r24
    1a76:	30 e0       	ldi	r19, 0x00	; 0
    1a78:	81 e0       	ldi	r24, 0x01	; 1
    1a7a:	90 e0       	ldi	r25, 0x00	; 0
    1a7c:	02 2e       	mov	r0, r18
    1a7e:	02 c0       	rjmp	.+4      	; 0x1a84 <MDIO_stderrorSetPinDirection+0x8c>
    1a80:	88 0f       	add	r24, r24
    1a82:	99 1f       	adc	r25, r25
    1a84:	0a 94       	dec	r0
    1a86:	e2 f7       	brpl	.-8      	; 0x1a80 <MDIO_stderrorSetPinDirection+0x88>
    1a88:	80 95       	com	r24
    1a8a:	84 23       	and	r24, r20
    1a8c:	11 96       	adiw	r26, 0x01	; 1
    1a8e:	8c 93       	st	X, r24
    1a90:	11 97       	sbiw	r26, 0x01	; 1
    1a92:	81 e0       	ldi	r24, 0x01	; 1
    1a94:	89 83       	std	Y+1, r24	; 0x01
    1a96:	b0 c1       	rjmp	.+864    	; 0x1df8 <MDIO_stderrorSetPinDirection+0x400>
				case MDIO_PORTB:CLEAR_BIT(GPIOB->DDR, ARG_u8pin);L_stderrorError = E_OK;break;
    1a98:	a6 e3       	ldi	r26, 0x36	; 54
    1a9a:	b0 e0       	ldi	r27, 0x00	; 0
    1a9c:	e6 e3       	ldi	r30, 0x36	; 54
    1a9e:	f0 e0       	ldi	r31, 0x00	; 0
    1aa0:	81 81       	ldd	r24, Z+1	; 0x01
    1aa2:	48 2f       	mov	r20, r24
    1aa4:	8b 81       	ldd	r24, Y+3	; 0x03
    1aa6:	28 2f       	mov	r18, r24
    1aa8:	30 e0       	ldi	r19, 0x00	; 0
    1aaa:	81 e0       	ldi	r24, 0x01	; 1
    1aac:	90 e0       	ldi	r25, 0x00	; 0
    1aae:	02 2e       	mov	r0, r18
    1ab0:	02 c0       	rjmp	.+4      	; 0x1ab6 <MDIO_stderrorSetPinDirection+0xbe>
    1ab2:	88 0f       	add	r24, r24
    1ab4:	99 1f       	adc	r25, r25
    1ab6:	0a 94       	dec	r0
    1ab8:	e2 f7       	brpl	.-8      	; 0x1ab2 <MDIO_stderrorSetPinDirection+0xba>
    1aba:	80 95       	com	r24
    1abc:	84 23       	and	r24, r20
    1abe:	11 96       	adiw	r26, 0x01	; 1
    1ac0:	8c 93       	st	X, r24
    1ac2:	11 97       	sbiw	r26, 0x01	; 1
    1ac4:	81 e0       	ldi	r24, 0x01	; 1
    1ac6:	89 83       	std	Y+1, r24	; 0x01
    1ac8:	97 c1       	rjmp	.+814    	; 0x1df8 <MDIO_stderrorSetPinDirection+0x400>
				case MDIO_PORTC:CLEAR_BIT(GPIOC->DDR, ARG_u8pin);L_stderrorError = E_OK;break;
    1aca:	a3 e3       	ldi	r26, 0x33	; 51
    1acc:	b0 e0       	ldi	r27, 0x00	; 0
    1ace:	e3 e3       	ldi	r30, 0x33	; 51
    1ad0:	f0 e0       	ldi	r31, 0x00	; 0
    1ad2:	81 81       	ldd	r24, Z+1	; 0x01
    1ad4:	48 2f       	mov	r20, r24
    1ad6:	8b 81       	ldd	r24, Y+3	; 0x03
    1ad8:	28 2f       	mov	r18, r24
    1ada:	30 e0       	ldi	r19, 0x00	; 0
    1adc:	81 e0       	ldi	r24, 0x01	; 1
    1ade:	90 e0       	ldi	r25, 0x00	; 0
    1ae0:	02 2e       	mov	r0, r18
    1ae2:	02 c0       	rjmp	.+4      	; 0x1ae8 <MDIO_stderrorSetPinDirection+0xf0>
    1ae4:	88 0f       	add	r24, r24
    1ae6:	99 1f       	adc	r25, r25
    1ae8:	0a 94       	dec	r0
    1aea:	e2 f7       	brpl	.-8      	; 0x1ae4 <MDIO_stderrorSetPinDirection+0xec>
    1aec:	80 95       	com	r24
    1aee:	84 23       	and	r24, r20
    1af0:	11 96       	adiw	r26, 0x01	; 1
    1af2:	8c 93       	st	X, r24
    1af4:	11 97       	sbiw	r26, 0x01	; 1
    1af6:	81 e0       	ldi	r24, 0x01	; 1
    1af8:	89 83       	std	Y+1, r24	; 0x01
    1afa:	7e c1       	rjmp	.+764    	; 0x1df8 <MDIO_stderrorSetPinDirection+0x400>
				case MDIO_PORTD:CLEAR_BIT(GPIOD->DDR, ARG_u8pin);L_stderrorError = E_OK;break;
    1afc:	a0 e3       	ldi	r26, 0x30	; 48
    1afe:	b0 e0       	ldi	r27, 0x00	; 0
    1b00:	e0 e3       	ldi	r30, 0x30	; 48
    1b02:	f0 e0       	ldi	r31, 0x00	; 0
    1b04:	81 81       	ldd	r24, Z+1	; 0x01
    1b06:	48 2f       	mov	r20, r24
    1b08:	8b 81       	ldd	r24, Y+3	; 0x03
    1b0a:	28 2f       	mov	r18, r24
    1b0c:	30 e0       	ldi	r19, 0x00	; 0
    1b0e:	81 e0       	ldi	r24, 0x01	; 1
    1b10:	90 e0       	ldi	r25, 0x00	; 0
    1b12:	02 2e       	mov	r0, r18
    1b14:	02 c0       	rjmp	.+4      	; 0x1b1a <MDIO_stderrorSetPinDirection+0x122>
    1b16:	88 0f       	add	r24, r24
    1b18:	99 1f       	adc	r25, r25
    1b1a:	0a 94       	dec	r0
    1b1c:	e2 f7       	brpl	.-8      	; 0x1b16 <MDIO_stderrorSetPinDirection+0x11e>
    1b1e:	80 95       	com	r24
    1b20:	84 23       	and	r24, r20
    1b22:	11 96       	adiw	r26, 0x01	; 1
    1b24:	8c 93       	st	X, r24
    1b26:	11 97       	sbiw	r26, 0x01	; 1
    1b28:	81 e0       	ldi	r24, 0x01	; 1
    1b2a:	89 83       	std	Y+1, r24	; 0x01
    1b2c:	65 c1       	rjmp	.+714    	; 0x1df8 <MDIO_stderrorSetPinDirection+0x400>
				default:L_stderrorError = E_NOK;break;
    1b2e:	19 82       	std	Y+1, r1	; 0x01
    1b30:	63 c1       	rjmp	.+710    	; 0x1df8 <MDIO_stderrorSetPinDirection+0x400>
			}
		}
		else if(ARG_u8Mode==MDIO_OUTPUT)
    1b32:	8c 81       	ldd	r24, Y+4	; 0x04
    1b34:	81 30       	cpi	r24, 0x01	; 1
    1b36:	09 f0       	breq	.+2      	; 0x1b3a <MDIO_stderrorSetPinDirection+0x142>
    1b38:	83 c0       	rjmp	.+262    	; 0x1c40 <MDIO_stderrorSetPinDirection+0x248>
		{
			switch(ARG_u8Port)
    1b3a:	8a 81       	ldd	r24, Y+2	; 0x02
    1b3c:	28 2f       	mov	r18, r24
    1b3e:	30 e0       	ldi	r19, 0x00	; 0
    1b40:	38 87       	std	Y+8, r19	; 0x08
    1b42:	2f 83       	std	Y+7, r18	; 0x07
    1b44:	8f 81       	ldd	r24, Y+7	; 0x07
    1b46:	98 85       	ldd	r25, Y+8	; 0x08
    1b48:	82 30       	cpi	r24, 0x02	; 2
    1b4a:	91 05       	cpc	r25, r1
    1b4c:	79 f1       	breq	.+94     	; 0x1bac <MDIO_stderrorSetPinDirection+0x1b4>
    1b4e:	2f 81       	ldd	r18, Y+7	; 0x07
    1b50:	38 85       	ldd	r19, Y+8	; 0x08
    1b52:	23 30       	cpi	r18, 0x03	; 3
    1b54:	31 05       	cpc	r19, r1
    1b56:	34 f4       	brge	.+12     	; 0x1b64 <MDIO_stderrorSetPinDirection+0x16c>
    1b58:	8f 81       	ldd	r24, Y+7	; 0x07
    1b5a:	98 85       	ldd	r25, Y+8	; 0x08
    1b5c:	81 30       	cpi	r24, 0x01	; 1
    1b5e:	91 05       	cpc	r25, r1
    1b60:	69 f0       	breq	.+26     	; 0x1b7c <MDIO_stderrorSetPinDirection+0x184>
    1b62:	6c c0       	rjmp	.+216    	; 0x1c3c <MDIO_stderrorSetPinDirection+0x244>
    1b64:	2f 81       	ldd	r18, Y+7	; 0x07
    1b66:	38 85       	ldd	r19, Y+8	; 0x08
    1b68:	23 30       	cpi	r18, 0x03	; 3
    1b6a:	31 05       	cpc	r19, r1
    1b6c:	b9 f1       	breq	.+110    	; 0x1bdc <MDIO_stderrorSetPinDirection+0x1e4>
    1b6e:	8f 81       	ldd	r24, Y+7	; 0x07
    1b70:	98 85       	ldd	r25, Y+8	; 0x08
    1b72:	84 30       	cpi	r24, 0x04	; 4
    1b74:	91 05       	cpc	r25, r1
    1b76:	09 f4       	brne	.+2      	; 0x1b7a <MDIO_stderrorSetPinDirection+0x182>
    1b78:	49 c0       	rjmp	.+146    	; 0x1c0c <MDIO_stderrorSetPinDirection+0x214>
    1b7a:	60 c0       	rjmp	.+192    	; 0x1c3c <MDIO_stderrorSetPinDirection+0x244>
			{
				case MDIO_PORTA:SET_BIT(GPIOA->DDR, ARG_u8pin);L_stderrorError = E_OK;break;
    1b7c:	a9 e3       	ldi	r26, 0x39	; 57
    1b7e:	b0 e0       	ldi	r27, 0x00	; 0
    1b80:	e9 e3       	ldi	r30, 0x39	; 57
    1b82:	f0 e0       	ldi	r31, 0x00	; 0
    1b84:	81 81       	ldd	r24, Z+1	; 0x01
    1b86:	48 2f       	mov	r20, r24
    1b88:	8b 81       	ldd	r24, Y+3	; 0x03
    1b8a:	28 2f       	mov	r18, r24
    1b8c:	30 e0       	ldi	r19, 0x00	; 0
    1b8e:	81 e0       	ldi	r24, 0x01	; 1
    1b90:	90 e0       	ldi	r25, 0x00	; 0
    1b92:	02 2e       	mov	r0, r18
    1b94:	02 c0       	rjmp	.+4      	; 0x1b9a <MDIO_stderrorSetPinDirection+0x1a2>
    1b96:	88 0f       	add	r24, r24
    1b98:	99 1f       	adc	r25, r25
    1b9a:	0a 94       	dec	r0
    1b9c:	e2 f7       	brpl	.-8      	; 0x1b96 <MDIO_stderrorSetPinDirection+0x19e>
    1b9e:	84 2b       	or	r24, r20
    1ba0:	11 96       	adiw	r26, 0x01	; 1
    1ba2:	8c 93       	st	X, r24
    1ba4:	11 97       	sbiw	r26, 0x01	; 1
    1ba6:	81 e0       	ldi	r24, 0x01	; 1
    1ba8:	89 83       	std	Y+1, r24	; 0x01
    1baa:	26 c1       	rjmp	.+588    	; 0x1df8 <MDIO_stderrorSetPinDirection+0x400>
				case MDIO_PORTB:SET_BIT(GPIOB->DDR, ARG_u8pin);L_stderrorError = E_OK;break;
    1bac:	a6 e3       	ldi	r26, 0x36	; 54
    1bae:	b0 e0       	ldi	r27, 0x00	; 0
    1bb0:	e6 e3       	ldi	r30, 0x36	; 54
    1bb2:	f0 e0       	ldi	r31, 0x00	; 0
    1bb4:	81 81       	ldd	r24, Z+1	; 0x01
    1bb6:	48 2f       	mov	r20, r24
    1bb8:	8b 81       	ldd	r24, Y+3	; 0x03
    1bba:	28 2f       	mov	r18, r24
    1bbc:	30 e0       	ldi	r19, 0x00	; 0
    1bbe:	81 e0       	ldi	r24, 0x01	; 1
    1bc0:	90 e0       	ldi	r25, 0x00	; 0
    1bc2:	02 2e       	mov	r0, r18
    1bc4:	02 c0       	rjmp	.+4      	; 0x1bca <MDIO_stderrorSetPinDirection+0x1d2>
    1bc6:	88 0f       	add	r24, r24
    1bc8:	99 1f       	adc	r25, r25
    1bca:	0a 94       	dec	r0
    1bcc:	e2 f7       	brpl	.-8      	; 0x1bc6 <MDIO_stderrorSetPinDirection+0x1ce>
    1bce:	84 2b       	or	r24, r20
    1bd0:	11 96       	adiw	r26, 0x01	; 1
    1bd2:	8c 93       	st	X, r24
    1bd4:	11 97       	sbiw	r26, 0x01	; 1
    1bd6:	81 e0       	ldi	r24, 0x01	; 1
    1bd8:	89 83       	std	Y+1, r24	; 0x01
    1bda:	0e c1       	rjmp	.+540    	; 0x1df8 <MDIO_stderrorSetPinDirection+0x400>
				case MDIO_PORTC:SET_BIT(GPIOC->DDR, ARG_u8pin);L_stderrorError = E_OK;break;
    1bdc:	a3 e3       	ldi	r26, 0x33	; 51
    1bde:	b0 e0       	ldi	r27, 0x00	; 0
    1be0:	e3 e3       	ldi	r30, 0x33	; 51
    1be2:	f0 e0       	ldi	r31, 0x00	; 0
    1be4:	81 81       	ldd	r24, Z+1	; 0x01
    1be6:	48 2f       	mov	r20, r24
    1be8:	8b 81       	ldd	r24, Y+3	; 0x03
    1bea:	28 2f       	mov	r18, r24
    1bec:	30 e0       	ldi	r19, 0x00	; 0
    1bee:	81 e0       	ldi	r24, 0x01	; 1
    1bf0:	90 e0       	ldi	r25, 0x00	; 0
    1bf2:	02 2e       	mov	r0, r18
    1bf4:	02 c0       	rjmp	.+4      	; 0x1bfa <MDIO_stderrorSetPinDirection+0x202>
    1bf6:	88 0f       	add	r24, r24
    1bf8:	99 1f       	adc	r25, r25
    1bfa:	0a 94       	dec	r0
    1bfc:	e2 f7       	brpl	.-8      	; 0x1bf6 <MDIO_stderrorSetPinDirection+0x1fe>
    1bfe:	84 2b       	or	r24, r20
    1c00:	11 96       	adiw	r26, 0x01	; 1
    1c02:	8c 93       	st	X, r24
    1c04:	11 97       	sbiw	r26, 0x01	; 1
    1c06:	81 e0       	ldi	r24, 0x01	; 1
    1c08:	89 83       	std	Y+1, r24	; 0x01
    1c0a:	f6 c0       	rjmp	.+492    	; 0x1df8 <MDIO_stderrorSetPinDirection+0x400>
				case MDIO_PORTD:SET_BIT(GPIOD->DDR, ARG_u8pin);L_stderrorError = E_OK;break;
    1c0c:	a0 e3       	ldi	r26, 0x30	; 48
    1c0e:	b0 e0       	ldi	r27, 0x00	; 0
    1c10:	e0 e3       	ldi	r30, 0x30	; 48
    1c12:	f0 e0       	ldi	r31, 0x00	; 0
    1c14:	81 81       	ldd	r24, Z+1	; 0x01
    1c16:	48 2f       	mov	r20, r24
    1c18:	8b 81       	ldd	r24, Y+3	; 0x03
    1c1a:	28 2f       	mov	r18, r24
    1c1c:	30 e0       	ldi	r19, 0x00	; 0
    1c1e:	81 e0       	ldi	r24, 0x01	; 1
    1c20:	90 e0       	ldi	r25, 0x00	; 0
    1c22:	02 2e       	mov	r0, r18
    1c24:	02 c0       	rjmp	.+4      	; 0x1c2a <MDIO_stderrorSetPinDirection+0x232>
    1c26:	88 0f       	add	r24, r24
    1c28:	99 1f       	adc	r25, r25
    1c2a:	0a 94       	dec	r0
    1c2c:	e2 f7       	brpl	.-8      	; 0x1c26 <MDIO_stderrorSetPinDirection+0x22e>
    1c2e:	84 2b       	or	r24, r20
    1c30:	11 96       	adiw	r26, 0x01	; 1
    1c32:	8c 93       	st	X, r24
    1c34:	11 97       	sbiw	r26, 0x01	; 1
    1c36:	81 e0       	ldi	r24, 0x01	; 1
    1c38:	89 83       	std	Y+1, r24	; 0x01
    1c3a:	de c0       	rjmp	.+444    	; 0x1df8 <MDIO_stderrorSetPinDirection+0x400>
				default:L_stderrorError = E_NOK;break;
    1c3c:	19 82       	std	Y+1, r1	; 0x01
    1c3e:	dc c0       	rjmp	.+440    	; 0x1df8 <MDIO_stderrorSetPinDirection+0x400>
			}
		}
		else if(ARG_u8Mode==MDIO_INPUT_PULLUP)
    1c40:	8c 81       	ldd	r24, Y+4	; 0x04
    1c42:	82 30       	cpi	r24, 0x02	; 2
    1c44:	09 f0       	breq	.+2      	; 0x1c48 <MDIO_stderrorSetPinDirection+0x250>
    1c46:	d5 c0       	rjmp	.+426    	; 0x1df2 <MDIO_stderrorSetPinDirection+0x3fa>
		{
			switch(ARG_u8Port)
    1c48:	8a 81       	ldd	r24, Y+2	; 0x02
    1c4a:	28 2f       	mov	r18, r24
    1c4c:	30 e0       	ldi	r19, 0x00	; 0
    1c4e:	3e 83       	std	Y+6, r19	; 0x06
    1c50:	2d 83       	std	Y+5, r18	; 0x05
    1c52:	8d 81       	ldd	r24, Y+5	; 0x05
    1c54:	9e 81       	ldd	r25, Y+6	; 0x06
    1c56:	82 30       	cpi	r24, 0x02	; 2
    1c58:	91 05       	cpc	r25, r1
    1c5a:	09 f4       	brne	.+2      	; 0x1c5e <MDIO_stderrorSetPinDirection+0x266>
    1c5c:	44 c0       	rjmp	.+136    	; 0x1ce6 <MDIO_stderrorSetPinDirection+0x2ee>
    1c5e:	2d 81       	ldd	r18, Y+5	; 0x05
    1c60:	3e 81       	ldd	r19, Y+6	; 0x06
    1c62:	23 30       	cpi	r18, 0x03	; 3
    1c64:	31 05       	cpc	r19, r1
    1c66:	34 f4       	brge	.+12     	; 0x1c74 <MDIO_stderrorSetPinDirection+0x27c>
    1c68:	8d 81       	ldd	r24, Y+5	; 0x05
    1c6a:	9e 81       	ldd	r25, Y+6	; 0x06
    1c6c:	81 30       	cpi	r24, 0x01	; 1
    1c6e:	91 05       	cpc	r25, r1
    1c70:	71 f0       	breq	.+28     	; 0x1c8e <MDIO_stderrorSetPinDirection+0x296>
    1c72:	bd c0       	rjmp	.+378    	; 0x1dee <MDIO_stderrorSetPinDirection+0x3f6>
    1c74:	2d 81       	ldd	r18, Y+5	; 0x05
    1c76:	3e 81       	ldd	r19, Y+6	; 0x06
    1c78:	23 30       	cpi	r18, 0x03	; 3
    1c7a:	31 05       	cpc	r19, r1
    1c7c:	09 f4       	brne	.+2      	; 0x1c80 <MDIO_stderrorSetPinDirection+0x288>
    1c7e:	5f c0       	rjmp	.+190    	; 0x1d3e <MDIO_stderrorSetPinDirection+0x346>
    1c80:	8d 81       	ldd	r24, Y+5	; 0x05
    1c82:	9e 81       	ldd	r25, Y+6	; 0x06
    1c84:	84 30       	cpi	r24, 0x04	; 4
    1c86:	91 05       	cpc	r25, r1
    1c88:	09 f4       	brne	.+2      	; 0x1c8c <MDIO_stderrorSetPinDirection+0x294>
    1c8a:	85 c0       	rjmp	.+266    	; 0x1d96 <MDIO_stderrorSetPinDirection+0x39e>
    1c8c:	b0 c0       	rjmp	.+352    	; 0x1dee <MDIO_stderrorSetPinDirection+0x3f6>
			{
				case MDIO_PORTA:CLEAR_BIT(GPIOA->DDR, ARG_u8pin);SET_BIT(GPIOA->PORT, ARG_u8pin);L_stderrorError = E_OK;break;
    1c8e:	a9 e3       	ldi	r26, 0x39	; 57
    1c90:	b0 e0       	ldi	r27, 0x00	; 0
    1c92:	e9 e3       	ldi	r30, 0x39	; 57
    1c94:	f0 e0       	ldi	r31, 0x00	; 0
    1c96:	81 81       	ldd	r24, Z+1	; 0x01
    1c98:	48 2f       	mov	r20, r24
    1c9a:	8b 81       	ldd	r24, Y+3	; 0x03
    1c9c:	28 2f       	mov	r18, r24
    1c9e:	30 e0       	ldi	r19, 0x00	; 0
    1ca0:	81 e0       	ldi	r24, 0x01	; 1
    1ca2:	90 e0       	ldi	r25, 0x00	; 0
    1ca4:	02 c0       	rjmp	.+4      	; 0x1caa <MDIO_stderrorSetPinDirection+0x2b2>
    1ca6:	88 0f       	add	r24, r24
    1ca8:	99 1f       	adc	r25, r25
    1caa:	2a 95       	dec	r18
    1cac:	e2 f7       	brpl	.-8      	; 0x1ca6 <MDIO_stderrorSetPinDirection+0x2ae>
    1cae:	80 95       	com	r24
    1cb0:	84 23       	and	r24, r20
    1cb2:	11 96       	adiw	r26, 0x01	; 1
    1cb4:	8c 93       	st	X, r24
    1cb6:	a9 e3       	ldi	r26, 0x39	; 57
    1cb8:	b0 e0       	ldi	r27, 0x00	; 0
    1cba:	e9 e3       	ldi	r30, 0x39	; 57
    1cbc:	f0 e0       	ldi	r31, 0x00	; 0
    1cbe:	82 81       	ldd	r24, Z+2	; 0x02
    1cc0:	48 2f       	mov	r20, r24
    1cc2:	8b 81       	ldd	r24, Y+3	; 0x03
    1cc4:	28 2f       	mov	r18, r24
    1cc6:	30 e0       	ldi	r19, 0x00	; 0
    1cc8:	81 e0       	ldi	r24, 0x01	; 1
    1cca:	90 e0       	ldi	r25, 0x00	; 0
    1ccc:	02 2e       	mov	r0, r18
    1cce:	02 c0       	rjmp	.+4      	; 0x1cd4 <MDIO_stderrorSetPinDirection+0x2dc>
    1cd0:	88 0f       	add	r24, r24
    1cd2:	99 1f       	adc	r25, r25
    1cd4:	0a 94       	dec	r0
    1cd6:	e2 f7       	brpl	.-8      	; 0x1cd0 <MDIO_stderrorSetPinDirection+0x2d8>
    1cd8:	84 2b       	or	r24, r20
    1cda:	12 96       	adiw	r26, 0x02	; 2
    1cdc:	8c 93       	st	X, r24
    1cde:	12 97       	sbiw	r26, 0x02	; 2
    1ce0:	81 e0       	ldi	r24, 0x01	; 1
    1ce2:	89 83       	std	Y+1, r24	; 0x01
    1ce4:	89 c0       	rjmp	.+274    	; 0x1df8 <MDIO_stderrorSetPinDirection+0x400>
				case MDIO_PORTB:CLEAR_BIT(GPIOB->DDR, ARG_u8pin);SET_BIT(GPIOB->PORT, ARG_u8pin);L_stderrorError = E_OK;break;
    1ce6:	a6 e3       	ldi	r26, 0x36	; 54
    1ce8:	b0 e0       	ldi	r27, 0x00	; 0
    1cea:	e6 e3       	ldi	r30, 0x36	; 54
    1cec:	f0 e0       	ldi	r31, 0x00	; 0
    1cee:	81 81       	ldd	r24, Z+1	; 0x01
    1cf0:	48 2f       	mov	r20, r24
    1cf2:	8b 81       	ldd	r24, Y+3	; 0x03
    1cf4:	28 2f       	mov	r18, r24
    1cf6:	30 e0       	ldi	r19, 0x00	; 0
    1cf8:	81 e0       	ldi	r24, 0x01	; 1
    1cfa:	90 e0       	ldi	r25, 0x00	; 0
    1cfc:	02 c0       	rjmp	.+4      	; 0x1d02 <MDIO_stderrorSetPinDirection+0x30a>
    1cfe:	88 0f       	add	r24, r24
    1d00:	99 1f       	adc	r25, r25
    1d02:	2a 95       	dec	r18
    1d04:	e2 f7       	brpl	.-8      	; 0x1cfe <MDIO_stderrorSetPinDirection+0x306>
    1d06:	80 95       	com	r24
    1d08:	84 23       	and	r24, r20
    1d0a:	11 96       	adiw	r26, 0x01	; 1
    1d0c:	8c 93       	st	X, r24
    1d0e:	a6 e3       	ldi	r26, 0x36	; 54
    1d10:	b0 e0       	ldi	r27, 0x00	; 0
    1d12:	e6 e3       	ldi	r30, 0x36	; 54
    1d14:	f0 e0       	ldi	r31, 0x00	; 0
    1d16:	82 81       	ldd	r24, Z+2	; 0x02
    1d18:	48 2f       	mov	r20, r24
    1d1a:	8b 81       	ldd	r24, Y+3	; 0x03
    1d1c:	28 2f       	mov	r18, r24
    1d1e:	30 e0       	ldi	r19, 0x00	; 0
    1d20:	81 e0       	ldi	r24, 0x01	; 1
    1d22:	90 e0       	ldi	r25, 0x00	; 0
    1d24:	02 2e       	mov	r0, r18
    1d26:	02 c0       	rjmp	.+4      	; 0x1d2c <MDIO_stderrorSetPinDirection+0x334>
    1d28:	88 0f       	add	r24, r24
    1d2a:	99 1f       	adc	r25, r25
    1d2c:	0a 94       	dec	r0
    1d2e:	e2 f7       	brpl	.-8      	; 0x1d28 <MDIO_stderrorSetPinDirection+0x330>
    1d30:	84 2b       	or	r24, r20
    1d32:	12 96       	adiw	r26, 0x02	; 2
    1d34:	8c 93       	st	X, r24
    1d36:	12 97       	sbiw	r26, 0x02	; 2
    1d38:	81 e0       	ldi	r24, 0x01	; 1
    1d3a:	89 83       	std	Y+1, r24	; 0x01
    1d3c:	5d c0       	rjmp	.+186    	; 0x1df8 <MDIO_stderrorSetPinDirection+0x400>
				case MDIO_PORTC:CLEAR_BIT(GPIOC->DDR, ARG_u8pin);SET_BIT(GPIOC->PORT, ARG_u8pin);L_stderrorError = E_OK;break;
    1d3e:	a3 e3       	ldi	r26, 0x33	; 51
    1d40:	b0 e0       	ldi	r27, 0x00	; 0
    1d42:	e3 e3       	ldi	r30, 0x33	; 51
    1d44:	f0 e0       	ldi	r31, 0x00	; 0
    1d46:	81 81       	ldd	r24, Z+1	; 0x01
    1d48:	48 2f       	mov	r20, r24
    1d4a:	8b 81       	ldd	r24, Y+3	; 0x03
    1d4c:	28 2f       	mov	r18, r24
    1d4e:	30 e0       	ldi	r19, 0x00	; 0
    1d50:	81 e0       	ldi	r24, 0x01	; 1
    1d52:	90 e0       	ldi	r25, 0x00	; 0
    1d54:	02 c0       	rjmp	.+4      	; 0x1d5a <MDIO_stderrorSetPinDirection+0x362>
    1d56:	88 0f       	add	r24, r24
    1d58:	99 1f       	adc	r25, r25
    1d5a:	2a 95       	dec	r18
    1d5c:	e2 f7       	brpl	.-8      	; 0x1d56 <MDIO_stderrorSetPinDirection+0x35e>
    1d5e:	80 95       	com	r24
    1d60:	84 23       	and	r24, r20
    1d62:	11 96       	adiw	r26, 0x01	; 1
    1d64:	8c 93       	st	X, r24
    1d66:	a3 e3       	ldi	r26, 0x33	; 51
    1d68:	b0 e0       	ldi	r27, 0x00	; 0
    1d6a:	e3 e3       	ldi	r30, 0x33	; 51
    1d6c:	f0 e0       	ldi	r31, 0x00	; 0
    1d6e:	82 81       	ldd	r24, Z+2	; 0x02
    1d70:	48 2f       	mov	r20, r24
    1d72:	8b 81       	ldd	r24, Y+3	; 0x03
    1d74:	28 2f       	mov	r18, r24
    1d76:	30 e0       	ldi	r19, 0x00	; 0
    1d78:	81 e0       	ldi	r24, 0x01	; 1
    1d7a:	90 e0       	ldi	r25, 0x00	; 0
    1d7c:	02 2e       	mov	r0, r18
    1d7e:	02 c0       	rjmp	.+4      	; 0x1d84 <MDIO_stderrorSetPinDirection+0x38c>
    1d80:	88 0f       	add	r24, r24
    1d82:	99 1f       	adc	r25, r25
    1d84:	0a 94       	dec	r0
    1d86:	e2 f7       	brpl	.-8      	; 0x1d80 <MDIO_stderrorSetPinDirection+0x388>
    1d88:	84 2b       	or	r24, r20
    1d8a:	12 96       	adiw	r26, 0x02	; 2
    1d8c:	8c 93       	st	X, r24
    1d8e:	12 97       	sbiw	r26, 0x02	; 2
    1d90:	81 e0       	ldi	r24, 0x01	; 1
    1d92:	89 83       	std	Y+1, r24	; 0x01
    1d94:	31 c0       	rjmp	.+98     	; 0x1df8 <MDIO_stderrorSetPinDirection+0x400>
				case MDIO_PORTD:CLEAR_BIT(GPIOD->DDR, ARG_u8pin);SET_BIT(GPIOD->PORT, ARG_u8pin);L_stderrorError = E_OK;break;
    1d96:	a0 e3       	ldi	r26, 0x30	; 48
    1d98:	b0 e0       	ldi	r27, 0x00	; 0
    1d9a:	e0 e3       	ldi	r30, 0x30	; 48
    1d9c:	f0 e0       	ldi	r31, 0x00	; 0
    1d9e:	81 81       	ldd	r24, Z+1	; 0x01
    1da0:	48 2f       	mov	r20, r24
    1da2:	8b 81       	ldd	r24, Y+3	; 0x03
    1da4:	28 2f       	mov	r18, r24
    1da6:	30 e0       	ldi	r19, 0x00	; 0
    1da8:	81 e0       	ldi	r24, 0x01	; 1
    1daa:	90 e0       	ldi	r25, 0x00	; 0
    1dac:	02 c0       	rjmp	.+4      	; 0x1db2 <MDIO_stderrorSetPinDirection+0x3ba>
    1dae:	88 0f       	add	r24, r24
    1db0:	99 1f       	adc	r25, r25
    1db2:	2a 95       	dec	r18
    1db4:	e2 f7       	brpl	.-8      	; 0x1dae <MDIO_stderrorSetPinDirection+0x3b6>
    1db6:	80 95       	com	r24
    1db8:	84 23       	and	r24, r20
    1dba:	11 96       	adiw	r26, 0x01	; 1
    1dbc:	8c 93       	st	X, r24
    1dbe:	a0 e3       	ldi	r26, 0x30	; 48
    1dc0:	b0 e0       	ldi	r27, 0x00	; 0
    1dc2:	e0 e3       	ldi	r30, 0x30	; 48
    1dc4:	f0 e0       	ldi	r31, 0x00	; 0
    1dc6:	82 81       	ldd	r24, Z+2	; 0x02
    1dc8:	48 2f       	mov	r20, r24
    1dca:	8b 81       	ldd	r24, Y+3	; 0x03
    1dcc:	28 2f       	mov	r18, r24
    1dce:	30 e0       	ldi	r19, 0x00	; 0
    1dd0:	81 e0       	ldi	r24, 0x01	; 1
    1dd2:	90 e0       	ldi	r25, 0x00	; 0
    1dd4:	02 2e       	mov	r0, r18
    1dd6:	02 c0       	rjmp	.+4      	; 0x1ddc <MDIO_stderrorSetPinDirection+0x3e4>
    1dd8:	88 0f       	add	r24, r24
    1dda:	99 1f       	adc	r25, r25
    1ddc:	0a 94       	dec	r0
    1dde:	e2 f7       	brpl	.-8      	; 0x1dd8 <MDIO_stderrorSetPinDirection+0x3e0>
    1de0:	84 2b       	or	r24, r20
    1de2:	12 96       	adiw	r26, 0x02	; 2
    1de4:	8c 93       	st	X, r24
    1de6:	12 97       	sbiw	r26, 0x02	; 2
    1de8:	81 e0       	ldi	r24, 0x01	; 1
    1dea:	89 83       	std	Y+1, r24	; 0x01
    1dec:	05 c0       	rjmp	.+10     	; 0x1df8 <MDIO_stderrorSetPinDirection+0x400>
				default:L_stderrorError = E_NOK;break;
    1dee:	19 82       	std	Y+1, r1	; 0x01
    1df0:	03 c0       	rjmp	.+6      	; 0x1df8 <MDIO_stderrorSetPinDirection+0x400>
			}
		}
		else
		{
			L_stderrorError=E_NOK;
    1df2:	19 82       	std	Y+1, r1	; 0x01
    1df4:	01 c0       	rjmp	.+2      	; 0x1df8 <MDIO_stderrorSetPinDirection+0x400>

		
	}
	else
	{
		L_stderrorError=E_NOK;
    1df6:	19 82       	std	Y+1, r1	; 0x01
	}
	
	return L_stderrorError;
    1df8:	89 81       	ldd	r24, Y+1	; 0x01
}
    1dfa:	2a 96       	adiw	r28, 0x0a	; 10
    1dfc:	0f b6       	in	r0, 0x3f	; 63
    1dfe:	f8 94       	cli
    1e00:	de bf       	out	0x3e, r29	; 62
    1e02:	0f be       	out	0x3f, r0	; 63
    1e04:	cd bf       	out	0x3d, r28	; 61
    1e06:	cf 91       	pop	r28
    1e08:	df 91       	pop	r29
    1e0a:	08 95       	ret

00001e0c <MDIO_stderrorSetPinValue>:
(
	u8 ARG_u8Port,
	u8 ARG_u8pin,
	u8 ARG_u8Value
)
{
    1e0c:	df 93       	push	r29
    1e0e:	cf 93       	push	r28
    1e10:	cd b7       	in	r28, 0x3d	; 61
    1e12:	de b7       	in	r29, 0x3e	; 62
    1e14:	28 97       	sbiw	r28, 0x08	; 8
    1e16:	0f b6       	in	r0, 0x3f	; 63
    1e18:	f8 94       	cli
    1e1a:	de bf       	out	0x3e, r29	; 62
    1e1c:	0f be       	out	0x3f, r0	; 63
    1e1e:	cd bf       	out	0x3d, r28	; 61
    1e20:	8a 83       	std	Y+2, r24	; 0x02
    1e22:	6b 83       	std	Y+3, r22	; 0x03
    1e24:	4c 83       	std	Y+4, r20	; 0x04
	
	STD_error_t L_stderrorError=E_NOK;
    1e26:	19 82       	std	Y+1, r1	; 0x01
	if ((ARG_u8pin>=0)&&(ARG_u8pin<=7))
    1e28:	8b 81       	ldd	r24, Y+3	; 0x03
    1e2a:	88 30       	cpi	r24, 0x08	; 8
    1e2c:	08 f0       	brcs	.+2      	; 0x1e30 <MDIO_stderrorSetPinValue+0x24>
    1e2e:	12 c1       	rjmp	.+548    	; 0x2054 <MDIO_stderrorSetPinValue+0x248>
	{
		if(ARG_u8Value==MDIO_HIGH)
    1e30:	8c 81       	ldd	r24, Y+4	; 0x04
    1e32:	82 30       	cpi	r24, 0x02	; 2
    1e34:	09 f0       	breq	.+2      	; 0x1e38 <MDIO_stderrorSetPinValue+0x2c>
    1e36:	83 c0       	rjmp	.+262    	; 0x1f3e <MDIO_stderrorSetPinValue+0x132>
		{
			switch(ARG_u8Port)
    1e38:	8a 81       	ldd	r24, Y+2	; 0x02
    1e3a:	28 2f       	mov	r18, r24
    1e3c:	30 e0       	ldi	r19, 0x00	; 0
    1e3e:	38 87       	std	Y+8, r19	; 0x08
    1e40:	2f 83       	std	Y+7, r18	; 0x07
    1e42:	8f 81       	ldd	r24, Y+7	; 0x07
    1e44:	98 85       	ldd	r25, Y+8	; 0x08
    1e46:	82 30       	cpi	r24, 0x02	; 2
    1e48:	91 05       	cpc	r25, r1
    1e4a:	79 f1       	breq	.+94     	; 0x1eaa <MDIO_stderrorSetPinValue+0x9e>
    1e4c:	2f 81       	ldd	r18, Y+7	; 0x07
    1e4e:	38 85       	ldd	r19, Y+8	; 0x08
    1e50:	23 30       	cpi	r18, 0x03	; 3
    1e52:	31 05       	cpc	r19, r1
    1e54:	34 f4       	brge	.+12     	; 0x1e62 <MDIO_stderrorSetPinValue+0x56>
    1e56:	8f 81       	ldd	r24, Y+7	; 0x07
    1e58:	98 85       	ldd	r25, Y+8	; 0x08
    1e5a:	81 30       	cpi	r24, 0x01	; 1
    1e5c:	91 05       	cpc	r25, r1
    1e5e:	69 f0       	breq	.+26     	; 0x1e7a <MDIO_stderrorSetPinValue+0x6e>
    1e60:	6c c0       	rjmp	.+216    	; 0x1f3a <MDIO_stderrorSetPinValue+0x12e>
    1e62:	2f 81       	ldd	r18, Y+7	; 0x07
    1e64:	38 85       	ldd	r19, Y+8	; 0x08
    1e66:	23 30       	cpi	r18, 0x03	; 3
    1e68:	31 05       	cpc	r19, r1
    1e6a:	b9 f1       	breq	.+110    	; 0x1eda <MDIO_stderrorSetPinValue+0xce>
    1e6c:	8f 81       	ldd	r24, Y+7	; 0x07
    1e6e:	98 85       	ldd	r25, Y+8	; 0x08
    1e70:	84 30       	cpi	r24, 0x04	; 4
    1e72:	91 05       	cpc	r25, r1
    1e74:	09 f4       	brne	.+2      	; 0x1e78 <MDIO_stderrorSetPinValue+0x6c>
    1e76:	49 c0       	rjmp	.+146    	; 0x1f0a <MDIO_stderrorSetPinValue+0xfe>
    1e78:	60 c0       	rjmp	.+192    	; 0x1f3a <MDIO_stderrorSetPinValue+0x12e>
			{
				case MDIO_PORTA:SET_BIT(GPIOA->PORT, ARG_u8pin);L_stderrorError = E_OK;break;
    1e7a:	a9 e3       	ldi	r26, 0x39	; 57
    1e7c:	b0 e0       	ldi	r27, 0x00	; 0
    1e7e:	e9 e3       	ldi	r30, 0x39	; 57
    1e80:	f0 e0       	ldi	r31, 0x00	; 0
    1e82:	82 81       	ldd	r24, Z+2	; 0x02
    1e84:	48 2f       	mov	r20, r24
    1e86:	8b 81       	ldd	r24, Y+3	; 0x03
    1e88:	28 2f       	mov	r18, r24
    1e8a:	30 e0       	ldi	r19, 0x00	; 0
    1e8c:	81 e0       	ldi	r24, 0x01	; 1
    1e8e:	90 e0       	ldi	r25, 0x00	; 0
    1e90:	02 2e       	mov	r0, r18
    1e92:	02 c0       	rjmp	.+4      	; 0x1e98 <MDIO_stderrorSetPinValue+0x8c>
    1e94:	88 0f       	add	r24, r24
    1e96:	99 1f       	adc	r25, r25
    1e98:	0a 94       	dec	r0
    1e9a:	e2 f7       	brpl	.-8      	; 0x1e94 <MDIO_stderrorSetPinValue+0x88>
    1e9c:	84 2b       	or	r24, r20
    1e9e:	12 96       	adiw	r26, 0x02	; 2
    1ea0:	8c 93       	st	X, r24
    1ea2:	12 97       	sbiw	r26, 0x02	; 2
    1ea4:	81 e0       	ldi	r24, 0x01	; 1
    1ea6:	89 83       	std	Y+1, r24	; 0x01
    1ea8:	d6 c0       	rjmp	.+428    	; 0x2056 <MDIO_stderrorSetPinValue+0x24a>
				case MDIO_PORTB:SET_BIT(GPIOB->PORT, ARG_u8pin);L_stderrorError = E_OK;break;
    1eaa:	a6 e3       	ldi	r26, 0x36	; 54
    1eac:	b0 e0       	ldi	r27, 0x00	; 0
    1eae:	e6 e3       	ldi	r30, 0x36	; 54
    1eb0:	f0 e0       	ldi	r31, 0x00	; 0
    1eb2:	82 81       	ldd	r24, Z+2	; 0x02
    1eb4:	48 2f       	mov	r20, r24
    1eb6:	8b 81       	ldd	r24, Y+3	; 0x03
    1eb8:	28 2f       	mov	r18, r24
    1eba:	30 e0       	ldi	r19, 0x00	; 0
    1ebc:	81 e0       	ldi	r24, 0x01	; 1
    1ebe:	90 e0       	ldi	r25, 0x00	; 0
    1ec0:	02 2e       	mov	r0, r18
    1ec2:	02 c0       	rjmp	.+4      	; 0x1ec8 <MDIO_stderrorSetPinValue+0xbc>
    1ec4:	88 0f       	add	r24, r24
    1ec6:	99 1f       	adc	r25, r25
    1ec8:	0a 94       	dec	r0
    1eca:	e2 f7       	brpl	.-8      	; 0x1ec4 <MDIO_stderrorSetPinValue+0xb8>
    1ecc:	84 2b       	or	r24, r20
    1ece:	12 96       	adiw	r26, 0x02	; 2
    1ed0:	8c 93       	st	X, r24
    1ed2:	12 97       	sbiw	r26, 0x02	; 2
    1ed4:	81 e0       	ldi	r24, 0x01	; 1
    1ed6:	89 83       	std	Y+1, r24	; 0x01
    1ed8:	be c0       	rjmp	.+380    	; 0x2056 <MDIO_stderrorSetPinValue+0x24a>
				case MDIO_PORTC:SET_BIT(GPIOC->PORT, ARG_u8pin);L_stderrorError = E_OK;break;
    1eda:	a3 e3       	ldi	r26, 0x33	; 51
    1edc:	b0 e0       	ldi	r27, 0x00	; 0
    1ede:	e3 e3       	ldi	r30, 0x33	; 51
    1ee0:	f0 e0       	ldi	r31, 0x00	; 0
    1ee2:	82 81       	ldd	r24, Z+2	; 0x02
    1ee4:	48 2f       	mov	r20, r24
    1ee6:	8b 81       	ldd	r24, Y+3	; 0x03
    1ee8:	28 2f       	mov	r18, r24
    1eea:	30 e0       	ldi	r19, 0x00	; 0
    1eec:	81 e0       	ldi	r24, 0x01	; 1
    1eee:	90 e0       	ldi	r25, 0x00	; 0
    1ef0:	02 2e       	mov	r0, r18
    1ef2:	02 c0       	rjmp	.+4      	; 0x1ef8 <MDIO_stderrorSetPinValue+0xec>
    1ef4:	88 0f       	add	r24, r24
    1ef6:	99 1f       	adc	r25, r25
    1ef8:	0a 94       	dec	r0
    1efa:	e2 f7       	brpl	.-8      	; 0x1ef4 <MDIO_stderrorSetPinValue+0xe8>
    1efc:	84 2b       	or	r24, r20
    1efe:	12 96       	adiw	r26, 0x02	; 2
    1f00:	8c 93       	st	X, r24
    1f02:	12 97       	sbiw	r26, 0x02	; 2
    1f04:	81 e0       	ldi	r24, 0x01	; 1
    1f06:	89 83       	std	Y+1, r24	; 0x01
    1f08:	a6 c0       	rjmp	.+332    	; 0x2056 <MDIO_stderrorSetPinValue+0x24a>
				case MDIO_PORTD:SET_BIT(GPIOD->PORT, ARG_u8pin);L_stderrorError = E_OK;break;
    1f0a:	a0 e3       	ldi	r26, 0x30	; 48
    1f0c:	b0 e0       	ldi	r27, 0x00	; 0
    1f0e:	e0 e3       	ldi	r30, 0x30	; 48
    1f10:	f0 e0       	ldi	r31, 0x00	; 0
    1f12:	82 81       	ldd	r24, Z+2	; 0x02
    1f14:	48 2f       	mov	r20, r24
    1f16:	8b 81       	ldd	r24, Y+3	; 0x03
    1f18:	28 2f       	mov	r18, r24
    1f1a:	30 e0       	ldi	r19, 0x00	; 0
    1f1c:	81 e0       	ldi	r24, 0x01	; 1
    1f1e:	90 e0       	ldi	r25, 0x00	; 0
    1f20:	02 2e       	mov	r0, r18
    1f22:	02 c0       	rjmp	.+4      	; 0x1f28 <MDIO_stderrorSetPinValue+0x11c>
    1f24:	88 0f       	add	r24, r24
    1f26:	99 1f       	adc	r25, r25
    1f28:	0a 94       	dec	r0
    1f2a:	e2 f7       	brpl	.-8      	; 0x1f24 <MDIO_stderrorSetPinValue+0x118>
    1f2c:	84 2b       	or	r24, r20
    1f2e:	12 96       	adiw	r26, 0x02	; 2
    1f30:	8c 93       	st	X, r24
    1f32:	12 97       	sbiw	r26, 0x02	; 2
    1f34:	81 e0       	ldi	r24, 0x01	; 1
    1f36:	89 83       	std	Y+1, r24	; 0x01
    1f38:	8e c0       	rjmp	.+284    	; 0x2056 <MDIO_stderrorSetPinValue+0x24a>
				default:L_stderrorError = E_NOK;break;
    1f3a:	19 82       	std	Y+1, r1	; 0x01
    1f3c:	8c c0       	rjmp	.+280    	; 0x2056 <MDIO_stderrorSetPinValue+0x24a>
			}
		}
		else if(ARG_u8Value==MDIO_LOW)
    1f3e:	8c 81       	ldd	r24, Y+4	; 0x04
    1f40:	81 30       	cpi	r24, 0x01	; 1
    1f42:	09 f0       	breq	.+2      	; 0x1f46 <MDIO_stderrorSetPinValue+0x13a>
    1f44:	88 c0       	rjmp	.+272    	; 0x2056 <MDIO_stderrorSetPinValue+0x24a>
		{
			switch(ARG_u8Port)
    1f46:	8a 81       	ldd	r24, Y+2	; 0x02
    1f48:	28 2f       	mov	r18, r24
    1f4a:	30 e0       	ldi	r19, 0x00	; 0
    1f4c:	3e 83       	std	Y+6, r19	; 0x06
    1f4e:	2d 83       	std	Y+5, r18	; 0x05
    1f50:	8d 81       	ldd	r24, Y+5	; 0x05
    1f52:	9e 81       	ldd	r25, Y+6	; 0x06
    1f54:	82 30       	cpi	r24, 0x02	; 2
    1f56:	91 05       	cpc	r25, r1
    1f58:	81 f1       	breq	.+96     	; 0x1fba <MDIO_stderrorSetPinValue+0x1ae>
    1f5a:	2d 81       	ldd	r18, Y+5	; 0x05
    1f5c:	3e 81       	ldd	r19, Y+6	; 0x06
    1f5e:	23 30       	cpi	r18, 0x03	; 3
    1f60:	31 05       	cpc	r19, r1
    1f62:	34 f4       	brge	.+12     	; 0x1f70 <MDIO_stderrorSetPinValue+0x164>
    1f64:	8d 81       	ldd	r24, Y+5	; 0x05
    1f66:	9e 81       	ldd	r25, Y+6	; 0x06
    1f68:	81 30       	cpi	r24, 0x01	; 1
    1f6a:	91 05       	cpc	r25, r1
    1f6c:	69 f0       	breq	.+26     	; 0x1f88 <MDIO_stderrorSetPinValue+0x17c>
    1f6e:	70 c0       	rjmp	.+224    	; 0x2050 <MDIO_stderrorSetPinValue+0x244>
    1f70:	2d 81       	ldd	r18, Y+5	; 0x05
    1f72:	3e 81       	ldd	r19, Y+6	; 0x06
    1f74:	23 30       	cpi	r18, 0x03	; 3
    1f76:	31 05       	cpc	r19, r1
    1f78:	c9 f1       	breq	.+114    	; 0x1fec <MDIO_stderrorSetPinValue+0x1e0>
    1f7a:	8d 81       	ldd	r24, Y+5	; 0x05
    1f7c:	9e 81       	ldd	r25, Y+6	; 0x06
    1f7e:	84 30       	cpi	r24, 0x04	; 4
    1f80:	91 05       	cpc	r25, r1
    1f82:	09 f4       	brne	.+2      	; 0x1f86 <MDIO_stderrorSetPinValue+0x17a>
    1f84:	4c c0       	rjmp	.+152    	; 0x201e <MDIO_stderrorSetPinValue+0x212>
    1f86:	64 c0       	rjmp	.+200    	; 0x2050 <MDIO_stderrorSetPinValue+0x244>
			{
				case MDIO_PORTA:CLEAR_BIT(GPIOA->PORT, ARG_u8pin);L_stderrorError = E_OK;break;
    1f88:	a9 e3       	ldi	r26, 0x39	; 57
    1f8a:	b0 e0       	ldi	r27, 0x00	; 0
    1f8c:	e9 e3       	ldi	r30, 0x39	; 57
    1f8e:	f0 e0       	ldi	r31, 0x00	; 0
    1f90:	82 81       	ldd	r24, Z+2	; 0x02
    1f92:	48 2f       	mov	r20, r24
    1f94:	8b 81       	ldd	r24, Y+3	; 0x03
    1f96:	28 2f       	mov	r18, r24
    1f98:	30 e0       	ldi	r19, 0x00	; 0
    1f9a:	81 e0       	ldi	r24, 0x01	; 1
    1f9c:	90 e0       	ldi	r25, 0x00	; 0
    1f9e:	02 2e       	mov	r0, r18
    1fa0:	02 c0       	rjmp	.+4      	; 0x1fa6 <MDIO_stderrorSetPinValue+0x19a>
    1fa2:	88 0f       	add	r24, r24
    1fa4:	99 1f       	adc	r25, r25
    1fa6:	0a 94       	dec	r0
    1fa8:	e2 f7       	brpl	.-8      	; 0x1fa2 <MDIO_stderrorSetPinValue+0x196>
    1faa:	80 95       	com	r24
    1fac:	84 23       	and	r24, r20
    1fae:	12 96       	adiw	r26, 0x02	; 2
    1fb0:	8c 93       	st	X, r24
    1fb2:	12 97       	sbiw	r26, 0x02	; 2
    1fb4:	81 e0       	ldi	r24, 0x01	; 1
    1fb6:	89 83       	std	Y+1, r24	; 0x01
    1fb8:	4e c0       	rjmp	.+156    	; 0x2056 <MDIO_stderrorSetPinValue+0x24a>
				case MDIO_PORTB:CLEAR_BIT(GPIOB->PORT, ARG_u8pin);L_stderrorError = E_OK;break;
    1fba:	a6 e3       	ldi	r26, 0x36	; 54
    1fbc:	b0 e0       	ldi	r27, 0x00	; 0
    1fbe:	e6 e3       	ldi	r30, 0x36	; 54
    1fc0:	f0 e0       	ldi	r31, 0x00	; 0
    1fc2:	82 81       	ldd	r24, Z+2	; 0x02
    1fc4:	48 2f       	mov	r20, r24
    1fc6:	8b 81       	ldd	r24, Y+3	; 0x03
    1fc8:	28 2f       	mov	r18, r24
    1fca:	30 e0       	ldi	r19, 0x00	; 0
    1fcc:	81 e0       	ldi	r24, 0x01	; 1
    1fce:	90 e0       	ldi	r25, 0x00	; 0
    1fd0:	02 2e       	mov	r0, r18
    1fd2:	02 c0       	rjmp	.+4      	; 0x1fd8 <MDIO_stderrorSetPinValue+0x1cc>
    1fd4:	88 0f       	add	r24, r24
    1fd6:	99 1f       	adc	r25, r25
    1fd8:	0a 94       	dec	r0
    1fda:	e2 f7       	brpl	.-8      	; 0x1fd4 <MDIO_stderrorSetPinValue+0x1c8>
    1fdc:	80 95       	com	r24
    1fde:	84 23       	and	r24, r20
    1fe0:	12 96       	adiw	r26, 0x02	; 2
    1fe2:	8c 93       	st	X, r24
    1fe4:	12 97       	sbiw	r26, 0x02	; 2
    1fe6:	81 e0       	ldi	r24, 0x01	; 1
    1fe8:	89 83       	std	Y+1, r24	; 0x01
    1fea:	35 c0       	rjmp	.+106    	; 0x2056 <MDIO_stderrorSetPinValue+0x24a>
				case MDIO_PORTC:CLEAR_BIT(GPIOC->PORT, ARG_u8pin);L_stderrorError = E_OK;break;
    1fec:	a3 e3       	ldi	r26, 0x33	; 51
    1fee:	b0 e0       	ldi	r27, 0x00	; 0
    1ff0:	e3 e3       	ldi	r30, 0x33	; 51
    1ff2:	f0 e0       	ldi	r31, 0x00	; 0
    1ff4:	82 81       	ldd	r24, Z+2	; 0x02
    1ff6:	48 2f       	mov	r20, r24
    1ff8:	8b 81       	ldd	r24, Y+3	; 0x03
    1ffa:	28 2f       	mov	r18, r24
    1ffc:	30 e0       	ldi	r19, 0x00	; 0
    1ffe:	81 e0       	ldi	r24, 0x01	; 1
    2000:	90 e0       	ldi	r25, 0x00	; 0
    2002:	02 2e       	mov	r0, r18
    2004:	02 c0       	rjmp	.+4      	; 0x200a <MDIO_stderrorSetPinValue+0x1fe>
    2006:	88 0f       	add	r24, r24
    2008:	99 1f       	adc	r25, r25
    200a:	0a 94       	dec	r0
    200c:	e2 f7       	brpl	.-8      	; 0x2006 <MDIO_stderrorSetPinValue+0x1fa>
    200e:	80 95       	com	r24
    2010:	84 23       	and	r24, r20
    2012:	12 96       	adiw	r26, 0x02	; 2
    2014:	8c 93       	st	X, r24
    2016:	12 97       	sbiw	r26, 0x02	; 2
    2018:	81 e0       	ldi	r24, 0x01	; 1
    201a:	89 83       	std	Y+1, r24	; 0x01
    201c:	1c c0       	rjmp	.+56     	; 0x2056 <MDIO_stderrorSetPinValue+0x24a>
				case MDIO_PORTD:CLEAR_BIT(GPIOD->PORT, ARG_u8pin);L_stderrorError = E_OK;break;
    201e:	a0 e3       	ldi	r26, 0x30	; 48
    2020:	b0 e0       	ldi	r27, 0x00	; 0
    2022:	e0 e3       	ldi	r30, 0x30	; 48
    2024:	f0 e0       	ldi	r31, 0x00	; 0
    2026:	82 81       	ldd	r24, Z+2	; 0x02
    2028:	48 2f       	mov	r20, r24
    202a:	8b 81       	ldd	r24, Y+3	; 0x03
    202c:	28 2f       	mov	r18, r24
    202e:	30 e0       	ldi	r19, 0x00	; 0
    2030:	81 e0       	ldi	r24, 0x01	; 1
    2032:	90 e0       	ldi	r25, 0x00	; 0
    2034:	02 2e       	mov	r0, r18
    2036:	02 c0       	rjmp	.+4      	; 0x203c <MDIO_stderrorSetPinValue+0x230>
    2038:	88 0f       	add	r24, r24
    203a:	99 1f       	adc	r25, r25
    203c:	0a 94       	dec	r0
    203e:	e2 f7       	brpl	.-8      	; 0x2038 <MDIO_stderrorSetPinValue+0x22c>
    2040:	80 95       	com	r24
    2042:	84 23       	and	r24, r20
    2044:	12 96       	adiw	r26, 0x02	; 2
    2046:	8c 93       	st	X, r24
    2048:	12 97       	sbiw	r26, 0x02	; 2
    204a:	81 e0       	ldi	r24, 0x01	; 1
    204c:	89 83       	std	Y+1, r24	; 0x01
    204e:	03 c0       	rjmp	.+6      	; 0x2056 <MDIO_stderrorSetPinValue+0x24a>
				default:L_stderrorError = E_NOK;break;
    2050:	19 82       	std	Y+1, r1	; 0x01
    2052:	01 c0       	rjmp	.+2      	; 0x2056 <MDIO_stderrorSetPinValue+0x24a>
		}
			
	}
	else
	{
		L_stderrorError=E_NOK;
    2054:	19 82       	std	Y+1, r1	; 0x01
	}
	return L_stderrorError;
    2056:	89 81       	ldd	r24, Y+1	; 0x01
}
    2058:	28 96       	adiw	r28, 0x08	; 8
    205a:	0f b6       	in	r0, 0x3f	; 63
    205c:	f8 94       	cli
    205e:	de bf       	out	0x3e, r29	; 62
    2060:	0f be       	out	0x3f, r0	; 63
    2062:	cd bf       	out	0x3d, r28	; 61
    2064:	cf 91       	pop	r28
    2066:	df 91       	pop	r29
    2068:	08 95       	ret

0000206a <MDIO_stderrorGetPinValue>:
(
	u8 ARG_u8Port,
	u8 ARG_u8pin,
	u8* ARG_pu8Value
)
{
    206a:	df 93       	push	r29
    206c:	cf 93       	push	r28
    206e:	cd b7       	in	r28, 0x3d	; 61
    2070:	de b7       	in	r29, 0x3e	; 62
    2072:	27 97       	sbiw	r28, 0x07	; 7
    2074:	0f b6       	in	r0, 0x3f	; 63
    2076:	f8 94       	cli
    2078:	de bf       	out	0x3e, r29	; 62
    207a:	0f be       	out	0x3f, r0	; 63
    207c:	cd bf       	out	0x3d, r28	; 61
    207e:	8a 83       	std	Y+2, r24	; 0x02
    2080:	6b 83       	std	Y+3, r22	; 0x03
    2082:	5d 83       	std	Y+5, r21	; 0x05
    2084:	4c 83       	std	Y+4, r20	; 0x04
	STD_error_t L_stderrorError=E_NOK;
    2086:	19 82       	std	Y+1, r1	; 0x01
	
	if(ARG_pu8Value==NULL_POINTER)
    2088:	8c 81       	ldd	r24, Y+4	; 0x04
    208a:	9d 81       	ldd	r25, Y+5	; 0x05
    208c:	00 97       	sbiw	r24, 0x00	; 0
    208e:	19 f4       	brne	.+6      	; 0x2096 <MDIO_stderrorGetPinValue+0x2c>
	{
		L_stderrorError=E_NULL_POINTER;
    2090:	82 e0       	ldi	r24, 0x02	; 2
    2092:	89 83       	std	Y+1, r24	; 0x01
    2094:	80 c0       	rjmp	.+256    	; 0x2196 <MDIO_stderrorGetPinValue+0x12c>
	}
	else if ((ARG_u8pin>=0)&&(ARG_u8pin<=7))
    2096:	8b 81       	ldd	r24, Y+3	; 0x03
    2098:	88 30       	cpi	r24, 0x08	; 8
    209a:	08 f0       	brcs	.+2      	; 0x209e <MDIO_stderrorGetPinValue+0x34>
    209c:	7b c0       	rjmp	.+246    	; 0x2194 <MDIO_stderrorGetPinValue+0x12a>
	{
		switch(ARG_u8Port)
    209e:	8a 81       	ldd	r24, Y+2	; 0x02
    20a0:	28 2f       	mov	r18, r24
    20a2:	30 e0       	ldi	r19, 0x00	; 0
    20a4:	3f 83       	std	Y+7, r19	; 0x07
    20a6:	2e 83       	std	Y+6, r18	; 0x06
    20a8:	4e 81       	ldd	r20, Y+6	; 0x06
    20aa:	5f 81       	ldd	r21, Y+7	; 0x07
    20ac:	42 30       	cpi	r20, 0x02	; 2
    20ae:	51 05       	cpc	r21, r1
    20b0:	69 f1       	breq	.+90     	; 0x210c <MDIO_stderrorGetPinValue+0xa2>
    20b2:	8e 81       	ldd	r24, Y+6	; 0x06
    20b4:	9f 81       	ldd	r25, Y+7	; 0x07
    20b6:	83 30       	cpi	r24, 0x03	; 3
    20b8:	91 05       	cpc	r25, r1
    20ba:	34 f4       	brge	.+12     	; 0x20c8 <MDIO_stderrorGetPinValue+0x5e>
    20bc:	2e 81       	ldd	r18, Y+6	; 0x06
    20be:	3f 81       	ldd	r19, Y+7	; 0x07
    20c0:	21 30       	cpi	r18, 0x01	; 1
    20c2:	31 05       	cpc	r19, r1
    20c4:	69 f0       	breq	.+26     	; 0x20e0 <MDIO_stderrorGetPinValue+0x76>
    20c6:	64 c0       	rjmp	.+200    	; 0x2190 <MDIO_stderrorGetPinValue+0x126>
    20c8:	4e 81       	ldd	r20, Y+6	; 0x06
    20ca:	5f 81       	ldd	r21, Y+7	; 0x07
    20cc:	43 30       	cpi	r20, 0x03	; 3
    20ce:	51 05       	cpc	r21, r1
    20d0:	99 f1       	breq	.+102    	; 0x2138 <MDIO_stderrorGetPinValue+0xce>
    20d2:	8e 81       	ldd	r24, Y+6	; 0x06
    20d4:	9f 81       	ldd	r25, Y+7	; 0x07
    20d6:	84 30       	cpi	r24, 0x04	; 4
    20d8:	91 05       	cpc	r25, r1
    20da:	09 f4       	brne	.+2      	; 0x20de <MDIO_stderrorGetPinValue+0x74>
    20dc:	43 c0       	rjmp	.+134    	; 0x2164 <MDIO_stderrorGetPinValue+0xfa>
    20de:	58 c0       	rjmp	.+176    	; 0x2190 <MDIO_stderrorGetPinValue+0x126>
		{
			case MDIO_PORTA: *ARG_pu8Value= GET_BIT(GPIOA->PIN, ARG_u8pin);L_stderrorError = E_OK;break;
    20e0:	e9 e3       	ldi	r30, 0x39	; 57
    20e2:	f0 e0       	ldi	r31, 0x00	; 0
    20e4:	80 81       	ld	r24, Z
    20e6:	28 2f       	mov	r18, r24
    20e8:	30 e0       	ldi	r19, 0x00	; 0
    20ea:	8b 81       	ldd	r24, Y+3	; 0x03
    20ec:	88 2f       	mov	r24, r24
    20ee:	90 e0       	ldi	r25, 0x00	; 0
    20f0:	a9 01       	movw	r20, r18
    20f2:	02 c0       	rjmp	.+4      	; 0x20f8 <MDIO_stderrorGetPinValue+0x8e>
    20f4:	55 95       	asr	r21
    20f6:	47 95       	ror	r20
    20f8:	8a 95       	dec	r24
    20fa:	e2 f7       	brpl	.-8      	; 0x20f4 <MDIO_stderrorGetPinValue+0x8a>
    20fc:	ca 01       	movw	r24, r20
    20fe:	81 70       	andi	r24, 0x01	; 1
    2100:	ec 81       	ldd	r30, Y+4	; 0x04
    2102:	fd 81       	ldd	r31, Y+5	; 0x05
    2104:	80 83       	st	Z, r24
    2106:	81 e0       	ldi	r24, 0x01	; 1
    2108:	89 83       	std	Y+1, r24	; 0x01
    210a:	45 c0       	rjmp	.+138    	; 0x2196 <MDIO_stderrorGetPinValue+0x12c>
			case MDIO_PORTB: *ARG_pu8Value= GET_BIT(GPIOB->PIN, ARG_u8pin);L_stderrorError = E_OK;break;
    210c:	e6 e3       	ldi	r30, 0x36	; 54
    210e:	f0 e0       	ldi	r31, 0x00	; 0
    2110:	80 81       	ld	r24, Z
    2112:	28 2f       	mov	r18, r24
    2114:	30 e0       	ldi	r19, 0x00	; 0
    2116:	8b 81       	ldd	r24, Y+3	; 0x03
    2118:	88 2f       	mov	r24, r24
    211a:	90 e0       	ldi	r25, 0x00	; 0
    211c:	a9 01       	movw	r20, r18
    211e:	02 c0       	rjmp	.+4      	; 0x2124 <MDIO_stderrorGetPinValue+0xba>
    2120:	55 95       	asr	r21
    2122:	47 95       	ror	r20
    2124:	8a 95       	dec	r24
    2126:	e2 f7       	brpl	.-8      	; 0x2120 <MDIO_stderrorGetPinValue+0xb6>
    2128:	ca 01       	movw	r24, r20
    212a:	81 70       	andi	r24, 0x01	; 1
    212c:	ec 81       	ldd	r30, Y+4	; 0x04
    212e:	fd 81       	ldd	r31, Y+5	; 0x05
    2130:	80 83       	st	Z, r24
    2132:	81 e0       	ldi	r24, 0x01	; 1
    2134:	89 83       	std	Y+1, r24	; 0x01
    2136:	2f c0       	rjmp	.+94     	; 0x2196 <MDIO_stderrorGetPinValue+0x12c>
			case MDIO_PORTC: *ARG_pu8Value= GET_BIT(GPIOC->PIN, ARG_u8pin);L_stderrorError = E_OK;break;
    2138:	e3 e3       	ldi	r30, 0x33	; 51
    213a:	f0 e0       	ldi	r31, 0x00	; 0
    213c:	80 81       	ld	r24, Z
    213e:	28 2f       	mov	r18, r24
    2140:	30 e0       	ldi	r19, 0x00	; 0
    2142:	8b 81       	ldd	r24, Y+3	; 0x03
    2144:	88 2f       	mov	r24, r24
    2146:	90 e0       	ldi	r25, 0x00	; 0
    2148:	a9 01       	movw	r20, r18
    214a:	02 c0       	rjmp	.+4      	; 0x2150 <MDIO_stderrorGetPinValue+0xe6>
    214c:	55 95       	asr	r21
    214e:	47 95       	ror	r20
    2150:	8a 95       	dec	r24
    2152:	e2 f7       	brpl	.-8      	; 0x214c <MDIO_stderrorGetPinValue+0xe2>
    2154:	ca 01       	movw	r24, r20
    2156:	81 70       	andi	r24, 0x01	; 1
    2158:	ec 81       	ldd	r30, Y+4	; 0x04
    215a:	fd 81       	ldd	r31, Y+5	; 0x05
    215c:	80 83       	st	Z, r24
    215e:	81 e0       	ldi	r24, 0x01	; 1
    2160:	89 83       	std	Y+1, r24	; 0x01
    2162:	19 c0       	rjmp	.+50     	; 0x2196 <MDIO_stderrorGetPinValue+0x12c>
			case MDIO_PORTD: *ARG_pu8Value= GET_BIT(GPIOD->PIN, ARG_u8pin);L_stderrorError = E_OK;break;
    2164:	e0 e3       	ldi	r30, 0x30	; 48
    2166:	f0 e0       	ldi	r31, 0x00	; 0
    2168:	80 81       	ld	r24, Z
    216a:	28 2f       	mov	r18, r24
    216c:	30 e0       	ldi	r19, 0x00	; 0
    216e:	8b 81       	ldd	r24, Y+3	; 0x03
    2170:	88 2f       	mov	r24, r24
    2172:	90 e0       	ldi	r25, 0x00	; 0
    2174:	a9 01       	movw	r20, r18
    2176:	02 c0       	rjmp	.+4      	; 0x217c <MDIO_stderrorGetPinValue+0x112>
    2178:	55 95       	asr	r21
    217a:	47 95       	ror	r20
    217c:	8a 95       	dec	r24
    217e:	e2 f7       	brpl	.-8      	; 0x2178 <MDIO_stderrorGetPinValue+0x10e>
    2180:	ca 01       	movw	r24, r20
    2182:	81 70       	andi	r24, 0x01	; 1
    2184:	ec 81       	ldd	r30, Y+4	; 0x04
    2186:	fd 81       	ldd	r31, Y+5	; 0x05
    2188:	80 83       	st	Z, r24
    218a:	81 e0       	ldi	r24, 0x01	; 1
    218c:	89 83       	std	Y+1, r24	; 0x01
    218e:	03 c0       	rjmp	.+6      	; 0x2196 <MDIO_stderrorGetPinValue+0x12c>
			default:L_stderrorError = E_NOK;break;
    2190:	19 82       	std	Y+1, r1	; 0x01
    2192:	01 c0       	rjmp	.+2      	; 0x2196 <MDIO_stderrorGetPinValue+0x12c>
		}
	}
	else
	{
		
		L_stderrorError=E_NOK;
    2194:	19 82       	std	Y+1, r1	; 0x01
		
	}
	
	return L_stderrorError;
    2196:	89 81       	ldd	r24, Y+1	; 0x01
    2198:	27 96       	adiw	r28, 0x07	; 7
    219a:	0f b6       	in	r0, 0x3f	; 63
    219c:	f8 94       	cli
    219e:	de bf       	out	0x3e, r29	; 62
    21a0:	0f be       	out	0x3f, r0	; 63
    21a2:	cd bf       	out	0x3d, r28	; 61
    21a4:	cf 91       	pop	r28
    21a6:	df 91       	pop	r29
    21a8:	08 95       	ret

000021aa <main>:

/* SWC Include */
#include "HLCD_interface.h"

int main(void)
{
    21aa:	df 93       	push	r29
    21ac:	cf 93       	push	r28
    21ae:	cd b7       	in	r28, 0x3d	; 61
    21b0:	de b7       	in	r29, 0x3e	; 62
    21b2:	cb 55       	subi	r28, 0x5B	; 91
    21b4:	d0 40       	sbci	r29, 0x00	; 0
    21b6:	0f b6       	in	r0, 0x3f	; 63
    21b8:	f8 94       	cli
    21ba:	de bf       	out	0x3e, r29	; 62
    21bc:	0f be       	out	0x3f, r0	; 63
    21be:	cd bf       	out	0x3d, r28	; 61

	HLCD_voidInit();
    21c0:	0e 94 47 06 	call	0xc8e	; 0xc8e <HLCD_voidInit>
			  0x09,
			  0x09,
			  0x1F,
			  0x00,
			  0x00
			};
    21c4:	ce 01       	movw	r24, r28
    21c6:	01 96       	adiw	r24, 0x01	; 1
    21c8:	9a af       	std	Y+58, r25	; 0x3a
    21ca:	89 af       	std	Y+57, r24	; 0x39
    21cc:	e8 e9       	ldi	r30, 0x98	; 152
    21ce:	f0 e0       	ldi	r31, 0x00	; 0
    21d0:	fc af       	std	Y+60, r31	; 0x3c
    21d2:	eb af       	std	Y+59, r30	; 0x3b
    21d4:	f8 e0       	ldi	r31, 0x08	; 8
    21d6:	fd af       	std	Y+61, r31	; 0x3d
    21d8:	eb ad       	ldd	r30, Y+59	; 0x3b
    21da:	fc ad       	ldd	r31, Y+60	; 0x3c
    21dc:	00 80       	ld	r0, Z
    21de:	8b ad       	ldd	r24, Y+59	; 0x3b
    21e0:	9c ad       	ldd	r25, Y+60	; 0x3c
    21e2:	01 96       	adiw	r24, 0x01	; 1
    21e4:	9c af       	std	Y+60, r25	; 0x3c
    21e6:	8b af       	std	Y+59, r24	; 0x3b
    21e8:	e9 ad       	ldd	r30, Y+57	; 0x39
    21ea:	fa ad       	ldd	r31, Y+58	; 0x3a
    21ec:	00 82       	st	Z, r0
    21ee:	89 ad       	ldd	r24, Y+57	; 0x39
    21f0:	9a ad       	ldd	r25, Y+58	; 0x3a
    21f2:	01 96       	adiw	r24, 0x01	; 1
    21f4:	9a af       	std	Y+58, r25	; 0x3a
    21f6:	89 af       	std	Y+57, r24	; 0x39
    21f8:	9d ad       	ldd	r25, Y+61	; 0x3d
    21fa:	91 50       	subi	r25, 0x01	; 1
    21fc:	9d af       	std	Y+61, r25	; 0x3d
    21fe:	ed ad       	ldd	r30, Y+61	; 0x3d
    2200:	ee 23       	and	r30, r30
    2202:	51 f7       	brne	.-44     	; 0x21d8 <main+0x2e>
			  0x02,
			  0x02,
			  0x1F,
			  0x00,
			  0x00
			};
    2204:	ce 01       	movw	r24, r28
    2206:	09 96       	adiw	r24, 0x09	; 9
    2208:	9f af       	std	Y+63, r25	; 0x3f
    220a:	8e af       	std	Y+62, r24	; 0x3e
    220c:	e0 e9       	ldi	r30, 0x90	; 144
    220e:	f0 e0       	ldi	r31, 0x00	; 0
    2210:	22 96       	adiw	r28, 0x02	; 2
    2212:	ff af       	std	Y+63, r31	; 0x3f
    2214:	ee af       	std	Y+62, r30	; 0x3e
    2216:	22 97       	sbiw	r28, 0x02	; 2
    2218:	f8 e0       	ldi	r31, 0x08	; 8
    221a:	23 96       	adiw	r28, 0x03	; 3
    221c:	ff af       	std	Y+63, r31	; 0x3f
    221e:	23 97       	sbiw	r28, 0x03	; 3
    2220:	22 96       	adiw	r28, 0x02	; 2
    2222:	ee ad       	ldd	r30, Y+62	; 0x3e
    2224:	ff ad       	ldd	r31, Y+63	; 0x3f
    2226:	22 97       	sbiw	r28, 0x02	; 2
    2228:	00 80       	ld	r0, Z
    222a:	22 96       	adiw	r28, 0x02	; 2
    222c:	8e ad       	ldd	r24, Y+62	; 0x3e
    222e:	9f ad       	ldd	r25, Y+63	; 0x3f
    2230:	22 97       	sbiw	r28, 0x02	; 2
    2232:	01 96       	adiw	r24, 0x01	; 1
    2234:	22 96       	adiw	r28, 0x02	; 2
    2236:	9f af       	std	Y+63, r25	; 0x3f
    2238:	8e af       	std	Y+62, r24	; 0x3e
    223a:	22 97       	sbiw	r28, 0x02	; 2
    223c:	ee ad       	ldd	r30, Y+62	; 0x3e
    223e:	ff ad       	ldd	r31, Y+63	; 0x3f
    2240:	00 82       	st	Z, r0
    2242:	8e ad       	ldd	r24, Y+62	; 0x3e
    2244:	9f ad       	ldd	r25, Y+63	; 0x3f
    2246:	01 96       	adiw	r24, 0x01	; 1
    2248:	9f af       	std	Y+63, r25	; 0x3f
    224a:	8e af       	std	Y+62, r24	; 0x3e
    224c:	23 96       	adiw	r28, 0x03	; 3
    224e:	9f ad       	ldd	r25, Y+63	; 0x3f
    2250:	23 97       	sbiw	r28, 0x03	; 3
    2252:	91 50       	subi	r25, 0x01	; 1
    2254:	23 96       	adiw	r28, 0x03	; 3
    2256:	9f af       	std	Y+63, r25	; 0x3f
    2258:	23 97       	sbiw	r28, 0x03	; 3
    225a:	23 96       	adiw	r28, 0x03	; 3
    225c:	ef ad       	ldd	r30, Y+63	; 0x3f
    225e:	23 97       	sbiw	r28, 0x03	; 3
    2260:	ee 23       	and	r30, r30
    2262:	f1 f6       	brne	.-68     	; 0x2220 <main+0x76>
			  0x02,
			  0x02,
			  0x1F,
			  0x00,
			  0x00
			};
    2264:	ce 01       	movw	r24, r28
    2266:	41 96       	adiw	r24, 0x11	; 17
    2268:	25 96       	adiw	r28, 0x05	; 5
    226a:	9f af       	std	Y+63, r25	; 0x3f
    226c:	8e af       	std	Y+62, r24	; 0x3e
    226e:	25 97       	sbiw	r28, 0x05	; 5
    2270:	e8 e8       	ldi	r30, 0x88	; 136
    2272:	f0 e0       	ldi	r31, 0x00	; 0
    2274:	27 96       	adiw	r28, 0x07	; 7
    2276:	ff af       	std	Y+63, r31	; 0x3f
    2278:	ee af       	std	Y+62, r30	; 0x3e
    227a:	27 97       	sbiw	r28, 0x07	; 7
    227c:	f8 e0       	ldi	r31, 0x08	; 8
    227e:	28 96       	adiw	r28, 0x08	; 8
    2280:	ff af       	std	Y+63, r31	; 0x3f
    2282:	28 97       	sbiw	r28, 0x08	; 8
    2284:	27 96       	adiw	r28, 0x07	; 7
    2286:	ee ad       	ldd	r30, Y+62	; 0x3e
    2288:	ff ad       	ldd	r31, Y+63	; 0x3f
    228a:	27 97       	sbiw	r28, 0x07	; 7
    228c:	00 80       	ld	r0, Z
    228e:	27 96       	adiw	r28, 0x07	; 7
    2290:	8e ad       	ldd	r24, Y+62	; 0x3e
    2292:	9f ad       	ldd	r25, Y+63	; 0x3f
    2294:	27 97       	sbiw	r28, 0x07	; 7
    2296:	01 96       	adiw	r24, 0x01	; 1
    2298:	27 96       	adiw	r28, 0x07	; 7
    229a:	9f af       	std	Y+63, r25	; 0x3f
    229c:	8e af       	std	Y+62, r24	; 0x3e
    229e:	27 97       	sbiw	r28, 0x07	; 7
    22a0:	25 96       	adiw	r28, 0x05	; 5
    22a2:	ee ad       	ldd	r30, Y+62	; 0x3e
    22a4:	ff ad       	ldd	r31, Y+63	; 0x3f
    22a6:	25 97       	sbiw	r28, 0x05	; 5
    22a8:	00 82       	st	Z, r0
    22aa:	25 96       	adiw	r28, 0x05	; 5
    22ac:	8e ad       	ldd	r24, Y+62	; 0x3e
    22ae:	9f ad       	ldd	r25, Y+63	; 0x3f
    22b0:	25 97       	sbiw	r28, 0x05	; 5
    22b2:	01 96       	adiw	r24, 0x01	; 1
    22b4:	25 96       	adiw	r28, 0x05	; 5
    22b6:	9f af       	std	Y+63, r25	; 0x3f
    22b8:	8e af       	std	Y+62, r24	; 0x3e
    22ba:	25 97       	sbiw	r28, 0x05	; 5
    22bc:	28 96       	adiw	r28, 0x08	; 8
    22be:	9f ad       	ldd	r25, Y+63	; 0x3f
    22c0:	28 97       	sbiw	r28, 0x08	; 8
    22c2:	91 50       	subi	r25, 0x01	; 1
    22c4:	28 96       	adiw	r28, 0x08	; 8
    22c6:	9f af       	std	Y+63, r25	; 0x3f
    22c8:	28 97       	sbiw	r28, 0x08	; 8
    22ca:	28 96       	adiw	r28, 0x08	; 8
    22cc:	ef ad       	ldd	r30, Y+63	; 0x3f
    22ce:	28 97       	sbiw	r28, 0x08	; 8
    22d0:	ee 23       	and	r30, r30
    22d2:	c1 f6       	brne	.-80     	; 0x2284 <main+0xda>
			  0x15,
			  0x15,
			  0x1F,
			  0x00,
			  0x00
			};
    22d4:	ce 01       	movw	r24, r28
    22d6:	49 96       	adiw	r24, 0x19	; 25
    22d8:	2a 96       	adiw	r28, 0x0a	; 10
    22da:	9f af       	std	Y+63, r25	; 0x3f
    22dc:	8e af       	std	Y+62, r24	; 0x3e
    22de:	2a 97       	sbiw	r28, 0x0a	; 10
    22e0:	e0 e8       	ldi	r30, 0x80	; 128
    22e2:	f0 e0       	ldi	r31, 0x00	; 0
    22e4:	2c 96       	adiw	r28, 0x0c	; 12
    22e6:	ff af       	std	Y+63, r31	; 0x3f
    22e8:	ee af       	std	Y+62, r30	; 0x3e
    22ea:	2c 97       	sbiw	r28, 0x0c	; 12
    22ec:	f8 e0       	ldi	r31, 0x08	; 8
    22ee:	2d 96       	adiw	r28, 0x0d	; 13
    22f0:	ff af       	std	Y+63, r31	; 0x3f
    22f2:	2d 97       	sbiw	r28, 0x0d	; 13
    22f4:	2c 96       	adiw	r28, 0x0c	; 12
    22f6:	ee ad       	ldd	r30, Y+62	; 0x3e
    22f8:	ff ad       	ldd	r31, Y+63	; 0x3f
    22fa:	2c 97       	sbiw	r28, 0x0c	; 12
    22fc:	00 80       	ld	r0, Z
    22fe:	2c 96       	adiw	r28, 0x0c	; 12
    2300:	8e ad       	ldd	r24, Y+62	; 0x3e
    2302:	9f ad       	ldd	r25, Y+63	; 0x3f
    2304:	2c 97       	sbiw	r28, 0x0c	; 12
    2306:	01 96       	adiw	r24, 0x01	; 1
    2308:	2c 96       	adiw	r28, 0x0c	; 12
    230a:	9f af       	std	Y+63, r25	; 0x3f
    230c:	8e af       	std	Y+62, r24	; 0x3e
    230e:	2c 97       	sbiw	r28, 0x0c	; 12
    2310:	2a 96       	adiw	r28, 0x0a	; 10
    2312:	ee ad       	ldd	r30, Y+62	; 0x3e
    2314:	ff ad       	ldd	r31, Y+63	; 0x3f
    2316:	2a 97       	sbiw	r28, 0x0a	; 10
    2318:	00 82       	st	Z, r0
    231a:	2a 96       	adiw	r28, 0x0a	; 10
    231c:	8e ad       	ldd	r24, Y+62	; 0x3e
    231e:	9f ad       	ldd	r25, Y+63	; 0x3f
    2320:	2a 97       	sbiw	r28, 0x0a	; 10
    2322:	01 96       	adiw	r24, 0x01	; 1
    2324:	2a 96       	adiw	r28, 0x0a	; 10
    2326:	9f af       	std	Y+63, r25	; 0x3f
    2328:	8e af       	std	Y+62, r24	; 0x3e
    232a:	2a 97       	sbiw	r28, 0x0a	; 10
    232c:	2d 96       	adiw	r28, 0x0d	; 13
    232e:	9f ad       	ldd	r25, Y+63	; 0x3f
    2330:	2d 97       	sbiw	r28, 0x0d	; 13
    2332:	91 50       	subi	r25, 0x01	; 1
    2334:	2d 96       	adiw	r28, 0x0d	; 13
    2336:	9f af       	std	Y+63, r25	; 0x3f
    2338:	2d 97       	sbiw	r28, 0x0d	; 13
    233a:	2d 96       	adiw	r28, 0x0d	; 13
    233c:	ef ad       	ldd	r30, Y+63	; 0x3f
    233e:	2d 97       	sbiw	r28, 0x0d	; 13
    2340:	ee 23       	and	r30, r30
    2342:	c1 f6       	brne	.-80     	; 0x22f4 <main+0x14a>
			  0x0A,
			  0x0A,
			  0x1F,
			  0x00,
			  0x00
			};
    2344:	ce 01       	movw	r24, r28
    2346:	81 96       	adiw	r24, 0x21	; 33
    2348:	2f 96       	adiw	r28, 0x0f	; 15
    234a:	9f af       	std	Y+63, r25	; 0x3f
    234c:	8e af       	std	Y+62, r24	; 0x3e
    234e:	2f 97       	sbiw	r28, 0x0f	; 15
    2350:	e8 e7       	ldi	r30, 0x78	; 120
    2352:	f0 e0       	ldi	r31, 0x00	; 0
    2354:	61 96       	adiw	r28, 0x11	; 17
    2356:	ff af       	std	Y+63, r31	; 0x3f
    2358:	ee af       	std	Y+62, r30	; 0x3e
    235a:	61 97       	sbiw	r28, 0x11	; 17
    235c:	f8 e0       	ldi	r31, 0x08	; 8
    235e:	62 96       	adiw	r28, 0x12	; 18
    2360:	ff af       	std	Y+63, r31	; 0x3f
    2362:	62 97       	sbiw	r28, 0x12	; 18
    2364:	61 96       	adiw	r28, 0x11	; 17
    2366:	ee ad       	ldd	r30, Y+62	; 0x3e
    2368:	ff ad       	ldd	r31, Y+63	; 0x3f
    236a:	61 97       	sbiw	r28, 0x11	; 17
    236c:	00 80       	ld	r0, Z
    236e:	61 96       	adiw	r28, 0x11	; 17
    2370:	8e ad       	ldd	r24, Y+62	; 0x3e
    2372:	9f ad       	ldd	r25, Y+63	; 0x3f
    2374:	61 97       	sbiw	r28, 0x11	; 17
    2376:	01 96       	adiw	r24, 0x01	; 1
    2378:	61 96       	adiw	r28, 0x11	; 17
    237a:	9f af       	std	Y+63, r25	; 0x3f
    237c:	8e af       	std	Y+62, r24	; 0x3e
    237e:	61 97       	sbiw	r28, 0x11	; 17
    2380:	2f 96       	adiw	r28, 0x0f	; 15
    2382:	ee ad       	ldd	r30, Y+62	; 0x3e
    2384:	ff ad       	ldd	r31, Y+63	; 0x3f
    2386:	2f 97       	sbiw	r28, 0x0f	; 15
    2388:	00 82       	st	Z, r0
    238a:	2f 96       	adiw	r28, 0x0f	; 15
    238c:	8e ad       	ldd	r24, Y+62	; 0x3e
    238e:	9f ad       	ldd	r25, Y+63	; 0x3f
    2390:	2f 97       	sbiw	r28, 0x0f	; 15
    2392:	01 96       	adiw	r24, 0x01	; 1
    2394:	2f 96       	adiw	r28, 0x0f	; 15
    2396:	9f af       	std	Y+63, r25	; 0x3f
    2398:	8e af       	std	Y+62, r24	; 0x3e
    239a:	2f 97       	sbiw	r28, 0x0f	; 15
    239c:	62 96       	adiw	r28, 0x12	; 18
    239e:	9f ad       	ldd	r25, Y+63	; 0x3f
    23a0:	62 97       	sbiw	r28, 0x12	; 18
    23a2:	91 50       	subi	r25, 0x01	; 1
    23a4:	62 96       	adiw	r28, 0x12	; 18
    23a6:	9f af       	std	Y+63, r25	; 0x3f
    23a8:	62 97       	sbiw	r28, 0x12	; 18
    23aa:	62 96       	adiw	r28, 0x12	; 18
    23ac:	ef ad       	ldd	r30, Y+63	; 0x3f
    23ae:	62 97       	sbiw	r28, 0x12	; 18
    23b0:	ee 23       	and	r30, r30
    23b2:	c1 f6       	brne	.-80     	; 0x2364 <main+0x1ba>
			  0x04,
			  0x04,
			  0x1F,
			  0x00,
			  0x0A
			};
    23b4:	ce 01       	movw	r24, r28
    23b6:	89 96       	adiw	r24, 0x29	; 41
    23b8:	64 96       	adiw	r28, 0x14	; 20
    23ba:	9f af       	std	Y+63, r25	; 0x3f
    23bc:	8e af       	std	Y+62, r24	; 0x3e
    23be:	64 97       	sbiw	r28, 0x14	; 20
    23c0:	e0 e7       	ldi	r30, 0x70	; 112
    23c2:	f0 e0       	ldi	r31, 0x00	; 0
    23c4:	66 96       	adiw	r28, 0x16	; 22
    23c6:	ff af       	std	Y+63, r31	; 0x3f
    23c8:	ee af       	std	Y+62, r30	; 0x3e
    23ca:	66 97       	sbiw	r28, 0x16	; 22
    23cc:	f8 e0       	ldi	r31, 0x08	; 8
    23ce:	67 96       	adiw	r28, 0x17	; 23
    23d0:	ff af       	std	Y+63, r31	; 0x3f
    23d2:	67 97       	sbiw	r28, 0x17	; 23
    23d4:	66 96       	adiw	r28, 0x16	; 22
    23d6:	ee ad       	ldd	r30, Y+62	; 0x3e
    23d8:	ff ad       	ldd	r31, Y+63	; 0x3f
    23da:	66 97       	sbiw	r28, 0x16	; 22
    23dc:	00 80       	ld	r0, Z
    23de:	66 96       	adiw	r28, 0x16	; 22
    23e0:	8e ad       	ldd	r24, Y+62	; 0x3e
    23e2:	9f ad       	ldd	r25, Y+63	; 0x3f
    23e4:	66 97       	sbiw	r28, 0x16	; 22
    23e6:	01 96       	adiw	r24, 0x01	; 1
    23e8:	66 96       	adiw	r28, 0x16	; 22
    23ea:	9f af       	std	Y+63, r25	; 0x3f
    23ec:	8e af       	std	Y+62, r24	; 0x3e
    23ee:	66 97       	sbiw	r28, 0x16	; 22
    23f0:	64 96       	adiw	r28, 0x14	; 20
    23f2:	ee ad       	ldd	r30, Y+62	; 0x3e
    23f4:	ff ad       	ldd	r31, Y+63	; 0x3f
    23f6:	64 97       	sbiw	r28, 0x14	; 20
    23f8:	00 82       	st	Z, r0
    23fa:	64 96       	adiw	r28, 0x14	; 20
    23fc:	8e ad       	ldd	r24, Y+62	; 0x3e
    23fe:	9f ad       	ldd	r25, Y+63	; 0x3f
    2400:	64 97       	sbiw	r28, 0x14	; 20
    2402:	01 96       	adiw	r24, 0x01	; 1
    2404:	64 96       	adiw	r28, 0x14	; 20
    2406:	9f af       	std	Y+63, r25	; 0x3f
    2408:	8e af       	std	Y+62, r24	; 0x3e
    240a:	64 97       	sbiw	r28, 0x14	; 20
    240c:	67 96       	adiw	r28, 0x17	; 23
    240e:	9f ad       	ldd	r25, Y+63	; 0x3f
    2410:	67 97       	sbiw	r28, 0x17	; 23
    2412:	91 50       	subi	r25, 0x01	; 1
    2414:	67 96       	adiw	r28, 0x17	; 23
    2416:	9f af       	std	Y+63, r25	; 0x3f
    2418:	67 97       	sbiw	r28, 0x17	; 23
    241a:	67 96       	adiw	r28, 0x17	; 23
    241c:	ef ad       	ldd	r30, Y+63	; 0x3f
    241e:	67 97       	sbiw	r28, 0x17	; 23
    2420:	ee 23       	and	r30, r30
    2422:	c1 f6       	brne	.-80     	; 0x23d4 <main+0x22a>
			  0x00,
			  0x00,
			  0x03,
			  0x04,
			  0x08
			};
    2424:	ce 01       	movw	r24, r28
    2426:	c1 96       	adiw	r24, 0x31	; 49
    2428:	69 96       	adiw	r28, 0x19	; 25
    242a:	9f af       	std	Y+63, r25	; 0x3f
    242c:	8e af       	std	Y+62, r24	; 0x3e
    242e:	69 97       	sbiw	r28, 0x19	; 25
    2430:	e8 e6       	ldi	r30, 0x68	; 104
    2432:	f0 e0       	ldi	r31, 0x00	; 0
    2434:	6b 96       	adiw	r28, 0x1b	; 27
    2436:	ff af       	std	Y+63, r31	; 0x3f
    2438:	ee af       	std	Y+62, r30	; 0x3e
    243a:	6b 97       	sbiw	r28, 0x1b	; 27
    243c:	f8 e0       	ldi	r31, 0x08	; 8
    243e:	6c 96       	adiw	r28, 0x1c	; 28
    2440:	ff af       	std	Y+63, r31	; 0x3f
    2442:	6c 97       	sbiw	r28, 0x1c	; 28
    2444:	6b 96       	adiw	r28, 0x1b	; 27
    2446:	ee ad       	ldd	r30, Y+62	; 0x3e
    2448:	ff ad       	ldd	r31, Y+63	; 0x3f
    244a:	6b 97       	sbiw	r28, 0x1b	; 27
    244c:	00 80       	ld	r0, Z
    244e:	6b 96       	adiw	r28, 0x1b	; 27
    2450:	8e ad       	ldd	r24, Y+62	; 0x3e
    2452:	9f ad       	ldd	r25, Y+63	; 0x3f
    2454:	6b 97       	sbiw	r28, 0x1b	; 27
    2456:	01 96       	adiw	r24, 0x01	; 1
    2458:	6b 96       	adiw	r28, 0x1b	; 27
    245a:	9f af       	std	Y+63, r25	; 0x3f
    245c:	8e af       	std	Y+62, r24	; 0x3e
    245e:	6b 97       	sbiw	r28, 0x1b	; 27
    2460:	69 96       	adiw	r28, 0x19	; 25
    2462:	ee ad       	ldd	r30, Y+62	; 0x3e
    2464:	ff ad       	ldd	r31, Y+63	; 0x3f
    2466:	69 97       	sbiw	r28, 0x19	; 25
    2468:	00 82       	st	Z, r0
    246a:	69 96       	adiw	r28, 0x19	; 25
    246c:	8e ad       	ldd	r24, Y+62	; 0x3e
    246e:	9f ad       	ldd	r25, Y+63	; 0x3f
    2470:	69 97       	sbiw	r28, 0x19	; 25
    2472:	01 96       	adiw	r24, 0x01	; 1
    2474:	69 96       	adiw	r28, 0x19	; 25
    2476:	9f af       	std	Y+63, r25	; 0x3f
    2478:	8e af       	std	Y+62, r24	; 0x3e
    247a:	69 97       	sbiw	r28, 0x19	; 25
    247c:	6c 96       	adiw	r28, 0x1c	; 28
    247e:	9f ad       	ldd	r25, Y+63	; 0x3f
    2480:	6c 97       	sbiw	r28, 0x1c	; 28
    2482:	91 50       	subi	r25, 0x01	; 1
    2484:	6c 96       	adiw	r28, 0x1c	; 28
    2486:	9f af       	std	Y+63, r25	; 0x3f
    2488:	6c 97       	sbiw	r28, 0x1c	; 28
    248a:	6c 96       	adiw	r28, 0x1c	; 28
    248c:	ef ad       	ldd	r30, Y+63	; 0x3f
    248e:	6c 97       	sbiw	r28, 0x1c	; 28
    2490:	ee 23       	and	r30, r30
    2492:	c1 f6       	brne	.-80     	; 0x2444 <main+0x29a>
	HLCD_voidWriteCustom(L_Rchar,0);
    2494:	ce 01       	movw	r24, r28
    2496:	c1 96       	adiw	r24, 0x31	; 49
    2498:	60 e0       	ldi	r22, 0x00	; 0
    249a:	0e 94 bc 0b 	call	0x1778	; 0x1778 <HLCD_voidWriteCustom>
	HLCD_voidWriteCustom(L_Yechar,1);
    249e:	ce 01       	movw	r24, r28
    24a0:	89 96       	adiw	r24, 0x29	; 41
    24a2:	61 e0       	ldi	r22, 0x01	; 1
    24a4:	0e 94 bc 0b 	call	0x1778	; 0x1778 <HLCD_voidWriteCustom>
	HLCD_voidWriteCustom(L_SMchar,2);
    24a8:	ce 01       	movw	r24, r28
    24aa:	81 96       	adiw	r24, 0x21	; 33
    24ac:	62 e0       	ldi	r22, 0x02	; 2
    24ae:	0e 94 bc 0b 	call	0x1778	; 0x1778 <HLCD_voidWriteCustom>
	HLCD_voidWriteCustom(L_Schar,3);
    24b2:	ce 01       	movw	r24, r28
    24b4:	49 96       	adiw	r24, 0x19	; 25
    24b6:	63 e0       	ldi	r22, 0x03	; 3
    24b8:	0e 94 bc 0b 	call	0x1778	; 0x1778 <HLCD_voidWriteCustom>
	HLCD_voidWriteCustom(L_Dchar,4);
    24bc:	ce 01       	movw	r24, r28
    24be:	41 96       	adiw	r24, 0x11	; 17
    24c0:	64 e0       	ldi	r22, 0x04	; 4
    24c2:	0e 94 bc 0b 	call	0x1778	; 0x1778 <HLCD_voidWriteCustom>
	HLCD_voidWriteCustom(L_Mchar,5);
    24c6:	ce 01       	movw	r24, r28
    24c8:	01 96       	adiw	r24, 0x01	; 1
    24ca:	65 e0       	ldi	r22, 0x05	; 5
    24cc:	0e 94 bc 0b 	call	0x1778	; 0x1778 <HLCD_voidWriteCustom>
	HLCD_voidWriteCustom(L_7char,6);
    24d0:	ce 01       	movw	r24, r28
    24d2:	09 96       	adiw	r24, 0x09	; 9
    24d4:	66 e0       	ldi	r22, 0x06	; 6
    24d6:	0e 94 bc 0b 	call	0x1778	; 0x1778 <HLCD_voidWriteCustom>
	HLCD_voidWriteCustom(L_Mchar,7);
    24da:	ce 01       	movw	r24, r28
    24dc:	01 96       	adiw	r24, 0x01	; 1
    24de:	67 e0       	ldi	r22, 0x07	; 7
    24e0:	0e 94 bc 0b 	call	0x1778	; 0x1778 <HLCD_voidWriteCustom>


	HLCD_voidSetCursor(0,0);
    24e4:	80 e0       	ldi	r24, 0x00	; 0
    24e6:	60 e0       	ldi	r22, 0x00	; 0
    24e8:	0e 94 a1 0b 	call	0x1742	; 0x1742 <HLCD_voidSetCursor>
	HLCD_voidSendChar(0);
    24ec:	80 e0       	ldi	r24, 0x00	; 0
    24ee:	0e 94 71 08 	call	0x10e2	; 0x10e2 <HLCD_voidSendChar>
	HLCD_voidSetCursor(0,1);
    24f2:	80 e0       	ldi	r24, 0x00	; 0
    24f4:	61 e0       	ldi	r22, 0x01	; 1
    24f6:	0e 94 a1 0b 	call	0x1742	; 0x1742 <HLCD_voidSetCursor>
	HLCD_voidSendChar(1);
    24fa:	81 e0       	ldi	r24, 0x01	; 1
    24fc:	0e 94 71 08 	call	0x10e2	; 0x10e2 <HLCD_voidSendChar>
	HLCD_voidSetCursor(0,2);
    2500:	80 e0       	ldi	r24, 0x00	; 0
    2502:	62 e0       	ldi	r22, 0x02	; 2
    2504:	0e 94 a1 0b 	call	0x1742	; 0x1742 <HLCD_voidSetCursor>
	HLCD_voidSendChar(2);
    2508:	82 e0       	ldi	r24, 0x02	; 2
    250a:	0e 94 71 08 	call	0x10e2	; 0x10e2 <HLCD_voidSendChar>
	HLCD_voidSetCursor(0,3);
    250e:	80 e0       	ldi	r24, 0x00	; 0
    2510:	63 e0       	ldi	r22, 0x03	; 3
    2512:	0e 94 a1 0b 	call	0x1742	; 0x1742 <HLCD_voidSetCursor>
	HLCD_voidSendChar(3);
    2516:	83 e0       	ldi	r24, 0x03	; 3
    2518:	0e 94 71 08 	call	0x10e2	; 0x10e2 <HLCD_voidSendChar>
	HLCD_voidSendChar(' ');
    251c:	80 e2       	ldi	r24, 0x20	; 32
    251e:	0e 94 71 08 	call	0x10e2	; 0x10e2 <HLCD_voidSendChar>
	HLCD_voidSetCursor(0,5);
    2522:	80 e0       	ldi	r24, 0x00	; 0
    2524:	65 e0       	ldi	r22, 0x05	; 5
    2526:	0e 94 a1 0b 	call	0x1742	; 0x1742 <HLCD_voidSetCursor>
	HLCD_voidSendChar(4);
    252a:	84 e0       	ldi	r24, 0x04	; 4
    252c:	0e 94 71 08 	call	0x10e2	; 0x10e2 <HLCD_voidSendChar>
	HLCD_voidSetCursor(0,6);
    2530:	80 e0       	ldi	r24, 0x00	; 0
    2532:	66 e0       	ldi	r22, 0x06	; 6
    2534:	0e 94 a1 0b 	call	0x1742	; 0x1742 <HLCD_voidSetCursor>
	HLCD_voidSendChar(5);
    2538:	85 e0       	ldi	r24, 0x05	; 5
    253a:	0e 94 71 08 	call	0x10e2	; 0x10e2 <HLCD_voidSendChar>
	HLCD_voidSetCursor(0,7);
    253e:	80 e0       	ldi	r24, 0x00	; 0
    2540:	67 e0       	ldi	r22, 0x07	; 7
    2542:	0e 94 a1 0b 	call	0x1742	; 0x1742 <HLCD_voidSetCursor>
	HLCD_voidSendChar(6);
    2546:	86 e0       	ldi	r24, 0x06	; 6
    2548:	0e 94 71 08 	call	0x10e2	; 0x10e2 <HLCD_voidSendChar>
	HLCD_voidSetCursor(0,8);
    254c:	80 e0       	ldi	r24, 0x00	; 0
    254e:	68 e0       	ldi	r22, 0x08	; 8
    2550:	0e 94 a1 0b 	call	0x1742	; 0x1742 <HLCD_voidSetCursor>
	HLCD_voidSendChar(7);
    2554:	87 e0       	ldi	r24, 0x07	; 7
    2556:	0e 94 71 08 	call	0x10e2	; 0x10e2 <HLCD_voidSendChar>
    255a:	ff cf       	rjmp	.-2      	; 0x255a <main+0x3b0>

0000255c <__prologue_saves__>:
    255c:	2f 92       	push	r2
    255e:	3f 92       	push	r3
    2560:	4f 92       	push	r4
    2562:	5f 92       	push	r5
    2564:	6f 92       	push	r6
    2566:	7f 92       	push	r7
    2568:	8f 92       	push	r8
    256a:	9f 92       	push	r9
    256c:	af 92       	push	r10
    256e:	bf 92       	push	r11
    2570:	cf 92       	push	r12
    2572:	df 92       	push	r13
    2574:	ef 92       	push	r14
    2576:	ff 92       	push	r15
    2578:	0f 93       	push	r16
    257a:	1f 93       	push	r17
    257c:	cf 93       	push	r28
    257e:	df 93       	push	r29
    2580:	cd b7       	in	r28, 0x3d	; 61
    2582:	de b7       	in	r29, 0x3e	; 62
    2584:	ca 1b       	sub	r28, r26
    2586:	db 0b       	sbc	r29, r27
    2588:	0f b6       	in	r0, 0x3f	; 63
    258a:	f8 94       	cli
    258c:	de bf       	out	0x3e, r29	; 62
    258e:	0f be       	out	0x3f, r0	; 63
    2590:	cd bf       	out	0x3d, r28	; 61
    2592:	09 94       	ijmp

00002594 <__epilogue_restores__>:
    2594:	2a 88       	ldd	r2, Y+18	; 0x12
    2596:	39 88       	ldd	r3, Y+17	; 0x11
    2598:	48 88       	ldd	r4, Y+16	; 0x10
    259a:	5f 84       	ldd	r5, Y+15	; 0x0f
    259c:	6e 84       	ldd	r6, Y+14	; 0x0e
    259e:	7d 84       	ldd	r7, Y+13	; 0x0d
    25a0:	8c 84       	ldd	r8, Y+12	; 0x0c
    25a2:	9b 84       	ldd	r9, Y+11	; 0x0b
    25a4:	aa 84       	ldd	r10, Y+10	; 0x0a
    25a6:	b9 84       	ldd	r11, Y+9	; 0x09
    25a8:	c8 84       	ldd	r12, Y+8	; 0x08
    25aa:	df 80       	ldd	r13, Y+7	; 0x07
    25ac:	ee 80       	ldd	r14, Y+6	; 0x06
    25ae:	fd 80       	ldd	r15, Y+5	; 0x05
    25b0:	0c 81       	ldd	r16, Y+4	; 0x04
    25b2:	1b 81       	ldd	r17, Y+3	; 0x03
    25b4:	aa 81       	ldd	r26, Y+2	; 0x02
    25b6:	b9 81       	ldd	r27, Y+1	; 0x01
    25b8:	ce 0f       	add	r28, r30
    25ba:	d1 1d       	adc	r29, r1
    25bc:	0f b6       	in	r0, 0x3f	; 63
    25be:	f8 94       	cli
    25c0:	de bf       	out	0x3e, r29	; 62
    25c2:	0f be       	out	0x3f, r0	; 63
    25c4:	cd bf       	out	0x3d, r28	; 61
    25c6:	ed 01       	movw	r28, r26
    25c8:	08 95       	ret

000025ca <_exit>:
    25ca:	f8 94       	cli

000025cc <__stop_program>:
    25cc:	ff cf       	rjmp	.-2      	; 0x25cc <__stop_program>
