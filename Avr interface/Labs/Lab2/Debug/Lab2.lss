
Lab2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000236  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000624  00000000  00000000  0000028c  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000007a7  00000000  00000000  000008b0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <main>
  64:	0c 94 19 01 	jmp	0x232	; 0x232 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <MDIO_voidSetPortDirection>:
void MDIO_voidSetPortDirection
(
	u8 ARG_u8Port,
	u8 ARG_u8Direction
)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	00 d0       	rcall	.+0      	; 0x72 <MDIO_voidSetPortDirection+0x6>
  72:	00 d0       	rcall	.+0      	; 0x74 <MDIO_voidSetPortDirection+0x8>
  74:	cd b7       	in	r28, 0x3d	; 61
  76:	de b7       	in	r29, 0x3e	; 62
  78:	89 83       	std	Y+1, r24	; 0x01
  7a:	6a 83       	std	Y+2, r22	; 0x02
	switch(ARG_u8Port)
  7c:	89 81       	ldd	r24, Y+1	; 0x01
  7e:	28 2f       	mov	r18, r24
  80:	30 e0       	ldi	r19, 0x00	; 0
  82:	3c 83       	std	Y+4, r19	; 0x04
  84:	2b 83       	std	Y+3, r18	; 0x03
  86:	8b 81       	ldd	r24, Y+3	; 0x03
  88:	9c 81       	ldd	r25, Y+4	; 0x04
  8a:	81 30       	cpi	r24, 0x01	; 1
  8c:	91 05       	cpc	r25, r1
  8e:	d1 f0       	breq	.+52     	; 0xc4 <MDIO_voidSetPortDirection+0x58>
  90:	2b 81       	ldd	r18, Y+3	; 0x03
  92:	3c 81       	ldd	r19, Y+4	; 0x04
  94:	22 30       	cpi	r18, 0x02	; 2
  96:	31 05       	cpc	r19, r1
  98:	2c f4       	brge	.+10     	; 0xa4 <MDIO_voidSetPortDirection+0x38>
  9a:	8b 81       	ldd	r24, Y+3	; 0x03
  9c:	9c 81       	ldd	r25, Y+4	; 0x04
  9e:	00 97       	sbiw	r24, 0x00	; 0
  a0:	61 f0       	breq	.+24     	; 0xba <MDIO_voidSetPortDirection+0x4e>
  a2:	1e c0       	rjmp	.+60     	; 0xe0 <MDIO_voidSetPortDirection+0x74>
  a4:	2b 81       	ldd	r18, Y+3	; 0x03
  a6:	3c 81       	ldd	r19, Y+4	; 0x04
  a8:	22 30       	cpi	r18, 0x02	; 2
  aa:	31 05       	cpc	r19, r1
  ac:	81 f0       	breq	.+32     	; 0xce <MDIO_voidSetPortDirection+0x62>
  ae:	8b 81       	ldd	r24, Y+3	; 0x03
  b0:	9c 81       	ldd	r25, Y+4	; 0x04
  b2:	83 30       	cpi	r24, 0x03	; 3
  b4:	91 05       	cpc	r25, r1
  b6:	81 f0       	breq	.+32     	; 0xd8 <MDIO_voidSetPortDirection+0x6c>
  b8:	13 c0       	rjmp	.+38     	; 0xe0 <MDIO_voidSetPortDirection+0x74>
	{
		case MDIO_PORTA:GPIOA->DDR=ARG_u8Direction;break;
  ba:	e9 e3       	ldi	r30, 0x39	; 57
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	8a 81       	ldd	r24, Y+2	; 0x02
  c0:	81 83       	std	Z+1, r24	; 0x01
  c2:	0e c0       	rjmp	.+28     	; 0xe0 <MDIO_voidSetPortDirection+0x74>
		case MDIO_PORTB:GPIOB->DDR=ARG_u8Direction;break;
  c4:	e6 e3       	ldi	r30, 0x36	; 54
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	8a 81       	ldd	r24, Y+2	; 0x02
  ca:	81 83       	std	Z+1, r24	; 0x01
  cc:	09 c0       	rjmp	.+18     	; 0xe0 <MDIO_voidSetPortDirection+0x74>
		case MDIO_PORTC:GPIOC->DDR=ARG_u8Direction;break;
  ce:	e3 e3       	ldi	r30, 0x33	; 51
  d0:	f0 e0       	ldi	r31, 0x00	; 0
  d2:	8a 81       	ldd	r24, Y+2	; 0x02
  d4:	81 83       	std	Z+1, r24	; 0x01
  d6:	04 c0       	rjmp	.+8      	; 0xe0 <MDIO_voidSetPortDirection+0x74>
		case MDIO_PORTD:GPIOD->DDR=ARG_u8Direction;break;
  d8:	e0 e3       	ldi	r30, 0x30	; 48
  da:	f0 e0       	ldi	r31, 0x00	; 0
  dc:	8a 81       	ldd	r24, Y+2	; 0x02
  de:	81 83       	std	Z+1, r24	; 0x01
		default:/* MISRA RULES */break;
	}
}
  e0:	0f 90       	pop	r0
  e2:	0f 90       	pop	r0
  e4:	0f 90       	pop	r0
  e6:	0f 90       	pop	r0
  e8:	cf 91       	pop	r28
  ea:	df 91       	pop	r29
  ec:	08 95       	ret

000000ee <MDIO_voidSetPortValue>:
void MDIO_voidSetPortValue
(
	u8 ARG_u8Port,
	u8 ARG_u8Value
)
{
  ee:	df 93       	push	r29
  f0:	cf 93       	push	r28
  f2:	00 d0       	rcall	.+0      	; 0xf4 <MDIO_voidSetPortValue+0x6>
  f4:	00 d0       	rcall	.+0      	; 0xf6 <MDIO_voidSetPortValue+0x8>
  f6:	cd b7       	in	r28, 0x3d	; 61
  f8:	de b7       	in	r29, 0x3e	; 62
  fa:	89 83       	std	Y+1, r24	; 0x01
  fc:	6a 83       	std	Y+2, r22	; 0x02
	switch(ARG_u8Port)
  fe:	89 81       	ldd	r24, Y+1	; 0x01
 100:	28 2f       	mov	r18, r24
 102:	30 e0       	ldi	r19, 0x00	; 0
 104:	3c 83       	std	Y+4, r19	; 0x04
 106:	2b 83       	std	Y+3, r18	; 0x03
 108:	8b 81       	ldd	r24, Y+3	; 0x03
 10a:	9c 81       	ldd	r25, Y+4	; 0x04
 10c:	81 30       	cpi	r24, 0x01	; 1
 10e:	91 05       	cpc	r25, r1
 110:	d1 f0       	breq	.+52     	; 0x146 <MDIO_voidSetPortValue+0x58>
 112:	2b 81       	ldd	r18, Y+3	; 0x03
 114:	3c 81       	ldd	r19, Y+4	; 0x04
 116:	22 30       	cpi	r18, 0x02	; 2
 118:	31 05       	cpc	r19, r1
 11a:	2c f4       	brge	.+10     	; 0x126 <MDIO_voidSetPortValue+0x38>
 11c:	8b 81       	ldd	r24, Y+3	; 0x03
 11e:	9c 81       	ldd	r25, Y+4	; 0x04
 120:	00 97       	sbiw	r24, 0x00	; 0
 122:	61 f0       	breq	.+24     	; 0x13c <MDIO_voidSetPortValue+0x4e>
 124:	1e c0       	rjmp	.+60     	; 0x162 <MDIO_voidSetPortValue+0x74>
 126:	2b 81       	ldd	r18, Y+3	; 0x03
 128:	3c 81       	ldd	r19, Y+4	; 0x04
 12a:	22 30       	cpi	r18, 0x02	; 2
 12c:	31 05       	cpc	r19, r1
 12e:	81 f0       	breq	.+32     	; 0x150 <MDIO_voidSetPortValue+0x62>
 130:	8b 81       	ldd	r24, Y+3	; 0x03
 132:	9c 81       	ldd	r25, Y+4	; 0x04
 134:	83 30       	cpi	r24, 0x03	; 3
 136:	91 05       	cpc	r25, r1
 138:	81 f0       	breq	.+32     	; 0x15a <MDIO_voidSetPortValue+0x6c>
 13a:	13 c0       	rjmp	.+38     	; 0x162 <MDIO_voidSetPortValue+0x74>
	{
		case MDIO_PORTA:GPIOA->PORT = ARG_u8Value ;break;
 13c:	e9 e3       	ldi	r30, 0x39	; 57
 13e:	f0 e0       	ldi	r31, 0x00	; 0
 140:	8a 81       	ldd	r24, Y+2	; 0x02
 142:	82 83       	std	Z+2, r24	; 0x02
 144:	0e c0       	rjmp	.+28     	; 0x162 <MDIO_voidSetPortValue+0x74>
		case MDIO_PORTB:GPIOB->PORT = ARG_u8Value ;break;
 146:	e6 e3       	ldi	r30, 0x36	; 54
 148:	f0 e0       	ldi	r31, 0x00	; 0
 14a:	8a 81       	ldd	r24, Y+2	; 0x02
 14c:	82 83       	std	Z+2, r24	; 0x02
 14e:	09 c0       	rjmp	.+18     	; 0x162 <MDIO_voidSetPortValue+0x74>
		case MDIO_PORTC:GPIOC->PORT = ARG_u8Value ;break;
 150:	e3 e3       	ldi	r30, 0x33	; 51
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	8a 81       	ldd	r24, Y+2	; 0x02
 156:	82 83       	std	Z+2, r24	; 0x02
 158:	04 c0       	rjmp	.+8      	; 0x162 <MDIO_voidSetPortValue+0x74>
		case MDIO_PORTD:GPIOD->PORT = ARG_u8Value ;break;
 15a:	e0 e3       	ldi	r30, 0x30	; 48
 15c:	f0 e0       	ldi	r31, 0x00	; 0
 15e:	8a 81       	ldd	r24, Y+2	; 0x02
 160:	82 83       	std	Z+2, r24	; 0x02
		default:/* MISRA RULES */break;
	}
	
	
}
 162:	0f 90       	pop	r0
 164:	0f 90       	pop	r0
 166:	0f 90       	pop	r0
 168:	0f 90       	pop	r0
 16a:	cf 91       	pop	r28
 16c:	df 91       	pop	r29
 16e:	08 95       	ret

00000170 <MDIO_u8GetPortValue>:

u8 MDIO_u8GetPortValue
(
	u8 ARG_u8Port
)
{
 170:	df 93       	push	r29
 172:	cf 93       	push	r28
 174:	00 d0       	rcall	.+0      	; 0x176 <MDIO_u8GetPortValue+0x6>
 176:	00 d0       	rcall	.+0      	; 0x178 <MDIO_u8GetPortValue+0x8>
 178:	cd b7       	in	r28, 0x3d	; 61
 17a:	de b7       	in	r29, 0x3e	; 62
 17c:	8a 83       	std	Y+2, r24	; 0x02
	u8 L_u8Value =0x00;
 17e:	19 82       	std	Y+1, r1	; 0x01
	switch(ARG_u8Port)
 180:	8a 81       	ldd	r24, Y+2	; 0x02
 182:	28 2f       	mov	r18, r24
 184:	30 e0       	ldi	r19, 0x00	; 0
 186:	3c 83       	std	Y+4, r19	; 0x04
 188:	2b 83       	std	Y+3, r18	; 0x03
 18a:	8b 81       	ldd	r24, Y+3	; 0x03
 18c:	9c 81       	ldd	r25, Y+4	; 0x04
 18e:	81 30       	cpi	r24, 0x01	; 1
 190:	91 05       	cpc	r25, r1
 192:	d1 f0       	breq	.+52     	; 0x1c8 <MDIO_u8GetPortValue+0x58>
 194:	2b 81       	ldd	r18, Y+3	; 0x03
 196:	3c 81       	ldd	r19, Y+4	; 0x04
 198:	22 30       	cpi	r18, 0x02	; 2
 19a:	31 05       	cpc	r19, r1
 19c:	2c f4       	brge	.+10     	; 0x1a8 <MDIO_u8GetPortValue+0x38>
 19e:	8b 81       	ldd	r24, Y+3	; 0x03
 1a0:	9c 81       	ldd	r25, Y+4	; 0x04
 1a2:	00 97       	sbiw	r24, 0x00	; 0
 1a4:	61 f0       	breq	.+24     	; 0x1be <MDIO_u8GetPortValue+0x4e>
 1a6:	1e c0       	rjmp	.+60     	; 0x1e4 <MDIO_u8GetPortValue+0x74>
 1a8:	2b 81       	ldd	r18, Y+3	; 0x03
 1aa:	3c 81       	ldd	r19, Y+4	; 0x04
 1ac:	22 30       	cpi	r18, 0x02	; 2
 1ae:	31 05       	cpc	r19, r1
 1b0:	81 f0       	breq	.+32     	; 0x1d2 <MDIO_u8GetPortValue+0x62>
 1b2:	8b 81       	ldd	r24, Y+3	; 0x03
 1b4:	9c 81       	ldd	r25, Y+4	; 0x04
 1b6:	83 30       	cpi	r24, 0x03	; 3
 1b8:	91 05       	cpc	r25, r1
 1ba:	81 f0       	breq	.+32     	; 0x1dc <MDIO_u8GetPortValue+0x6c>
 1bc:	13 c0       	rjmp	.+38     	; 0x1e4 <MDIO_u8GetPortValue+0x74>
	{
		case MDIO_PORTA:L_u8Value = GPIOA->PIN ;break;
 1be:	e9 e3       	ldi	r30, 0x39	; 57
 1c0:	f0 e0       	ldi	r31, 0x00	; 0
 1c2:	80 81       	ld	r24, Z
 1c4:	89 83       	std	Y+1, r24	; 0x01
 1c6:	0e c0       	rjmp	.+28     	; 0x1e4 <MDIO_u8GetPortValue+0x74>
		case MDIO_PORTB:L_u8Value = GPIOB->PIN ;break;
 1c8:	e6 e3       	ldi	r30, 0x36	; 54
 1ca:	f0 e0       	ldi	r31, 0x00	; 0
 1cc:	80 81       	ld	r24, Z
 1ce:	89 83       	std	Y+1, r24	; 0x01
 1d0:	09 c0       	rjmp	.+18     	; 0x1e4 <MDIO_u8GetPortValue+0x74>
		case MDIO_PORTC:L_u8Value = GPIOC->PIN ;break;
 1d2:	e3 e3       	ldi	r30, 0x33	; 51
 1d4:	f0 e0       	ldi	r31, 0x00	; 0
 1d6:	80 81       	ld	r24, Z
 1d8:	89 83       	std	Y+1, r24	; 0x01
 1da:	04 c0       	rjmp	.+8      	; 0x1e4 <MDIO_u8GetPortValue+0x74>
		case MDIO_PORTD:L_u8Value = GPIOD->PIN ;break;
 1dc:	e0 e3       	ldi	r30, 0x30	; 48
 1de:	f0 e0       	ldi	r31, 0x00	; 0
 1e0:	80 81       	ld	r24, Z
 1e2:	89 83       	std	Y+1, r24	; 0x01
		default:/* MISRA RULES */break;
	}
	return L_u8Value;
 1e4:	89 81       	ldd	r24, Y+1	; 0x01
}
 1e6:	0f 90       	pop	r0
 1e8:	0f 90       	pop	r0
 1ea:	0f 90       	pop	r0
 1ec:	0f 90       	pop	r0
 1ee:	cf 91       	pop	r28
 1f0:	df 91       	pop	r29
 1f2:	08 95       	ret

000001f4 <main>:
#define HIGH 	0xFF
#define LOW		0x00


int main ()
{
 1f4:	df 93       	push	r29
 1f6:	cf 93       	push	r28
 1f8:	cd b7       	in	r28, 0x3d	; 61
 1fa:	de b7       	in	r29, 0x3e	; 62
	MDIO_voidSetPortDirection(MDIO_PORTA,HIGH);
 1fc:	80 e0       	ldi	r24, 0x00	; 0
 1fe:	6f ef       	ldi	r22, 0xFF	; 255
 200:	0e 94 36 00 	call	0x6c	; 0x6c <MDIO_voidSetPortDirection>
	MDIO_voidSetPortDirection(MDIO_PORTB,LOW);
 204:	81 e0       	ldi	r24, 0x01	; 1
 206:	60 e0       	ldi	r22, 0x00	; 0
 208:	0e 94 36 00 	call	0x6c	; 0x6c <MDIO_voidSetPortDirection>
	MDIO_voidSetPortValue(MDIO_PORTB,HIGH);
 20c:	81 e0       	ldi	r24, 0x01	; 1
 20e:	6f ef       	ldi	r22, 0xFF	; 255
 210:	0e 94 77 00 	call	0xee	; 0xee <MDIO_voidSetPortValue>


	while(1)
	{
		if(MDIO_u8GetPortValue(MDIO_PORTB)==127)
 214:	81 e0       	ldi	r24, 0x01	; 1
 216:	0e 94 b8 00 	call	0x170	; 0x170 <MDIO_u8GetPortValue>
 21a:	8f 37       	cpi	r24, 0x7F	; 127
 21c:	29 f4       	brne	.+10     	; 0x228 <main+0x34>
		{

			MDIO_voidSetPortValue(MDIO_PORTA,LOW);
 21e:	80 e0       	ldi	r24, 0x00	; 0
 220:	60 e0       	ldi	r22, 0x00	; 0
 222:	0e 94 77 00 	call	0xee	; 0xee <MDIO_voidSetPortValue>
 226:	f6 cf       	rjmp	.-20     	; 0x214 <main+0x20>

		}
		else
		{

			MDIO_voidSetPortValue(MDIO_PORTA,HIGH);
 228:	80 e0       	ldi	r24, 0x00	; 0
 22a:	6f ef       	ldi	r22, 0xFF	; 255
 22c:	0e 94 77 00 	call	0xee	; 0xee <MDIO_voidSetPortValue>
 230:	f1 cf       	rjmp	.-30     	; 0x214 <main+0x20>

00000232 <_exit>:
 232:	f8 94       	cli

00000234 <__stop_program>:
 234:	ff cf       	rjmp	.-2      	; 0x234 <__stop_program>
